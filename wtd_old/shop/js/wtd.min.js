function configureConsoleLogger() { if (!window.console || !window.DEBUG_MODE) { var e = function() {};
        window.console = { info: e, log: e, warn: e, debug: e, error: e } } }

function setupAjax() { $.ajaxSetup({ cache: !1 }) }

function loading() { console.warn("'loading()' function is deprecated. Instead use 'LoadingSpinnerView' with require block."), require(["LoadingSpinnerView"], function(e) { e.getSharedInstance().showSpinner() }) }

function loadingComplete() { console.warn("'loadingComplete()' function is deprecated. Instead use 'LoadingSpinnerView' with require block."), require(["LoadingSpinnerView"], function(e) { e.getSharedInstance().hideSpinner() }) }

function leftNavAnimation() { $("#left_nav").find("ul.nav").find("li").find("a").find("span.arrow").click(function(e) { { var t = $(this),
                i = t.attr("data-navigationState"),
                a = t.parents("a.subcategories"),
                r = t.parents("a").siblings("ul.secondary"),
                o = ($("ul.secondary"), t.parents("li"));
            o.attr("data-isocode") } e.preventDefault(), $.getJSON("/search/getSubCategoriesForCategory" + i, function(e) { r.html(""), $.each(e, function(e, t) { r.append('<li><a href="' + t.url + '">' + t.name + " (" + t.refinementCount + ")</a></li>") }), t.toggleClass("open"), a.toggleClass("active"), r.toggleClass("active"), o.toggleClass("active"), r.slideToggle() }) }) }

function productModalEmailEnter() { $(this).on("keypress", function(e) { 13 == e.which && (e.preventDefault(), $(".email-this a.email-send").click()) }) }

function productAddToOrder(e, t) { if ("undefined" != typeof t) { if ($(e).hasClass("button-disabled")) return;
        t.append($("#searchUrl")), loading(), t.submit() } }

function productQuantityEnter(e, t, i) { $(this).one("keyup", function(a) { if (13 == a.which) a.preventDefault(), "undefined" != typeof i && e.value > 0 && (loading(), i.submit());
        else if (8 == a.which) original = e.value, e.value = original.substring(0, original.length - 1);
        else { var r = e.value; if (parseInt(t) > 0 && parseInt(r) > parseInt(t)) { $("#overlimit-check-modal-item-quantity").html(r); var o = $("#overlimit-check-modal-item-confirm"),
                    n = $("#overlimit-check-modal-item-cancel"); return o.off("click"), n.off("click"), o.on("click", function() { modalClose("overlimit-check-modal") }), n.on("click", function() { e.value = "", e.focus(), modalClose("overlimit-check-modal") }), modalOpen("generic-modal", "overlimit-check-modal"), !1 } } }) }

function genericEnterSubmitter(e, t) { $(this).one("keypress", function(e) { 13 == e.which && (e.preventDefault(), $(t).submit()) }) }

function selectStockOrderItem() { $("#stock_order_table").find("tr").click(function() { var e = $(this),
            t = e.children("td.deleter"),
            i = t.children("input");
        e.hasClass("highlighted-for-action") ? (i.prop("checked", !0), e.removeClass("highlighted-for-action")) : (i.prop("checked", !1), e.addClass("highlighted-for-action")) }) }

function setupLanguageChangeHandler() { $(".language-change").click(function() { var e = window.location.href.indexOf("?"),
            t = window.location.href.indexOf("#"),
            i = 0 > t ? window.location.href : window.location.href.substring(0, t); if (0 > e) window.location = i + "?lang=" + $(this).attr("data-isocode");
        else { var a = i.substring(0, e),
                r = i.substring(e + 1),
                o = r.split("&"),
                n = a + "?";
            $.each(o, function(e, t) { var i = t.substring(0, t.indexOf("=")); "lang" !== i && (n += t + "&") }), window.location = n + "lang=" + $(this).attr("data-isocode") } }) }

function setupIconChangeHandler(e) { "fr_CA" === e ? ($(".frenchIcon").show(), $(".enIcon").hide()) : ($(".frenchIcon").hide(), $(".enIcon").show()) }

function modalOpen(e, t) { var i, a = 540,
        r = "auto"; switch (e) {
        case "password":
            r = "125px", a = 225; break;
        case "product":
            r = "auto", a = 540; var o = $("#tabs-" + t);
            o.length > 0 && o.tabs(); break;
        case "refine-by":
            a = 780, r = "564px"; break;
        case "overlimit":
            a = 380, r = "auto"; break;
        case "sample-calculations":
            a = 380; break;
        case "ar-diameters":
            a = 600; break;
        case "ar-diameters-read-only":
            a = 600, i = function() { $(".ar-diameters-footer").addClass("hidden") }; break;
        case "quote-preview":
            r = "auto", a = 945; break;
        case "retail-quote":
            r = "auto", a = "940px", i = function(e) { e.find("input:first").blur() }; break;
        case "fitment-modal":
            a = 480; break;
        case "image-modal":
            a = "350px", r = "350px"; break;
        case "freight-modal":
            a = 580; break;
        case "invoice-modal":
            r = "auto", a = "940px"; break;
        case "memo-modal":
            r = "auto", a = "940px"; break;
        case "add-to-list-modal":
            $(".add-to-list-modal #listCode").val(""), a = 380, r = "auto"; break;
        case "addon-modal":
            r = "auto", a = "auto"; break;
        case "tax-modal":
            r = "auto", a = "auto"; break;
        case "email-file":
            a = "350px", r = "150px"; break;
        default:
            a = 380, r = "auto" } var n = $("#" + t);
    n.dialog({ bgiframe: !0, autoOpen: !1, resizable: !1, width: a, minHeight: 190, show: "fade", hide: "fade", zIndex: 2e3, position: { my: "top", at: "top", offset: "0 52" }, modal: !0, stack: !1, closeOnEscape: !1, open: function() { i && i($(this)), window.setTimeout(function() { jQuery(document).unbind("mousedown.dialog-overlay").unbind("mouseup.dialog-overlay") }, 100), $(".ui-dialog-titlebar").hide(), $(".ui-dialog-titlebar-close").hide(), $(".ui-widget-overlay").click(function() { modalClose(t) }) }, close: function() {} }), n.dialog("open").height(r) }

function modalClose(e) { if ($("#" + e).dialog("close"), "retail-quote-modal" == e && (WebStore.Cart.refreshNavBarComponent("quote"), refreshRetailQuoteData()), "list-item-conflict-modal" == e) { var t = document.referrer;
        window.location.href = t } return "ar-diameters-modal" == e && ($("div.ar-diameters-container td.diameter.data.active").removeClass("active"), $("div.ar-diameters-container td.data.active").removeClass("active"), $("div.ar-diameters-container td.diameter.col-header").removeClass("active")), !1 }

function returnToQuotes(e) { var t = "/quote-setup/product-profiles/new/all/" + e;
    window.location.href = t }

function deleteUserModal(e) { return $("#delete-user-modal").dialog({ bgiframe: !0, autoOpen: !1, resizable: !1, width: 380, minHeight: 190, show: "fade", hide: "fade", zIndex: 2e3, position: { my: "top", at: "top", offset: "0 52" }, modal: !0, stack: !1, closeOnEscape: !1, open: function() { $(".ui-dialog-titlebar").hide(), $(".ui-dialog-titlebar-close").hide(), $(".ui-widget-overlay").click(function() { $("#delete-user-modal").dialog("close") }), $("#deleteUserId").html(e), $("#btn-save").prop("href", "/my-account/" + $("#locationNumber").val() + "/users/" + e + "/delete") }, close: function() {} }), $("#delete-user-modal").dialog("open").height("auto"), !1 }

function utilityBarMenus() { var e = $("#utility_nav");
    e.find("ul li a").length && e.find("#utility-nav li.top-level").each(function() { $(this).children("ul").length && ($(this).children("a").click(function() { $(this).parent().hasClass("open-menu") ? ($(this).parent().removeClass("open-menu"), $("ul", $(this).parent()).stop(!0, !0).slideUp("fast")) : ($(this).parent().addClass("open-menu"), $("ul", $(this).parent()).stop(!0, !0).slideDown("fast")) }), $(this).outside("click", function() { $(this).removeClass("open-menu"), $("ul", this).stop(!0, !0).slideUp("fast") })) }) }

function stockOrderShowNoResults(e) { $(".stock-order-1").hide(), $(".stock-order-2").hide(), $(".stock-order-3").hide(), 5 == e ? $(".stock-order-5").show() : $(".stock-order-4").show() }

function stockOrderHandleResults(e) { var t, i = +$("#stock-order-qty").val(),
        a = $("#stock-order-supp-no").val(),
        r = $("#partNumberKey").val(),
        o = 0; for (t in e) o++; var n = $("#stock_order_form").data("quoteallowed") === !0; if (n && o > 0 && ($("#create-quote-link").show(), $(".stock-link-divider").show()), 1 == o) { for (var t in e) { var s = e[t].productNumber,
                l = e[t].partNumberMap[r],
                d = e[t].netPrice,
                c = "product_" + s,
                u = e[t].retailPrice; if (c = c.replace(/\./gi, "_"), 0 != $("#" + c).length) { var h = +$("#" + c + " .qty input").val(),
                    p = h + i;
                1 > p ? $("#" + c).remove() : stockOrderUpdateRecord(c, l, s, p, d, u) } else i >= 1 && ($("#stock-order-items-templateRow").clone().attr("id", c).show().appendTo("#stock-order-items"), stockOrderUpdateRecord(c, l, s, i, d, u));
            stockOrderUpdateTotal(s) } $("#stock-order-supp-no").val(""), $("#stock-order-qty").val(""), stockOrderShowDefault() } else if (1 > o) { var m = $(".stock-order-content .stock-order-4 .message").attr("data-message"),
            g = m.replace("SUPPLIER_NUMBER", a);
        $(".stock-order-content .message").text(g), stockOrderShowNoResults() } else if (o > 1) { $(".duplicate-items").find("tr:gt(1)").remove(); for (var t in e) { var s = e[t].productNumber,
                f = (e[t].mfgpartNumber, e[t].description),
                d = e[t].netPrice,
                c = "duplicate_product_" + t;
            c = c.replace(/\./gi, "_"), $("#duplicate-items-templateRow").clone().attr("id", c).show().appendTo(".duplicate-items"), $("#" + c + " a").each(function() { var i = t;
                $(this).click(function() { var t = new Object;
                    t[i] = e[i], stockOrderHandleResults(t) }) }), $("#" + c + " .supplier").html(s + "<br/>" + f), $("#" + c + " .unit-cost").text(null == d ? "" : formatCurrency(d)), $("#" + c + " .qty").text(i) } stockOrderShowMuptipleResults() } else alert("Unexpected results occurred for this request [" + a + "]") }

function stockOrderUpdateRecord(e, t, i, a, r, o) { var n = r * a;
    null == t && (t = i), $("#" + e + " .supplier span").text(t), $("#" + e + " .supplier input").val(i), $("#" + e + " .supplier input").attr("name", "product"), $("#" + e + " .retail-price input").val(o), $("#" + e + " .qty span").text(a), $("#" + e + " .qty input").val(a), $("#" + e + " .qty input").val(a), $("#" + e + " .qty input").attr("name", "quantity"), $("#" + e + " .unit-cost span").text(null == r ? "" : formatCurrency(r)), $("#" + e + " .unit-cost input").val(r), $("#" + e + " .line-total span").text(formatCurrency(n)), $("#" + e + " .line-total input").val(n) }

function stockOrderUpdateTotal() { var e = 0,
        t = "",
        i = !1;
    $("#stock-order-items tr").each(function() { var a = $(this).find(".unit-cost input").val(),
            r = $(this).find(".qty input").val();
        e += a * r, t = t + $(this).find(".supplier input").val() + " ", i || (i = "" !== $(this).find(".retail-price input").val()) }), i || ($("#create-quote-link").hide(), $(".stock-link-divider").hide()), $("#subtotal").text(formatCurrency(e)) }

function stockOrderShowDefault() { $("#stock-order-supp-no").focus(), $(".stock-order-1").show(), $(".stock-order-2").hide(), $(".stock-order-3").hide(), $(".stock-order-4").hide(), $(".stock-order-5").hide() }

function stockOrderShowMuptipleResults() { $(".stock-order-1").hide(), $(".stock-order-2").hide(), $(".stock-order-3").show(), $(".stock-order-4").hide(), $(".stock-order-5").hide() }

function refreshRetailQuoteData() { require(["jquery", "RetailQuoteBehavior"], function() { var e = "/retail-quote/redesign/refreshQuote/";
        window.location.href = e }) }

function displayUpdatedRetailQuote() { refreshRetailQuoteData(), modalOpen("retail-quote", "retail-quote-modal") }

function isBlank(e) { return null === e || "" === e }

function rqToggleFieldWithInput(e, t, i) { $("#" + e).siblings("a").removeClass("active"), $("#" + e).addClass("active"), $("#" + t).val(i) }

function setComms(e) { var t = $("#" + e),
        i = $("#" + e + "> input");
    t.siblings("div").addClass("disabled"), t.siblings("div").children().addClass("disabled"), t.siblings("div").children("input#textbox").attr("disabled", "disabled"), i.removeClass("disabled"), i.removeAttr("disabled"), t.removeClass("disabled") }

function rqPreviewQuote() { $("#retailQuoteSubmitForm").serialize();
    $("#rqQuotePreviewProfileSelectForm").submit() }

function rqNewProfile(e) { var t = $("#rqCreateNewProfile").val(); switch (t) {
        case "tires":
            window.location = "/quote-setup/product-profiles/new/tires/" + e; break;
        case "wheels":
            window.location = "/quote-setup/product-profiles/new/wheels/" + e; break;
        case "supplies":
            window.location = "/quote-setup/product-profiles/new/supplies/" + e; break;
        case "all":
            window.location = "/quote-setup/product-profiles/new/all/" + e; break;
        case "taxes":
            window.location = "/quote-setup/taxes/add/" + e; break;
        case "fees":
            window.location = "/quote-setup/fees/addNewFees/feesView/" + e + "?aspectUrl=false"; break;
        case "services":
            window.location = "/quote-setup/services/addNewServices/servicesView/" + e + "?aspectUrl=false" } }

function rqValidateProfileDescription(e, t, i) { return $(t).val().length <= 0 ? ($(t).addClass("input-error"), void $(i).removeClass("retail-quote")) : null == e ? !0 : void e.submit() }

function rqChangeProfileDescription() { var e = $("#rqDescriptionHolderText").html();
    $("#rqDescriptionHolder").html(""), $("#rqDescriptionHolder").append('<div class="quote-apply-form"><input type="text" name="description" value="' + e + '" class="save-and-continue" id="rqDescription" />'), $("#rqDescriptionHolder").append("<a class=\"button grey\" onclick=\"rqValidateProfileDescription($('#rqDescriptionForm')[0], $('#rqDescription'), $('#rqValidateProfileDescriptionMessage'));\">Save</a></div>") }

function rqDeleteExistingModal(e, t, i) { $.ajax({ url: "/quote-setup/product-profiles/ajax/name/" + t + "/" + e, type: "get" }).done(function(a) { $("#delete-rqSetup-name").html(a), $("#delete-rqSetup-id").html(e), $("#delete-rqSetup-type").html(t), $("#delete-rqSetup-profileType").val(i), modalOpen("delete-rqSetup-modal", "delete-rqSetup-modal") }) }

function rqDeleteExisting(e, t, i, a) { switch (modalClose("delete-rqSetup-modal"), t) {
        case "profile":
            { $.ajax({ url: "/quote-setup/product-profiles/ajax/delete/" + e, type: "get" }).done(function() { window.location = "/quote-setup/product-profiles/list/" + i + "/" + a }) } break;
        case "taxes":
            { $.ajax({ url: "/quote-setup/taxes/ajax/delete/" + e, type: "get" }).done(function() { window.location = "/quote-setup/taxes/" }) } break;
        case "taxesInline":
            { $.ajax({ url: "/quote-setup/taxes/ajax/delete/" + e, type: "get" }).done(function() { $("#inline-taxes-IdSpan-" + e).html(""), $("#taxRQForm")[0].reset() }) } break;
        case "fees":
            { $.ajax({ url: "/quote-setup/fees/ajax/delete/" + e, type: "get" }).done(function() { window.location = "/quote-setup/fees/" }) } break;
        case "feesInline":
            { $.ajax({ url: "/quote-setup/fees/ajax/delete/" + e, type: "get" }).done(function() { $("#inline-fees-IdSpan-" + e).html(""), $("#feeRQForm")[0].reset() }) } break;
        case "services":
            { $.ajax({ url: "/quote-setup/services/ajax/delete/" + e, type: "get" }).done(function() { window.location = "/quote-setup/services/" }) } break;
        case "servicesInline":
            { $.ajax({ url: "/quote-setup/services/ajax/delete/" + e, type: "get" }).done(function() { $("#inline-services-IdSpan-" + e).html(""), $("#serviceRQForm")[0].reset() }) } } }

function rqChangeEditProfile(e, t, i) { window.location = "/quote-setup/product-profiles/view/" + t + "/" + $("#" + e).val() + "/" + i.toUpperCase() }

function toggleAll(e, t) { e.checked ? $("#" + t + " :checkbox").prop("checked", !0) : $("#" + t + " :checkbox").prop("checked", !1) }

function formatCurrency(e) { e = isNaN(e) || "" === e || null === e ? 0 : e, require(["accounting"], function(t) { return t.formatMoney(e) }) }

function checkUncheckAll(e, t) { var i = 0;
    $("input[name=" + e + "]").each(function() { this.checked === !1 && (i += 1) }), i > 0 ? $("input[name=" + t + "]").prop("checked", !1) : $("input[name=" + t + "]").prop("checked", !0) }

function invoiceDetailModal(e, t, i) { var a = "/my-account/accounting/invoices/details/" + e + "/" + t + "/" + i;
    window.location.href = a }

function rejectOrder(e, t, i, a) { $("#rejectOrderForm").prop("action", WEBROOT + "/my-account/order-approvals/reject/" + e), $("#orderComments").val(t), $("#poNumber").val(i), $("#consumerShipToEmail").val(a), modalOpen("reject-order", "reject-order-modal") }

function refreshListCount() { $.get("/lists/refreshCount", function(e) { $("#lists-menu-item-link-id").replaceWith(e); var t = $("#lists-menu-item-link-id").data("list-count"); if (1 == t && 0 == $("#lists-nav-link").length) { var i = $("#navigation-bar-component").data("listtab-label");
            $("#utility-nav").append('<li class="top-level "><a id="lists-nav-link" class="" onclick="" href="/lists">'.concat(i).concat("</a></li>")) } }) }

function showImageModal(e) { $("#imgModalId").attr("src", e), modalOpen("image-modal", "image-modal") }

function showStatementPDF(e) { loading(), $.getJSON("/my-account/accounting/statements/image/confirm?pathUrl=" + e, function(t) { 0 == t.code ? (window.open("/my-account/accounting/statements/image?pathUrl=" + e), loadingComplete()) : (modalOpen("generic-modal", "image-unavailable-modal"), loadingComplete()) }) }

function stockOrderIssueQuantity(e, t, i) { var a = parseInt($(e).val()),
        r = parseInt($("#fixedQuantity").val()),
        o = parseInt($("#qtyPreChange_" + t).val());
    r -= o, isNaN(a) ? ($("#stockOrderIssue_" + t).val("_" + i), $(e).val(""), $("#qtyPreChange_" + t).val("0")) : ($("#stockOrderIssue_" + t).val(a + "_" + i), r += a, $("#qtyPreChange_" + t).val(a)), r > 0 ? ($("#submitSpan").removeClass("hideVisibility"), $("#fixedQuantity").val(r)) : ($("#submitSpan").addClass("hideVisibility"), $("#fixedQuantity").val("0")) }

function validateNumericInput(e) { var t = e || window.event,
        i = t.keyCode || t.which,
        a = String.fromCharCode(i); return 8 === i ? !0 : void(/[^0-9]/g.test(a) && (t.preventDefault ? t.preventDefault() : t.returnValue = !1)) }

function rqViewAspectDiameterModal(e) { var t = e.split(";");
    $.each(t, function(e, t) { $(document.getElementById(t)).addClass("active") }), window.location.href = "/quote-setup/services/aspectRatiosAndDiameter/view" }

function aspectRatioFormSubmit(e) { if (e) $("#aspectRatio" + e).submit();
    else { var t = $("#description").val(),
            i = $("#marketingDescription").val(),
            a = $("#quantity").val(),
            r = [],
            o = [];
        $.each($("input[name='taxes']:checked"), function() { r.push($(this).val()) }), $.each($("input[name='profiles']:checked"), function() { o.push($(this).val()) }), $("#addOnName").val(t), $("#addOnDescription").val(i), $("#addOnQty").val(a), $("#selectedTaxes").val(r), $("#selectedProfiles").val(o), $("#aspectRatio").submit() } }

function getQueryString(e) { for (var t = window.location.search.substring(1), i = t.split("&"), a = 0; a < i.length; a++) { var r = i[a].split("="); if (r[0] == e) return r[1] } return !1 }

function updateCartLineDetails(e) { loading(), modalClose("add-line-details-modal-" + e); { var t = $("#add-cart-line-details-form-" + e).serialize();
        $.ajax({ url: "/cart/update-cart-line-details", data: t, type: "post" }).done(function() { loadingComplete() }) } }

function escapeSelector(e) { return (e + "").replace(escapeRegex, escapeFunction) }

function toggleMoreDataRow(e) { var t = "#EFEFEF",
        i = "#FFFFFF";
    $.fn.animateBg = function() { return this.animate({ backgroundColor: t }) }, $.fn.animateBgBack = function() { return this.animate({ backgroundColor: i }) }; var a = e.parents(".regular-data").next(".more-data"),
        r = e.parents(".more-data").prev(".regular-data");
    a.length || (a = e.parents("tr").next("tr").next("tr")), r.length || (r = e.parents("more-data").prev(".program-data").prev("regularData")), e.hasClass("same-color-bg-active") ? (e.hasClass("more") && (a.show().children("td"), e.hide(), e.parents(".regular-data").find("a.plus-minus-box-blue.less").show()), e.hasClass("less") && (e.parents(".regular-data").next(".more-data").hide(), e.parents(".regular-data").find("a.plus-minus-box-blue.more").show(), e.hide())) : (e.hasClass("more") && (e.parents(".regular-data").children("td").animateBg().find(".fbg").animateBg(), e.parents(".regular-data").next("tr").children("td").animateBg().find(".fbg").animateBg(), a.show().children("td").animateBg().find(".fbg").animateBg(), e.parents(".regular-data").find("a.plus-minus-box-blue.less").show(), e.hide()), e.hasClass("less") && (e.parents(".regular-data").next(".more-data").hide().children("td").css("backgroundColor", i).find(".fbg").css("backgroundColor", i), e.parents(".regular-data").children("td").animateBgBack().find(".fbg").animateBgBack(), r.prev("regular-data").children("td").animateBgBack().find(".fbg").animateBgBack(), e.parents(".regular-data").find("a.plus-minus-box-blue.more").show(), e.hide())) }

function productModalEmailEnter() { $(this).one("keypress", function(e) { 13 == e.which && (e.preventDefault(), $(".product-ordering .email-this a.email-send").click()) }) }

function handleEnter() { $(this).one("keypress", function(e) { 13 == e.which && (e.preventDefault(), $("#verify-submit").click()) }) }

function toggleStockOrderUnitCost() { $("td.unit-cost span, td.line-total").each(function() { toggleDisplay($(this)) }), $("div.cost-div").each(function() { toggleDisplay($(this)) }) }

function toggleDisplay(e) { "hidden" == e.css("visibility") ? e.css("visibility", "visible") : e.css("visibility", "hidden") }

function callPDPPage(e, t, i, a, r, o, n, s, l) { window.location.href = e + "?weightSystem=" + t + "&frontFitmentId=" + r + "&rearFitmentId=" + o + "&modelId=" + n + "&trimOptionId=" + s + "&vehicleTab=" + l + "&packageUrl=" + encodeURIComponent(i) + "&createPackage=" + a }

function updateTotalShippingCost(e) { for (var t = 0, i = $("#currency").val(), a = 0; a < e.length; a++) t += parseFloat(e[a]); var r = parseFloat(t, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString(); if ("CAD" === i) var o = new Intl.NumberFormat($("#selectedLanguage").val(), { style: "currency", currency: i }).format(r);
    else var o = $("#currencySymbol").val() + r;
    $("#fulfillment-total-price").html("  " + o) }

function updatePaginationDisplay(e, t, i) { sessionStorage.setItem("selectedPage", t), $(".list-view-div-" + e).each(function() { $(this).hide() }), $(".grid-view-div-" + e).each(function() { $(this).hide() }), $("#list-view-div-" + e + "-" + t).show(), $("#grid-view-div-" + e + "-" + t).show(); var a = parseInt($("#resultsPerPage").val()),
        r = parseInt(t),
        o = a * r;
    t == i && (o = "keyword" === $("#search-results-page-type").val() ? "tires" === e ? $("#tiresLength").val() : "wheels" === e ? $("#wheelsLength").val() : "tubes" === e ? $("#tubesLength").val() : $("#suppliesLength").val() : $("#totalLength").val()); var n = a * (r - 1) + 1;
    $("#start-value-" + e).html(n), $("#end-value-" + e).html(o), updatePaginationControl(t, i) }

function updatePaginationControl(e, t) { var i = "button-disabled",
        a = $(".ui-spinner-up"),
        r = $(".ui-spinner-down"),
        o = $(".btn-next"),
        n = $(".btn-prev");
    n.removeClass(i), r.removeClass(i), a.removeClass(i), o.removeClass(i), e == t ? (a.addClass(i), o.addClass(i), 1 == e && (n.addClass(i), r.addClass(i))) : 1 == e && (n.addClass(i), r.addClass(i)) }

function preventClickJacking() { window.self !== window.top && (window.top.location.href = window.location.href) }

function restoreAccordionVisibilityStatus() { var e = "keyword-header",
        t = "vehicle-guide-heading",
        i = "product-type-heading",
        a = "homepage-lists-heading",
        r = "vin-heading",
        o = "license-plate-heading",
        n = sessionStorage.getItem(e),
        s = sessionStorage.getItem(t),
        l = sessionStorage.getItem(i),
        d = sessionStorage.getItem(a);
    vinAccordionStatus = sessionStorage.getItem(r), licensePlateAccordionStatus = sessionStorage.getItem(o), "off" == n ? hideAccordion(e) : "on" == n && showAccordion(e), "off" == s ? hideAccordion(t) : "on" == s && showAccordion(t), "off" == l ? hideAccordion(i) : "on" == l && showAccordion(i), $("#myListsHasRecurring").val() || "on" == d ? showAccordion(a) : "off" == d && hideAccordion(a), "off" == vinAccordionStatus ? hideAccordion(r) : "on" == vinAccordionStatus && showAccordion(r), "off" == licensePlateAccordionStatus ? hideAccordion(o) : "on" == licensePlateAccordionStatus && showAccordion(o) }

function hideAccordion(e) { var t = "/_ui/desktop/common/images/ArrowRt_GreyAcc.png";
    $("#" + e).parent().find("div.accordion-container").hide(), $("#" + e).find("img.arrow-image").attr("src", t) }

function showAccordion(e) { var t = "/_ui/desktop/common/images/leftDownCaret.png";
    $("#" + e).parent().find("div.accordion-container").show(), $("#" + e).find("img.arrow-image").attr("src", t) }

function fontAwesomeSettingIE() {-1 !== navigator.appVersion.indexOf("MSIE 7.") && ($(".fa-phone").html("&#xf095;"), $(".fa-map-marker").html("&#xf041;"), $(".fa-caret-down").html("&#xf0d7;"), $(".fa-truck").html("&#xf0d1;"), $(".fa-shopping-cart").html("&#xf07a;"), $(".fa-question-circle").html("&#xf059;"), $(".icon-Contact").html("&#xe900;"), $(".icon-Home").html("&#xe901;"), $(".icon-Resources").html("&#xe902;"), $(".icon-Supplies").html("&#xe903;"), $(".icon-Tires").html("&#xe904;"), $(".icon-Tubes").html("&#xe905;"), $(".icon-ValueBuys").html("&#xe906;"), $(".icon-Wheels").html("&#xe907;"), $(".icon-Custom").html("&#xe909;"), $(".program-status-bubble").css("position", "absolute"), $(".accordion-wrap button.btn").css("text-transform", "uppercase"), $(".fa-exclamation-circle").html("&#xf06a;"), $(".close-btn-left").click(function() { var e = parseInt($(this).closest("div").parent().parent().css("z-index"));
        $(this).closest("div").parent().parent().css("z-index", e - 10), $(this).closest("div").parent().parent().removeClass("position-relative higher-z-index"), $(this).closest("div").parent().parent().addClass("position-static") }), $(".close-btn-right").click(function() { var e = parseInt($(this).closest("div").parent().parent().css("z-index"));
        $(this).closest("div").parent().parent().css("z-index", e - 10), $(this).closest("div").parent().parent().removeClass("position-relative higher-z-index"), $(this).closest("div").parent().parent().addClass("position-static") }), $(".image-icon-blue-question").click(function() { var e = parseInt($(this).closest("div").css("z-index"));
        $(this).closest("div").css("z-index", e + 10), $(this).closest("div").addClass("position-relative"), $(this).closest("div").removeClass("position-static") }), $(".accordion-wrap h4").click(function() { var e = parseInt($(this).closest("div").css("z-index"));
        $(this).closest("div").css("z-index", e + 10), $(this).next().next().hide(), $(this).closest("div").removeClass("position-relative"), $(this).closest("div").addClass("position-static") })), -1 !== navigator.appVersion.indexOf("MSIE 9.0") && $("select").addClass("select-box-padding") }

function isIE() { var e = navigator.userAgent.toLowerCase(); return -1 != e.indexOf("msie") ? parseInt(e.split("msie")[1]) : !1 }

function collapseAccordion() { $(".order-history-accordion-div, .myreturns-accordion-div, .myquotes-accordion-div, .mywarranty-accordion-div").addClass("hidden"), $(".orderhistory-arrow-down-right, .myreturns-arrow-down-right, .myquotes-arrow-down-right, .mywarranty-arrow-down-right").attr("src", "/_ui/desktop/common/images/ArrowRt_GreyAcc.png"), $(".orderhistory-arrow-down-right, .myreturns-arrow-down-right, .myquotes-arrow-down-right, .mywarranty-arrow-down-right").addClass("image-icon-right-arrow"), $(".orderhistory-arrow-down-right, .myreturns-arrow-down-right, .myquotes-arrow-down-right, .mywarranty-arrow-down-right").removeClass("image-icon-down-arrow") }

function updateRangeErrorMessage() { $(".order-history-error").html() && $(".order-history-error").html().replace("-", "") }

function getCurrentDate(e) { if (e) { var t = new Date,
            i = t.getTime(),
            a = 6e4 * t.getTimezoneOffset(),
            r = i + a,
            o = parseInt(e.split(":")[0]),
            n = parseInt(e.split(":")[1]) / 60,
            s = o + n,
            l = r + 36e5 * s,
            d = new Date(l); return d } }

function loadOrderingData(e, t) { var i = "true" == $("#liteStyle").val(),
        a = $(".noSort").length > 0; if (i && a);
    else if ($("." + e).length > 0) { var r, o = t,
            n = $("." + e).eq(0);
        $("." + e + " .accordion-wrap").hide(), $(".quick-links").hide(); for (var s = 0; s < o.length; s++) r = $("#" + o[s], n).clone(!0, !0), $("#" + o[s], n).remove(), $(r).appendTo(n).show(); "right-nav" == e && (r.length > 0 ? $(r).after($(".quick-links").show()) : $(".accordion-wrap:last").after($(".quick-links").show())) } }

function checkExpireDays() { $("#quoteExpireDays").keyup(function() { var e = this.value.match(/\d*/g).join("").replace(/-*$/g, "");
        e = e.replace(/^(0*)/, ""), $(this).val(e); var t = $(this).attr("data-webexpiry"),
            i = $("#quoteExpireDays").val();
        parseInt(i) > parseInt(t) ? ($(".errormsg").show(), $("#location-settings-save").addClass("disabled")) : ($(".errormsg").hide(), $("#location-settings-save").removeClass("disabled")) }), $("#quoteExpireDays").keypress(function(e) { 13 == e.keyCode && e.preventDefault() }) }

function selectListValue() { $(".textbox-dropdown li span.listValue").click(function() { $(".textbox-dropdown li span.listValue").removeClass("selected"), $(this).addClass("selected"), $(".inputDropdown").val($(this).text()), $(".textbox-dropdown").slideUp() }) }

function removeQuoteStatus(e) { var t = $("#locationNumber").val();
    $.ajax({ type: "GET", cache: !1, url: "/my-account/locations/status/remove/" + t + "?status=" + e, success: function() { console.log("success status remove") }, error: function() { console.log("error occured while removing") } }) }

function addQuoteStatus(e) { var t = $("#selectDropdown").val(),
        i = $("#locationNumber").val();
    $.ajax({ type: "GET", cache: !1, url: "/my-account/locations/status/add/" + i + "?status=" + t, success: function() { console.log("success status added") }, error: function() { console.log("error occured while adding") } }); var a = e + 1; return a }

function editQuoteStatus(e, t) { var i = $("#locationNumber").val();
    $.ajax({ type: "GET", cache: !1, url: "/my-account/locations/status/edit/" + i + "?oldstatus=" + e + "&updatedStatus=" + t, success: function() { console.log("success status remove") }, error: function() { console.log("error occured while updating") } }) }

function deleteQuote() { var e = $("#quoteCode").text(); if ($("input[name='optionsCheckbox']:checked").length > 0) { var t = [];
        $.each($("input[name='optionsCheckbox']:checked"), function() { t.push("Other" == $(this).val() ? $("#otherTextarea").val() : $(this).val()) }), $.ajax({ type: "GET", cache: !1, url: "/retail-quote/deleteQuote?quoteCode=" + e + "&reason=" + t, success: function() { var e = "/retail-quote/quote-summary?delete=true";
                $(location).attr("href", e) }, error: function() { console.log("Error while deleting quote") } }) } else $("#deleteErrorMsg").show() }

function getUpdatedQuoteComments() { var e = $("#quoteCode").text(),
        t = encodeURIComponent($("#commentText").val());
    $.ajax({ type: "GET", cache: !1, url: "/retail-quote/getUpdatedQuoteComments?comment=" + t + "&quoteCode=" + e, beforeSend: function() { loading() }, success: function(e) { $("#quoteComments").html(e) }, complete: function() { loadingComplete(), detailTextArea(), $(".commentWindow").css("display", "block"), $("#hideViewComments").html(saveQuoteErrorMessages["text.quote.detail.hideComments"]), $(".hideShow-commentWindow").find("i").toggleClass("fa-angle-down") }, error: function() { console.log("Quote comments not updated successfully") } }) }

function saveStatusOnChange() { var e = $("#statusDrop option:selected").val(),
        t = $("#quoteCode").text();
    $.ajax({ type: "GET", cache: !1, url: "/retail-quote/saveStatusOnChange?selectedValue=" + e + "&quoteCode=" + t, beforeSend: function() { loading() }, complete: function() { loadingComplete(), "Converted" == e ? $(".deleteDiv").hide() : $(".deleteDiv").show() }, success: function(e) { $(".statusModified").html(e) }, error: function() { console.log("Error while updating quote staus.") } }) }

function emailSend() { var e = $("#quoteCode").text(),
        t = $("#emailText").val().replace(/\r\n|\r|\n/g, "<br>"),
        i = $("#retailQuoteEmailForm").serializeArray();
    $.ajax({ url: "/retail-quote/quote-detail/email?quoteCode=" + e + "&emailText=" + t, type: "GET", data: i, beforeSend: function() { loading() }, success: function() { $("#emailSentMsgContainer").css("display", "block"), $(".success-band").delay(5e3).slideUp("slow") }, complete: function() { loadingComplete() }, error: function() { console.log("Error in sending email") } }) }

function quoteDetailKeyupMethods() {
    $("#phoneAreaCode").keyup(function() { this.value = this.value.match(/\d*/g).join("").replace(/-*$/g, "") }), $("#consumerZipcode").keyup(function() { this.value = this.value.match(/\w*/g).join("").replace(/-*$/g, "") }), $("#consumerFirstName, #consumerLastName").keypress(function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
            i = t.match(/^[a-zA-Z0-9\-'.]+$/);
        8 != e.which && 0 != e.which && (i || e.preventDefault()) }), $("#phoneAreaCode").keyup(function() { $("#consumerEmailId").valid() && 3 === $("#phoneAreaCode").val().match(/\d*/g).join("").length ? ($("#consumerPhoneNumber").val() || ($("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("label[for = 'consumerPhoneNumber']").show()), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide()) : "" === $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#consumerEmailId").valid(), $("#consumerEmailId").prop("required", !0), $("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("#phoneAreaCode").valid(), $("#phoneAreaCode").prop("required", !0)) : "" === $("#consumerEmailId").val() && $("#phoneAreaCode").val() ? ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide(), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide()) : $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#phoneAreaCode").removeAttr("required"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()) : (this.value = this.value.match(/\d*/g).join("").replace(/-*$/g, ""), 3 === $(this).val().match(/\d*/g).join("").length ? ($("#consumerPhoneNumber").prop("required", !0), $("#consumerPhoneNumber").valid()) : ($("#phoneAreaCode").valid(), $("#phoneAreaCode").prop("required", !0), $("label[for = 'phoneAreaCode']").show())) }), $("#consumerPhoneNumber").keyup(function() {
        $(this).val() ? ($(this).valid(), $(this).valid() && ($("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()), "" === $("#consumerEmailId").val() && ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide())) : $("#consumerEmailId").valid() && 3 === $("#phoneAreaCode").val().match(/\d*/g).join("").length && !$("#consumerPhoneNumber").val() ? ($("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("label[for = 'consumerPhoneNumber']").show()) : $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#phoneAreaCode").removeAttr("required"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()) : ($("#consumerEmailId").valid(), $("#consumerEmailId").prop("required", !0), $("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0))
    }), $("#consumerEmailId").keyup(function() { $(this).val() ? ($("#consumerEmailId").removeAttr("required").removeClass("error"), $("label[for = 'consumerEmailId']").hide(), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required").removeClass("error"), $("label[for = 'consumerPhoneNumber']").hide()) : "" === $("#consumerEmailId").val() && $("#phoneAreaCode").val() && $("#consumerPhoneNumber").val() ? ($("#consumerEmailId").removeAttr("required").removeClass("valid"), $("label[for = 'consumerEmailId']").hide()) : ($("#phoneAreaCode").prop("required", !0), $("#phoneAreaCode").valid() || $("label[for = 'phoneAreaCode']").show(), $("#consumerPhoneNumber").prop("required", !0), $("#consumerPhoneNumber").valid() || $("label[for = 'consumerPhoneNumber']").show(), $("#consumerEmailId").prop("required", !0), $("#consumerEmailId").valid() || $("label[for = 'consumerEmailId']").show()) })
}

function textAreaAdjust(e) { e.style.height = "1px", e.style.height = e.scrollHeight + "px" }

function detailTextArea() { $(".hideShow-commentWindow").click(function() { $(this).find("span").text(function(e, t) { return t === saveQuoteErrorMessages["text.quote.detail.hideComments"] ? saveQuoteErrorMessages["text.quote.detail.viewComments"] : saveQuoteErrorMessages["text.quote.detail.hideComments"] }), $(this).find("i").toggleClass("fa-angle-down"), $(".commentWindow").slideToggle() }), $(".success-band").delay(5e3).slideUp("slow"); var e = $(".commentWindow div.commentBy").length;
    $(".hideShow-commentWindow span").after("<label id='commentWindow-length'></label>"), e && (document.getElementById("commentWindow-length").innerHTML = e), $(".js_textareaCharacterCount").keyup(function(e) { var t = $(this).val(),
            i = t.length,
            a = $(this).attr("maxlength"),
            r = a - i;
        $("#textareaCount").remove(), $(".js_textareaCharacterCount").closest(".form-inline").find("h1").append("<span id='textareaCount' class='pull-right text-capitalize'></span>"), i > a ? ($(this).val(t.substr(0, a)), $("#textareaCount").html("0 " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"]), e.preventDefault()) : "" != t && $("#textareaCount").html(r + " " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"]) }) }

function detailCustomerFormInfo() { quoteDetailKeyupMethods(), $(".js_fa-edit").on("click", function() { $(".js_fa-edit").hide(), $(".js_form-readonly").hide(), $(".js_customerInfo").show(), $("#consumerEmailId").val() && ($("#consumerPhoneNumber").removeAttr("required"), $("#phoneAreaCode").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide(), $("label[for = 'phoneAreaCode']").hide()), ($("#consumerPhoneNumber").val() || $("#phoneAreaCode").val()) && ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide()), $("#consumerFirstName").keyup(function() { $("#consumerFirstName").val() && ($("#consumerFirstName").removeAttr("required").removeClass("error"), $("label[for = 'consumerFirstName']").hide()) }), $("#consumerLastName").keyup(function() { $("#consumerLastName").val() && ($("#consumerLastName").removeAttr("required").removeClass("error"), $("label[for = 'consumerLastName']").hide()) }), quoteDetailKeyupMethods(), $(".customerInfoForm").validate({ onkeyup: function(e) { return "#consumerEmailId" == e.name ? !1 : void 0 }, rules: { consumerFirstName: { required: !0 }, consumerLastName: { required: !0 }, consumerEmail: { customemail: !0, onkeyup: !1 }, consumerPhone: {}, phoneAreaCode: { minlength: 3 }, consumerZipcode: { minlength: 5 } }, messages: { consumerFirstName: { lettersonly: saveQuoteErrorMessages["text.quote.detail.validation.letteronly"], required: saveQuoteErrorMessages["text.quote.detail.validation.firstname"] }, consumerLastName: { lettersonly: saveQuoteErrorMessages["text.quote.detail.validation.letteronly"], required: saveQuoteErrorMessages["text.quote.detail.validation.lastname"] }, consumerEmail: { required: saveQuoteErrorMessages["text.quote.detail.validation.email"], customemail: saveQuoteErrorMessages["text.quote.detail.validation.emailFormat"] }, consumerPhone: { required: saveQuoteErrorMessages["text.quote.detail.validation.phoneNumber"] }, phoneAreaCode: { required: saveQuoteErrorMessages["text.quote.detail.validation.phoneAreaCode"], minlength: saveQuoteErrorMessages["text.quote.detail.validation.phoneAreaCodeNumber"] }, consumerZipcode: { minlength: saveQuoteErrorMessages["text.quote.detail.validation.consumerZipcodeNumber"] } } }), $("#add-quote-button").click(function() { $("#retail-quote-items-form").submit() }), $.validator.addMethod("customemail", function(e) { return "" == e ? !0 : /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(e) }), $.validator.addMethod("customPhone", function(e) { return "" == e ? !0 : /\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})/.test(e) }), $("#consumerPhoneNumber").keyup(function() { this.value = this.value.match(/\d*/g).join("").match(/(\w{0,3})(\w{0,7})/).slice(1).join("-").replace(/-*$/g, ""), $(this).val() && ($("#phoneAreaCode").prop("required", !0), $("#phoneAreaCode").valid()) }), $.validator.addMethod("lettersonly", function(e, t) { return this.optional(t) || /^[a-z\s]+$/i.test(e) }) }) }

function updateQuoteCustomer() { var e = $(".customerInfoForm").valid(); if (e) { var t = $("#quoteCode").text(),
            i = $("#consumerFirstName").val(),
            a = $("#consumerLastName").val(),
            r = $("#address1").val() == saveQuoteErrorMessages["quote.detail.address1"] ? "" : $("#address1").val(),
            o = $("#address2").val() == saveQuoteErrorMessages["quote.detail.address2"] ? "" : $("#address2").val(),
            n = $("#consumerCity").val() == saveQuoteErrorMessages["quote.detail.city"] ? "" : $("#consumerCity").val(),
            s = $("#consumerState").val() == saveQuoteErrorMessages["quote.detail.state"] ? "" : $("#consumerState").val(),
            l = $("#consumerZipcode").val() == saveQuoteErrorMessages["quote.detail.zipcode"] ? "" : $("#consumerZipcode").val(),
            d = $("#consumerEmailId").val(),
            c = $("#consumerPhoneNumber").val() == saveQuoteErrorMessages["retailQuote.phoneNumber.placeHolder"] ? "" : $("#consumerPhoneNumber").val(),
            u = $("#phoneAreaCode").val() == saveQuoteErrorMessages["retailQuote.phoneAreaCode.placeHolder"] ? "" : $("#phoneAreaCode").val();
        $.ajax({ type: "POST", data: { quoteCode: t, consumerLastName: a, consumerFirstName: i, address1: r, address2: o, consumerCity: n, consumerState: s, consumerZipcode: l, consumerEmail: d, consumerPhone: c, phoneAreaCode: u }, cache: !1, url: "/retail-quote/updateConsumerInfo", success: function(e) { $("#updatedCustomerInfo").html(e) }, error: function() { console.log("Error in updating customer information.") }, complete: function() { detailCustomerFormInfo() } }) } }

function quotesSearchResults() { $("tr[data-href]").on("click", function() { document.location = $(this).data("href") }), table = $.fn.dataTable.isDataTable("#quotesSummaryTable") ? $("#quotesSummaryTable").DataTable() : $("#quotesSummaryTable").DataTable({ bPaginate: !1, bFilter: !1, bInfo: !1, aaSorting: [
            [0, "desc"]
        ], aoColumnDefs: [{ bSortable: !1, aTargets: ["no-sort"] }] }) }

function initializeDatepicker() { var e = $("#datepicker1"),
        t = $("#datepicker2"),
        i = e.attr("data-lastDate"),
        a = 1; if (1 == i) e.datepicker("setDate", -1), e.datepicker("option", "minDate", -1), t.datepicker("option", "minDate", -1);
    else { var r = i - a;
        e.datepicker("option", "minDate", -r), t.datepicker("option", "minDate", -r), e.datepicker("setDate", -r) } e.datepicker("option", "maxDate", 0), t.datepicker("option", "maxDate", 0), t.datepicker("setDate", new Date) }

function saveQuoteComments() { customerFormInfo(); var e = $(".customerInfoForm").valid(); if (e) { var t = $("#saveComments").val(),
            i = ($("#createQuoteCode").text(), $("#emailText").val()),
            a = "/retail-quote/save-quote?comment=" + t + "&emailText=" + encodeURI(i) + "&emailSent=false";
        window.location.href = a } }

function sendEmail() { var e = $("#retailQuoteEmailForm").serializeArray(),
        t = $("#consumerEmailId").val(),
        i = ($("#createQuoteCode").text(), encodeURIComponent($("#saveComments").val())),
        a = $("#emailText").val(),
        r = $("#emailText").val().replace(/\r\n|\r|\n/g, "<br>");
    $.ajax({ url: "/retail-quote/createQuote/redesign/sendEmail?recipientEmail=" + t + "&comment=" + i + "&emailText=" + r, type: "POST", data: e, beforeSend: function() { loading() }, success: function() { var e = "/retail-quote/save-quote?comment=" + i + "&emailText=" + a + "&emailSent=true";
            window.location.href = e }, complete: function() { loading(), detailTextArea(), loadingComplete() }, error: function() { console.log("Error in sending email"), loadingComplete() } }) }

function keyupMethods() { $("#consumerPhoneNumber").keyup(function() { this.value = this.value.match(/\d*/g).join("").match(/(\w{0,3})(\w{0,7})/).slice(1).join("-").replace(/-*$/g, ""), $(this).val() && ($("#phoneAreaCode").prop("required", !0), $("#phoneAreaCode").valid()) }), $("#phoneAreaCode").keyup(function() { this.value = this.value.match(/\d*/g).join("").replace(/-*$/g, "") }), $("#consumerZipcode").keyup(function() { this.value = this.value.match(/\w*/g).join("").replace(/-*$/g, "") }), $("#consumerFirstName, #consumerLastName").keypress(function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
            i = t.match(/^[a-zA-Z0-9\-'.]+$/);
        8 != e.which && 0 != e.which && (i || e.preventDefault()) }), $("#phoneAreaCode").keyup(function() { $("#consumerEmailId").valid() && 3 === $("#phoneAreaCode").val().match(/\d*/g).join("").length ? ($("#consumerPhoneNumber").val() || ($("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("label[for = 'consumerPhoneNumber']").show()), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide()) : "" === $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#consumerEmailId").valid(), $("#consumerEmailId").prop("required", !0), $("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("#phoneAreaCode").valid(), $("#phoneAreaCode").prop("required", !0)) : "" === $("#consumerEmailId").val() && $("#phoneAreaCode").val() ? ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide(), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide()) : $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#phoneAreaCode").removeAttr("required"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()) : (this.value = this.value.match(/\d*/g).join("").replace(/-*$/g, ""), 3 === $(this).val().match(/\d*/g).join("").length ? ($("#consumerPhoneNumber").prop("required", !0), $("#consumerPhoneNumber").valid()) : ($("#phoneAreaCode").valid(), $("#phoneAreaCode").prop("required", !0), $("label[for = 'phoneAreaCode']").show())) }), $("#consumerPhoneNumber").keyup(function() { $(this).val() ? ($(this).valid(), $(this).valid() && ($("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()), "" === $("#consumerEmailId").val() && ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide())) : $("#consumerEmailId").valid() && 3 === $("#phoneAreaCode").val().match(/\d*/g).join("").length && !$("#consumerPhoneNumber").val() ? ($("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0), $("label[for = 'consumerPhoneNumber']").show()) : $("#consumerEmailId").val() && "" === $("#phoneAreaCode").val() && "" === $("#consumerPhoneNumber").val() ? ($("#phoneAreaCode").removeAttr("required"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide()) : ($("#consumerEmailId").valid(), $("#consumerEmailId").prop("required", !0), $("#consumerPhoneNumber").valid(), $("#consumerPhoneNumber").prop("required", !0)) }), $("#phoneAreaCode").keydown(function() { $("label.phoneError1").remove() }), $("#consumerEmailId").keyup(function() { $(this).val() ? ($("#consumerEmailId").removeAttr("required").removeClass("error"), $("label[for = 'consumerEmailId']").hide(), $("#phoneAreaCode").removeAttr("required").removeClass("error"), $("label[for = 'phoneAreaCode']").hide(), $("#consumerPhoneNumber").removeAttr("required").removeClass("error"), $("label[for = 'consumerPhoneNumber']").hide()) : "" === $("#consumerEmailId").val() && $("#phoneAreaCode").val() && $("#consumerPhoneNumber").val() ? ($("#consumerEmailId").removeAttr("required").removeClass("valid"), $("label[for = 'consumerEmailId']").hide()) : ($("#phoneAreaCode").prop("required", !0), $("#phoneAreaCode").valid() || $("label[for = 'phoneAreaCode']").show(), $("#consumerPhoneNumber").prop("required", !0), $("#consumerPhoneNumber").valid() || $("label[for = 'consumerPhoneNumber']").show(), $("#consumerEmailId").prop("required", !0), $("#consumerEmailId").valid() || $("label[for = 'consumerEmailId']").show()) }), $(".js_emailQuote").on("click", function() { var e = !0;
        $("#consumerEmailId").prop("required", !0), $("#consumerEmailId").valid() || (e = "false", $("label[for = 'consumerEmailId']").show()), $("#consumerFirstName").prop("required", !0), $("#consumerFirstName").valid() && "First Name" != $("#consumerFirstName").val() || (e = "false", $("label[for = 'consumerFirstName']").show(), $("label[for = 'consumerFirstName']").length < 1 && $("#consumerFirstName").parent().append('<label for="consumerFirstName" class="error">' + saveQuoteErrorMessages["text.quote.detail.validation.firstname"] + "</label>")), $("#consumerLastName").prop("required", !0), $("#consumerLastName").valid() && "Last Name" != $("#consumerLastName").val() || (e = "false", $("label[for = 'consumerLastName']").show(), $("label[for = 'consumerLastName']").length < 1 && $("#consumerLastName").parent().append('<label for="consumerLastName" class="error">' + saveQuoteErrorMessages["text.quote.detail.validation.lastname"] + "</label>")), e === !0 && sendEmail() }), $("#add-quote-button").click(function() { $("#retail-quote-items-form").submit() }) }

function textAreaAdjust(e) { e.style.height = "1px", e.style.height = e.scrollHeight + "px" }

function textArea() { $(".success-band").delay(5e3).slideUp("slow"), $(".js_textareaCharacterCount").keyup(function(e) { var t = $(this).val(),
            i = t.length,
            a = $(this).attr("maxlength"),
            r = a - i;
        $("#textareaCount").remove(), $(".js_textareaCharacterCount").closest(".form-inline").find("h1").append("<span id='textareaCount' class='pull-right text-capitalize'></span>"), i > a ? ($(this).val(t.substr(0, a)), $("#textareaCount").html("0 " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"]), e.preventDefault()) : "" != t && $("#textareaCount").html(r + " " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"]) }) }

function customerFormInfo() { textArea(), keyupMethods(), $("#consumerEmailId").val() && ($("#consumerPhoneNumber").removeAttr("required"), $("#phoneAreaCode").removeAttr("required"), $("label[for = 'consumerPhoneNumber']").hide(), $("label[for = 'phoneAreaCode']").hide()), ($("#consumerPhoneNumber").val() || $("#phoneAreaCode").val()) && ($("#consumerEmailId").removeAttr("required"), $("label[for = 'consumerEmailId']").hide()), $("#consumerFirstName").keyup(function() { $("#consumerFirstName").val() && ($("#consumerFirstName").removeAttr("required").removeClass("error"), $("label[for = 'consumerFirstName']").hide()) }), $("#consumerLastName").keyup(function() { $("#consumerLastName").val() && ($("#consumerLastName").removeAttr("required").removeClass("error"), $("label[for = 'consumerLastName']").hide()) }), $(".customerInfoForm").validate({ onkeyup: function(e) { return "#consumerEmailId" == e.name ? !1 : void 0 }, rules: { consumerFirstName: { required: !0 }, consumerLastName: { required: !0 }, consumerEmail: { customemail: !0, onkeyup: !1 }, consumerPhone: {}, phoneAreaCode: { minlength: 3 }, consumerZipcode: { minlength: 5 } }, messages: { consumerFirstName: { lettersonly: saveQuoteErrorMessages["text.quote.detail.validation.letteronly"], required: saveQuoteErrorMessages["text.quote.detail.validation.firstname"] }, consumerLastName: { lettersonly: saveQuoteErrorMessages["text.quote.detail.validation.letteronly"], required: saveQuoteErrorMessages["text.quote.detail.validation.lastname"] }, consumerEmail: { required: saveQuoteErrorMessages["text.quote.detail.validation.email"], customemail: saveQuoteErrorMessages["text.quote.detail.validation.emailFormat"] }, consumerPhone: saveQuoteErrorMessages["text.quote.detail.validation.phoneNumber"], phoneAreaCode: { required: saveQuoteErrorMessages["text.quote.detail.validation.phoneAreaCode"], minlength: saveQuoteErrorMessages["text.quote.detail.validation.phoneAreaCodeNumber"] }, consumerZipcode: { minlength: saveQuoteErrorMessages["text.quote.detail.validation.consumerZipcodeNumber"] } } }), $.validator.addMethod("customemail", function(e) { return "" == e ? !0 : /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(e) }), $.validator.addMethod("customPhone", function(e) { return "" == e ? !0 : /\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})/.test(e) }), $.validator.addMethod("lettersonly", function(e, t) { return this.optional(t) || /^[a-z\s]+$/i.test(e) }) } require.config({ baseUrl: "/", waitSeconds: 200, paths: { underscore: "/_ui/desktop/common/js/lib/underscore", backbone: "/_ui/desktop/common/js/lib/backbone", "backbone-nested": "/_ui/desktop/common/js/lib/backbone-nested", "backbone.marionette": "/_ui/desktop/common/js/lib/backbone.marionette", "backbone.babysitter": "/_ui/desktop/common/js/lib/backbone.babysitter", "backbone.wreqr": "/_ui/desktop/common/js/lib/backbone.wreqr", "backbone.stickit": "/_ui/desktop/common/js/lib/backbone.stickit", jquery: "/_ui/desktop/atdonline2/js/atd/utilities/jquery", jqueryValFormatter: "/_ui/desktop/atdonline2/js/atd/utilities/jquery.valFormatter", marionette: "/_ui/desktop/atdonline2/js/atd/utilities/marionette", spin: "/_ui/desktop/common/js/lib/spin", epoxy: "/_ui/desktop/common/js/lib/backbone.epoxy", accounting: "/_ui/desktop/common/js/lib/accounting", Router: "/_ui/desktop/atdonline2/js/atd/Router", PageControllerMap: "/_ui/desktop/atdonline2/js/atd/PageControllerMap", VehicleGuidePackagePageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/VehicleGuidePackagePageController", MyAccountOrderHistorySearchPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/MyAccountOrderHistorySearchPageController", GlobalSearchPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/GlobalSearchPageController", OrderHistoryConfirmationNumberPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/OrderHistoryConfirmationNumberPageController", AgreementsPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/AgreementsPageController", QuoteSetupAddonsView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupAddonsView", QuoteSetupProfileListView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupProfileListView", QuoteSetupTaxesView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupTaxesView", ListsPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/ListsPageController", CompareProductsPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/CompareProductsPageController", RegistrationFormPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/RegistrationFormPageController", AccountUserCreateStepOnePageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/AccountUserCreateStepOnePageController", VehicleGuidePageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/VehicleGuidePageController", FeedbackFormPageController: "/_ui/desktop/atdonline2/js/atd/pageControllers/FeedbackFormPageController", CompareProductsBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/CompareProductsBehavior", ForgotPasswordModalBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/ForgotPasswordModalBehavior", RmaModalBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/RmaModalBehavior", CheckUserIdAvailabilityBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/CheckUserIdAvailabilityBehavior", EditListModalBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/EditListModalBehavior", CommentInputLimiterBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/CommentInputLimiterBehavior", ListModalBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/ListModalBehavior", RadioButtonBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/RadioButtonBehavior", TextboxBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/TextboxBehavior", RetailQuoteBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/RetailQuoteBehavior", RetailQuoteItemBehavior: "/_ui/desktop/atdonline2/js/atd/behaviors/RetailQuoteItemBehavior", CatalystFacade: "/_ui/desktop/atdonline2/js/atd/CatalystFacade", CatalystCookieFacade: "/_ui/desktop/atdonline2/js/atd/CatalystCookieFacade", UserTrailCookieFacade: "/_ui/desktop/atdonline2/js/atd/UserTrailCookieFacade", StoreLocation: "/_ui/desktop/atdonline2/js/atd/StoreLocation", ATDObject: "/_ui/desktop/atdonline2/js/atd/ATDObject", DialogConfigurationFactory: "/_ui/desktop/atdonline2/js/atd/DialogConfigurationFactory", AddToCartForm: "/_ui/desktop/atdonline2/js/atd/AddToCartForm", MyAccountUserComponent: "/_ui/desktop/atdonline2/js/atd/pages/MyAccountUserComponent", MyAccountUpdatePasswordComponent: "/_ui/desktop/atdonline2/js/atd/cms/MyAccountUpdatePasswordComponent", MyAccountUsersCreateStepOneComponent: "/_ui/desktop/atdonline2/js/atd/cms/MyAccountUsersCreateStepOneComponent", PasswordValidator: "/_ui/desktop/atdonline2/js/atd/utilities/PasswordValidator", backboneAll: "/_ui/desktop/atdonline2/js/atd/utilities/backboneAll", catalystCookieFacadeInstance: "/_ui/desktop/atdonline2/js/atd/utilities/catalystCookieFacadeInstance", catalystFacadeInstance: "/_ui/desktop/atdonline2/js/atd/utilities/catalystFacadeInstance", userTrailCookieFacadeInstance: "/_ui/desktop/atdonline2/js/atd/utilities/userTrailCookieFacadeInstance", LoadingSpinnerView: "/_ui/desktop/atdonline2/js/atd/views/LoadingSpinnerView", VehicleGuideHeaderView: "/_ui/desktop/atdonline2/js/atd/views/VehicleGuideHeaderView", StockOrderHeaderView: "/_ui/desktop/atdonline2/js/atd/views/StockOrderHeaderView", GlobalSearchHeaderView: "/_ui/desktop/atdonline2/js/atd/views/GlobalSearchHeaderView", RefineSearchLeftNavigationView: "/_ui/desktop/atdonline2/js/atd/views/RefineSearchLeftNavigationView", AddToListModalView: "/_ui/desktop/atdonline2/js/atd/views/AddToListModalView", CreateNewListModalView: "/_ui/desktop/atdonline2/js/atd/views/CreateNewListModalView", AccountUserCreateStepTwoView: "/_ui/desktop/atdonline2/js/atd/views/AccountUserCreateStepTwoView", AccountOrderApprovalsView: "/_ui/desktop/atdonline2/js/atd/views/AccountOrderApprovalsView", AccountInfoHeaderView: "/_ui/desktop/atdonline2/js/atd/views/AccountInfoHeaderView", AccountInfoHeaderLinkView: "/_ui/desktop/atdonline2/js/atd/views/AccountInfoHeaderLinkView", LanguageSelectView: "/_ui/desktop/atdonline2/js/atd/views/LanguageSelectView", AccountInfoLinkView: "/_ui/desktop/atdonline2/js/atd/views/AccountInfoLinkView", CartView: "/_ui/desktop/atdonline2/js/atd/views/CartView", CategoryView: "/_ui/desktop/atdonline2/js/atd/views/CategoryView", CommunicationView: "/_ui/desktop/atdonline2/js/atd/views/CommunicationView", DashboardView: "/_ui/desktop/atdonline2/js/atd/views/DashboardView", ListView: "/_ui/desktop/atdonline2/js/atd/views/ListView", LoginView: "/_ui/desktop/atdonline2/js/atd/views/LoginView", MyAccountPaymentsListView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountPaymentsListView", MyAccountPaymentsDueView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountPaymentsDueView", MyAccountInvoicesListView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountInvoicesListView", MyAccountSecondarySupplierListView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountSecondarySupplierListView", MyAccountMemosListView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountMemosListView", MyAccountUpdateContactView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountUpdateContactView", PrintView: "/_ui/desktop/atdonline2/js/atd/views/PrintView", SearchResultsPrintView: "/_ui/desktop/atdonline2/js/atd/views/SearchResultsPrintView", LocationDisplaySelectionView: "/_ui/desktop/atdonline2/js/atd/views/LocationDisplaySelectionView", QuoteSetupListView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupListView", MyAccountLocationSettingsView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountLocationSettingsView", MyAccountLocationSettingBrandsView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountLocationSettingBrandsView", MyAccountMainView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountMainView", SelectLocationModalView: "/_ui/desktop/atdonline2/js/atd/views/SelectLocationModalView", SelectLocationInputView: "/_ui/desktop/atdonline2/js/atd/views/SelectLocationInputView", EmailFileModalView: "/_ui/desktop/atdonline2/js/atd/views/EmailFileModalView", ResourceCenterProductImagesView: "/_ui/desktop/atdonline2/js/atd/views/ResourceCenterProductImagesView", QuoteSetupProductProfilesView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupProductProfilesView", PromotionalLandingPageView: "/_ui/desktop/atdonline2/js/atd/views/PromotionalLandingPageView", SearchResultsView: "/_ui/desktop/atdonline2/js/atd/views/SearchResultsView", OrderHistoryAccordionView: "/_ui/desktop/atdonline2/js/atd/views/OrderHistoryAccordionView", MyWarrantyAccordionView: "/_ui/desktop/atdonline2/js/atd/views/MyWarrantyAccordionView", MyWarrantyController: "/_ui/desktop/atdonline2/js/atd/views/MyWarrantyController", MyWarrantyReviewPage: "/_ui/desktop/atdonline2/js/atd/views/MyWarrantyReviewPage", MyWarrantyClaimInfoPage: "/_ui/desktop/atdonline2/js/atd/views/MyWarrantyClaimInfoPage", MyWarrantyPrintPage: "/_ui/desktop/atdonline2/js/atd/views/MyWarrantyPrintPage", PrintVCFPage: "/_ui/desktop/atdonline2/js/atd/views/PrintVCFPage", WarrantyClaimVehicleInfoController: "/_ui/desktop/atdonline2/js/atd/views/WarrantyClaimVehicleInfoController", ReturnHistoryAccordionView: "/_ui/desktop/atdonline2/js/atd/views/ReturnHistoryAccordionView", ProgramStatusComponentView: "/_ui/desktop/atdonline2/js/atd/views/ProgramStatusComponentView", GlobalSearchPageViewMediator: "/_ui/desktop/atdonline2/js/atd/views/GlobalSearchPageViewMediator", QuotePreferencesView: "/_ui/desktop/atdonline2/js/atd/views/QuotePreferencesView", BetaOptOutInterstitialComponentView: "/_ui/desktop/atdonline2/js/atd/views/BetaOptOutInterstitialComponentView", ProductDetailView: "/_ui/desktop/atdonline2/js/atd/views/ProductDetailView", MakeRecurringView: "/_ui/desktop/atdonline2/js/atd/views/MakeRecurringView", MyListEditView: "/_ui/desktop/atdonline2/js/atd/views/MyListEditView", QuoteSetupAspectRatioView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSetupAspectRatioView", ProductTypeGuideView: "/_ui/desktop/atdonline2/js/atd/views/ProductTypeGuideView", RangedFilterMileageCAView: "/_ui/desktop/atdonline2/js/atd/views/RangedFilterMileageCAView", RangedFilterMileageUSView: "/_ui/desktop/atdonline2/js/atd/views/RangedFilterMileageUSView", RangedFilterRetailView: "/_ui/desktop/atdonline2/js/atd/views/RangedFilterRetailView", WheelSizeSearchView: "/_ui/desktop/atdonline2/js/atd/views/WheelSizeSearchView", TireSizeSearchView: "/_ui/desktop/atdonline2/js/atd/views/TireSizeSearchView", GlobalStorefrontModel: "/_ui/desktop/atdonline2/js/atd/models/GlobalStorefrontModel", VehicleGuideModel: "/_ui/desktop/atdonline2/js/atd/models/VehicleGuideModel", CartModel: "/_ui/desktop/atdonline2/js/atd/models/CartModel", LoginViewModel: "/_ui/desktop/atdonline2/js/atd/models/LoginViewModel", ListViewModel: "/_ui/desktop/atdonline2/js/atd/models/ListViewModel", GlobalSearchViewModel: "/_ui/desktop/atdonline2/js/atd/models/GlobalSearchViewModel", CategoryViewModel: "/_ui/desktop/atdonline2/js/atd/models/CategoryViewModel", DashboardViewModel: "/_ui/desktop/atdonline2/js/atd/models/DashboardViewModel", GlobalContentMessagesModel: "/_ui/desktop/atdonline2/js/atd/models/GlobalContentMessagesModel", OrderHistoryModel: "/_ui/desktop/atdonline2/js/atd/models/OrderHistoryModel", SelectLocationInputViewModel: "/_ui/desktop/atdonline2/js/atd/models/SelectLocationInputViewModel", LocationDisplaySelectionViewModel: "/_ui/desktop/atdonline2/js/atd/models/LocationDisplaySelectionViewModel", QuoteSetupProductProfilesViewModel: "/_ui/desktop/atdonline2/js/atd/models/QuoteSetupProductProfilesViewModel", ProgramStatusComponentViewModel: "/_ui/desktop/atdonline2/js/atd/models/ProgramStatusComponentViewModel", PromotionalLandingPageViewModel: "/_ui/desktop/atdonline2/js/atd/models/PromotionalLandingPageViewModel", QuotePreferencesViewModel: "/_ui/desktop/atdonline2/js/atd/models/QuotePreferencesViewModel", BetaOptOutInterstitialComponentViewModel: "/_ui/desktop/atdonline2/js/atd/models/BetaOptOutInterstitialComponentViewModel", ProductTypeGuideModel: "/_ui/desktop/atdonline2/js/atd/models/ProductTypeGuideModel", RangedFilterMileageCAModel: "/_ui/desktop/atdonline2/js/atd/models/RangedFilterMileageCAModel", RangedFilterMileageUSModel: "/_ui/desktop/atdonline2/js/atd/models/RangedFilterMileageUSModel", RangedFilterRetailModel: "/_ui/desktop/atdonline2/js/atd/models/RangedFilterRetailModel", WheelSizeSearchModel: "/_ui/desktop/atdonline2/js/atd/models/WheelSizeSearchModel", TireSizeSearchModel: "/_ui/desktop/atdonline2/js/atd/models/TireSizeSearchModel", CatalystLoggerController: "/_ui/desktop/atdonline2/js/atd/controllers/CatalystLoggerController", EventAggregatorController: "/_ui/desktop/atdonline2/js/atd/controllers/EventAggregatorController", ListModalMediator: "/_ui/desktop/atdonline2/js/atd/controllers/ListModalMediator", QuoteSummaryView: "/_ui/desktop/atdonline2/js/atd/views/QuoteSummaryView", QuoteDetailView: "/_ui/desktop/atdonline2/js/atd/views/QuoteDetailView", QuoteCreateView: "/_ui/desktop/atdonline2/js/atd/views/QuoteCreateView", MyQuotesLinkView: "/_ui/desktop/atdonline2/js/atd/views/MyQuotesLinkView", MyAccountOrderHistoryOrderDetailsView: "/_ui/desktop/atdonline2/js/atd/views/MyAccountOrderHistoryOrderDetailsView", VinSearchView: "/_ui/desktop/atdonline2/js/atd/views/VinSearchView", LicensePlateSearchView: "/_ui/desktop/atdonline2/js/atd/views/LicensePlateSearchView", CountdownTimerView: "/_ui/desktop/atdonline2/js/atd/views/CountdownTimerView", ManageCreditCardsView: "/_ui/desktop/atdonline2/js/atd/views/ManageCreditCardsView", HomePageMyListView: "/_ui/desktop/atdonline2/js/atd/views/HomePageMyListView", MiniCartView: "/_ui/desktop/atdonline2/js/atd/views/MiniCartView", LiteOrderHistoryView: "/_ui/desktop/atdonline2/js/atd/views/LiteOrderHistoryView" } }), configureConsoleLogger(), $(document).ready(function() { require(["jquery", "Router", "VehicleGuideHeaderView", "StockOrderHeaderView", "GlobalSearchHeaderView", "LocationDisplaySelectionView", "GlobalStorefrontModel", "RetailQuoteBehavior", "SearchResultsView", "ProductTypeGuideView", "RangedFilterMileageCAView", "RangedFilterMileageUSView", "RangedFilterRetailView", "OrderHistoryAccordionView", "MyWarrantyAccordionView", "ReturnHistoryAccordionView", "VinSearchView", "LicensePlateSearchView", "AccountInfoHeaderView", "AccountInfoHeaderLinkView", "LanguageSelectView", "AccountInfoLinkView", "CountdownTimerView", "HomePageMyListView", "MiniCartView", "LiteOrderHistoryView"], function(e, t, i, a, r, o, n, s, l, d, c, u, h, p, m, g, f, v, C, b, w, k, y, S, T, P) { var I = n.getSharedInstance().get("languageIsoCode");
            e.datepicker.setDefaults(e.datepicker.regional[I]), e.datepicker.setDefaults({ showOtherMonths: !0, selectOtherMonths: !0 }), s.getSharedInstance(), new t, (new i).render(), (new a).render(), (new r).render(), (new o).render(), -1 === window.location.href.indexOf("/login") && (new d).render(), (new c).render(), (new u).render(), (new h).render(), (new f).render(), (new v).render(), (new C).render(), (new b).render(), (new w).render(), (new k).render(), (new T).render(), "/" === window.location.pathname && ((new p).render(), (new m).render(), (new g).render(), (new l).render(), e("#showCountdownWidget").val() && (new y).render(), (new S).render(), (new P).render()), setupIconChangeHandler(n.getSharedInstance().get("languageIsoCode")) }), setupAjax(), leftNavAnimation(), selectStockOrderItem(), utilityBarMenus(), setupLanguageChangeHandler(), $(".success-band").delay(5e3).slideUp("slow") }),
    function(e) { e.fn.outside = function(t, i) { return this.each(function() { var a = (e(this), this);
                e(document).bind(t, function r(o) { o.target === a || e.contains(a, o.target) || (i.apply(a, [o]), a.parentNode || e(document.body).unbind(t, r)) }) }) } }(jQuery), escapeRegex = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, escapeFunction = function(e, t) { return t ? "\x00" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e };
var WebStore = {};
WebStore.Common = {
    config: { css: { errorClass: "error", successClass: "success" } },
    bindAjaxForm: function(e, t, i) { var a = { success: t, error: i };
        $(e).ajaxForm(a) },
    showParentedMessage: function(e, t, i) { $(t).text(i), $(e).removeClass("display-none") },
    hideParentedMessage: function(e, t) { $(t).text(""), $(e).addClass("display-none") },
    flashParentedMessage: function(e, t, i, a) { $(t).text(i), $(e).fadeIn().delay(a).fadeOut(function() { $(t).text("") }) },
    showMessage: function(e, t) {
        $(e).html(t), $(e).removeClass("display-none")
    },
    hideMessage: function(e) { $(e).text(""), $(e).addClass("display-none") },
    flashMessage: function(e, t, i) { $(e).text(t), $(e).fadeIn().delay(i).fadeOut(function() { $(e).text("") }) },
    getMoreCategories: function(e, t) { $("ul.subinner-nav").hide(), 0 === $(e.currentTarget).siblings("ul.subinner-nav").length && $("ul.nav-tabs li ul.sub-nav, ul.sub-nav li ul.subinner-nav").hide(); var i = "/category/get-category-data",
            a = null;
        a = "undefined" != typeof e.target ? e.target : e.srcElement; var r = a.parentElement.className.toLowerCase().indexOf("first") >= 0;
        $("#category-links-" + t).removeClass("background-color"); var o = function(e) { $("#category-links-" + t).html(e), $("#category-links-" + t).removeClass("no-border"), $("#category-links-" + t).addClass("background-color") }; return $("#category-links-" + t).html() ? $("#category-links-" + t).addClass("background-color") : $.get(i, { parentCategory: t, isParentCategory: r }, o), $("#category-links-" + t).show(), !1 },
    createAndSubmitForm: function() { $("#order_comments_id").val($("#input_comments_id").val()), $("#po_number_id").val($("#customerPO").val()); var e = document.createElement("form");
        e.setAttribute("method", "post"), e.setAttribute("action", $("#actionURL").val()), e.setAttribute("id", "rejectOrderForm"), e.appendChild(document.getElementById("comments")), e.appendChild(document.getElementById("order_comments_id")), e.appendChild(document.getElementById("po_number_id")), document.body.appendChild(e), e.submit() },
    createFreightForm: function(e, t) { var i = "/freight/get-fullfillment-data-freight/" + e + "/" + t,
            a = document.createElement("form");
        a.setAttribute("method", "GET"), a.setAttribute("action", i), a.setAttribute("id", "freightCostForm"), a.appendChild(document.getElementById("searchUrl")), document.body.appendChild(a), a.submit() },
    limit: function(e) { for (var t = 120; e.value.length > t;) e.value = e.value.replace(/.$/, "") },
    callPDPPage: function(e, t, i, a, r, o, n, s, l, d, c, u) { window.location.href = e + "?weightSystem=" + t + "&frontFitmentId=" + r + "&rearFitmentId=" + o + "&modelId=" + n + "&trimOptionId=" + s + "&vehicleTab=" + l + "&packageUrl=" + encodeURIComponent(i) + "&createPackage=" + a + "&origin=" + d + "&frontRear=" + c + "&tab=" + u },
    siteUrl: function() { var e = $("#siteUrl").val(); return e },
    uploadStockOrderFile: function(e) { e.preventDefault() ? e.preventDefault() : e.returnValue = !1, $("#stockorder-file-upload").click() },
    showInvoicePDF: function(e, t, i) { loading(), $.getJSON("/my-account/accounting/invoices/image/confirm/" + e + "/" + t + "/" + i, function(a) { 0 == a.code ? (window.open("/my-account/accounting/invoices/image/" + e + "/" + t + "/" + i), loadingComplete()) : (modalOpen("generic-modal", "image-unavailable-modal"), loadingComplete()) }) }
}, WebStore.Product = { getMoreData: function(e, t, i, a, r) { var o = ".more-data-row-" + e,
            n = r ? r.find(o) : $(o),
            s = $(n).data("hide-list-link"); if (n.html().length > 0) toggleMoreDataRow(a);
        else { var l = "/p/" + t + "/moreData?cmsUID=" + i + "&listlink=" + s;
            $.get(l, function(e) { n.html(e), toggleMoreDataRow(a), "true" === $("#promotionFlag").val() && $(".add-to-list-link").hide() }) } }, showDetailModal: function(e, t, i) { WebStore.Product.clearEmailSentMessage("with-spinner"), WebStore.Product.trackViewedProduct(e); var a = $("#product-detail-loading-modal"),
            r = "product-modal-" + i,
            o = $("#" + r),
            n = o.find(".modal-content").length > 0; if (n) modalOpen("product", r);
        else { a.dialog("open").height("134px"); var s = function(e) { o.html(e), a.dialog("close"), modalOpen("product", r) },
                l = function() { a.dialog("close") },
                d = $("#productDetailForm-" + i),
                c = d.attr("action"),
                u = c;
            c = c + "?cmsUID=" + t, d.attr("action", c), WebStore.Common.bindAjaxForm(d, s, l), d.submit(), d.attr("action", u) } }, showFreightModal: function(e, t) { var i = 4;
        $("#freight-modal-shipping-method-id option").remove(), $("#freight-modal-fulfillment-table tr td").text(""), void 0 === t || "" === t ? WebStore.Product.loadFreightFulfillments(e, i) : WebStore.Product.loadFreightFulfillments(e, t), $("#freight-modal-delivery-options-form-id select").focus() }, loadFreightFulfillments: function(e, t) { loading(), WebStore.Common.createFreightForm(e, t) }, updateFreightFulfillmentTable: function() { var e = $("#freight-modal-product-number-id").val(),
            t = $("#freight-modal-quantity-id").val(); "" != t && t > 0 && WebStore.Product.loadFreightFulfillments(e, t) }, toggleCostDisplay: function(e) { if (e) { $("#show-cost-reauthorization-message-area").addClass("display-none"); var t = $("#show-cost-reauthorization-form").find("[name='j_password']");
            t.removeClass("input-error"), t.val(""), $("#showHideCostForm").submit() } else toggleStockOrderUnitCost(), $.post("/p/toggle-cost-display"), $(".cost-toggle-display-button").toggleClass("display-none button"), $(".cost-toggle-display-button").addClass("button") }, submitUserAuthorization: function() { var e = $("#show-cost-reauthorization-form");
        $("#show-cost-reauthorization-message-area").addClass("display-none"), e.find("[name='j_password']").removeClass("input-error"); var t = function(t) { 0 == t.code ? (modalClose("show-cost-reauthorization-modal"), WebStore.Product.toggleCostDisplay()) : ($("#show-cost-reauthorization-message-area").html(t.message), $("#show-cost-reauthorization-message-area").removeClass("display-none"), e.find("[name='j_password']").addClass("input-error")) },
            i = function() { e.find("[name='j_password']").addClass("input-error"), $("#show-cost-reauthorization-message-area").removeClass("visibility-hidden") };
        WebStore.Common.bindAjaxForm(e, t, i), e.submit() }, trackViewedProduct: function(e) { var t = "recently_viewed_products",
            i = $.cookies.get(t);
        null !== i ? $.inArray(e, i) < 0 && i.unshift(e) : i = [e], $.cookies.set(t, i.slice(0, 5)) }, hideEmailForm: function(e) { var t = "#emailform-" + e;
        $(t).hide() }, showEmailForm: function(e, t) { WebStore.Product.clearEmailSentMessage("with-spinner"), $("#recipientEmail-" + e).val(t); var i = "#emailform-" + e;
        $(i).show(), WebStore.Product.toggleEmailText() }, toggleEmailText: function() { var e = "",
            t = $("input");
        t.each(function() { "" != $(this).val() && "" != $(this).prop("title") && $(this).val() != $(this).prop("title") && $(this).addClass("value-entered") }), t.on("focus", function() { $(this).val() == $(this).prop("title") && (e = $(this).val(), $(this).val("").addClass("value-entered")) }), t.on("blur", function() { "" == $(this).val() && $(this).val(e).removeClass("value-entered") }) }, emailProductDetail: function(e) { var t = $("#productDetailEmailForm-" + e + ' input[name="recipientEmail"]').val(),
            i = WebStore.Product.validateEmail(t); if (!i) return void require(["CartModel"], function(e) { WebStore.Product.showStatusMessage(e.getSharedInstance().get("emailInvalidMessage"), "invalid-messageColor") });
        WebStore.Product.clearStatusMessage("invalid-messageColor"); var a = function() {},
            r = function() {},
            o = $("#productDetailEmailForm-" + e);
        WebStore.Common.bindAjaxForm(o, a, r), require(["CartModel"], function(e) { WebStore.Product.showEmailSentMessage(e.getSharedInstance().get("emailSentMessage"), "with-spinner") }); var n = "#emailform-" + e;
        $(n).hide(), o.submit() }, showEmailSentMessage: function(e, t) { $(".tabs .product-ordering .emailsent").addClass(t).find("span").text(e) }, clearEmailSentMessage: function(e) { $(".tabs .product-ordering .emailsent").removeClass(e).find("span").text("") }, validateEmail: function(e) { if ("" == e) return !1; var t = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/; return t.test(e) ? !0 : !1 }, showStatusMessage: function(e, t) { $(".validation").addClass(t).find("span").text(e) }, clearStatusMessage: function(e) { $(".validation").removeClass(e).find("span").text("") } }, $(document).ready(function() { $(".freight-update-label").click(function() { WebStore.Product.updateFreightFulfillmentTable() }), $("#freight-modal-shipping-method-id").unbind(), $(".fulfillment-details").hide(), $(".fulfillment-shipping-method").addClass("display-none"); var e = [];
    $(".single-freight-shipping").each(function() { if ($(this).length) { var t = $(this).data().deliveryOption,
                i = $(this).data().shippingCost;
            i && e.push(i), $("[id='" + t + "-quantity']").show(), $("[id='" + t + "-date']").show() } }), $(".freight-modal-selectbox").each(function() { var t = $(this).find(":selected").data().deliveryOption,
            i = $(this).find(":selected").data().shippingCost;
        i && e.push(i), t && ($("[id='" + t + "-quantity']").show(), $("[id='" + t + "-date']").show()) }), updateTotalShippingCost(e); var t;
    $(".freight-modal-selectbox").on("focus", function() { t = $(this).find(":selected") }).change(function() { var i = $(this).find(":selected").data().deliveryOption;
        $("[id='" + t.data().deliveryOption + "-quantity']").hide(), $("[id='" + t.data().deliveryOption + "-date']").hide(), $("[id='" + i + "-quantity']").show(), $("[id='" + i + "-date']").show(); var a = $(t).data().shippingCost,
            r = $(this).find(":selected").data().shippingCost; for (var o in e) e[o] == a && e.splice(o, 1);
        t = $(this).find(":selected"), e.push(r), updateTotalShippingCost(e) }), $("#freight-modal-delivery-options-form-id").submit(function(e) { return e.preventDefault(), !1 }) }), WebStore.Cart = { config: { css: { errorParentIdPrefix: "#errorMessageContainer-", errorIdPrefix: "#errorMessage-", successIdPrefix: "#successMessage-" } }, addToCart: function(e, t, i, a) { if ("undefined" == typeof a) var r = $("#add-to-cart-form");
        else var r = $("#" + a);
        0 == r.length && (r = $("#add-to-cart-form-" + t)); var o = this.config.css.errorParentIdPrefix + t,
            n = this.config.css.errorIdPrefix + t,
            s = this.config.css.successIdPrefix + t; if (loading(), quantityAdded = $("#" + t + "-qty").val(), 0 >= quantityAdded) return void require(["CartModel"], function(e) { loadingComplete(), WebStore.Common.showParentedMessage(o, n, e.getSharedInstance().get("quantityRequiredMessage")) }); if (i > 0 && parseInt(quantityAdded) > parseInt(i)) { loadingComplete(), $("#overlimit-check-modal-item-quantity").html(quantityAdded); var l = $("#overlimit-check-modal-item-confirm"); return l.off("click"), l.on("click", function() { WebStore.Cart.addToCart(e, t), modalClose("overlimit-check-modal") }), modalOpen("generic-modal", "overlimit-check-modal"), !1 } var d = function() { require(["EventAggregatorController"], function(e) { e.getSharedInstance().trigger(e.Event_ItemWasAddedToCartSuccessfully, { productNumber: t }) }), window.location = "/cart" },
            c = function() { require(["CartModel"], function(e) { WebStore.Common.hideMessage(s), WebStore.Common.showParentedMessage(o, n, e.getSharedInstance().get("errorAddingToCartMessage")) }) },
            u = function() { loadingComplete() },
            h = r.attr("action"),
            p = r.formSerialize();
        $.post(h, p, d).fail(c).always(u) }, refreshNavBarComponent: function(e) { var t; "quote" == e && (t = $("#quoteTab").contents().length > 0); var i = function(i) { if (null != i.data && 0 == t) { if (0 == i.code || 3 == i.code) { var a = ""; "quote" == e && (a = "quote-nav-link"), "lists" == e && (a = "lists-nav-link") } 3 == i.code ? ($("#" + a).prop("display", "none"), $("#" + a).prop("class", "hidden")) : ($("#" + a).prop("display", "block"), $("#" + a).prop("class", " ")) } },
            a = function() { console.log("Unable to get the response from JSON") };
        $.ajax({ url: "/cart/refreshNavBarComponent/" + e + "Link", type: "GET", cache: !1, headers: { Accept: "application/json; charset=utf-8", "Content-Type": "application/json; charset=utf-8" }, success: i, error: a }) } }, WebStore.ResourceCenter = WebStore.ResourceCenter || {}, WebStore.ResourceCenter = { init: function() { $("#brandsSelection").change(function(e) { $("#brandsSelection").val();
            e.preventDefault(), $(this).is(".disabled") || $("#resourceCenter-productImages-form").submit() }), $("#brand-style-goButton").click(function(e) { var t = $("#brandsSelection").val(),
                i = $("#stylesSelection").val(); return e.preventDefault(), $(this).is(".disabled") ? void 0 : "" == t || "" == i ? void WebStore.ResourceCenter.showStatusMessage("Please select a valid Brand and Style from the drop-down", "invalid-messageColor") : void $("#resourceCenter-productImages-form").submit() }) }, showStatusMessage: function(e, t) { $(".brandStyleValidation").addClass(t).find("span").text(e) }, clearStatusMessage: function(e) { $(".brandStyleValidation").removeClass(e).find("span").text("") } }, $(document).ready(function() { WebStore.ResourceCenter.init() }), WebStore.CategoryNavigation = { getSubcategoriesForCategory: function(e, t) { var i = function(e) { var i = "#subCategories-" + t;
                $("#expand-" + t).hide(), null != e && "" != e ? ($(i).show(), $(i).html(""), $(i).html(e)) : $("#expand-" + t).hide() },
            a = function() {};
        $.ajax({ type: "get", url: "/search/getSubCategoriesForCategory" + e, cache: !1, success: i, error: a }) }, collapseSubcategoriesView: function(e) { var t = "#subCategories-" + e;
        $(t).hide(), $("#expand-" + e).show() } }, WebStore.VehicleGuide = { packageTireQty: 0, packageWheelQty: 0, Config: { CSS: { Ids: { tiresLink: "#ui-id-1", wheelsLink: "#ui-id-2", tpmsLink: "#ui-id-3", packageTireQty: "#tireQty", packageWheelQty: "#wheelQty", tireQtyAddtoOrder: "#tireQtyAddtoOrder", wheelQtyAddtoOrder: "#wheelQtyAddtoOrder", frontCheckBox: "#frontCheckBox", rearCheckBox: "#rearCheckBox", frontDropdown: "#frontDropdown", rearDropdown: "#rearDropdown", frontDependentPrefix: "#frontDependent", frontIndependentPrefix: "#frontIndependent", rearDependentPrefix: "#rearDependent", rearIndependentPrefix: "#rearIndependent", packageCostAndQuantity: "#packageCostAndQuantity", packageToListLink: "#packageToListLink", packageToQuoteLink: "#packageToQuoteLink", packageToQuoteForm: "#packageToQuoteForm", fitsOeWheel: "#fitsOeWheel" }, Classes: { packageQty: ".packageQty", packageQtyForm: ".packageQtyForm", addPackageToOrderLink: ".addPackageToOrder", addPackageForm: ".addPackageForm" } } }, bindUpdatePackageQtyForm: function() { var e = WebStore.VehicleGuide.Config.CSS.Ids.packageCostAndQuantity,
            t = function(t) { $(e).html(t) },
            i = function() { $(tireQtyId).val(WebStore.VehicleGuide.packageTireQty), $(wheelQtyId).val(WebStore.VehicleGuide.packageWheelQty) },
            a = WebStore.VehicleGuide.Config.CSS.Classes.packageQtyForm; return WebStore.Common.bindAjaxForm(a, t, i), this }, bindAddPackageToQuote: function() { var e = function(e) { displayUpdatedRetailQuote(e) },
            t = function() { alert("Error") },
            i = WebStore.VehicleGuide.Config.CSS.Ids.packageToQuoteForm; return WebStore.Common.bindAjaxForm(i, e, t), this }, addPackageToList: function() { { var e = $("#addToListProduct-form").serialize();
            $.ajax({ url: $("#addToListProduct-form").attr("action"), type: "post", data: e }).done(function() { modalClose("add-to-list-id") }).fail(function(e) { alert(e.responseText) }) } }, bindShowPackageToListModal: function() { var e = WebStore.VehicleGuide.Config.CSS.Ids.packageToListLink;
        $(e).click(function(e) { e.preventDefault(), e.stopPropagation(), $("#addToListProduct-form select[name=listCode]").find("option").remove().end().append("<option value='--'>--</option>").val("--"), $.get("/lists/getProductLists", function(e) { for (var t in e) $("#addToListProduct-form select[name=listCode]").append($("<option/>").attr("value", t).text(e[t])) }), modalOpen("add-to-list-modal", "add-to-list-id") }) }, init: function() { $("#top-tabs").on("tabsbeforeactivate", function(e, t) { loading(), tabId = t.newTab.context.id, e.preventDefault(), e.stopPropagation(), linkId = "#" + t.newTab.context.id + "-link", window.setTimeout("window.location = $(linkId).attr('href')", 500) }), this.bindUpdatePackageQtyForm(); var e = (WebStore.VehicleGuide.Config.CSS.Classes.packageQty, WebStore.VehicleGuide.Config.CSS.Ids.packageTireQty),
            t = WebStore.VehicleGuide.Config.CSS.Ids.packageWheelQty;
        $(e).keyup(function() { var e = $("#tireQuantityForm").serialize();
            $.ajax({ url: "/vehicleguide/updatepackageqty", type: "post", data: e, success: function(e) { var t = $.parseJSON(e);
                    t.total && ($("#packageTotalAmount").html(t.total), $("#packageTotalAmount").removeClass("display-none"), $("#packageTotal").removeClass("display-none"), $("#tireQtyAddtoOrder").val(t.quantity), $("#tireQtyAddtoQuote").val(t.quantity)), t.addPackageError ? $("#updateQuantityError").removeClass("display-none") : $("#updateQuantityError").addClass("display-none"), $(".package-error").html("") } }) }), $(t).keyup(function() { var e = $("#wheelQuantityForm").serialize();
            $.ajax({ url: "/vehicleguide/updatepackageqty", type: "post", data: e, success: function(e) { var t = $.parseJSON(e);
                    t.total && ($("#packageTotalAmount").html(t.total), $("#packageTotalAmount").removeClass("display-none"), $("#packageTotal").removeClass("display-none"), $("#wheelQtyAddtoOrder").val(t.quantity), $("#wheelQtyAddtoQuote").val(t.quantity)), t.addPackageError ? $("#updateQuantityError").removeClass("display-none") : $("#updateQuantityError").addClass("display-none"), $(".package-error").html("") } }) }); var i = WebStore.VehicleGuide.Config.CSS.Classes.addPackageToOrderLink;
        $(i).click(function(e) { e.preventDefault(), e.stopPropagation(), $(this).closest("form").submit() }); var a = WebStore.VehicleGuide.Config.CSS.Ids.packageToQuoteLink;
        $(a).click(function(e) { e.preventDefault(), e.stopPropagation(), $(this).closest("form").submit() }), WebStore.VehicleGuide.bindAddPackageToQuote() }, clickTab: function(e) { var t = $("#activeTab").val(),
            i = e.split("-")[2],
            a = window.location.href,
            r = !1; return "1" == i ? (i = "one", a = $("#pltTiresURL").val(), r = $('a[href="#search-tires-tab"]').length > 0 ? !0 : !1) : "2" == i ? (i = "two", a = $("#customWheelsURL").val(), r = $('a[href="#search-wheels-tab"]').length > 0 ? !0 : !1) : "3" == i && (i = "three", a = $("#tpmsURL").val(), r = $('a[href="#search-tpms-tab"]').length > 0 ? !0 : !1), t == i ? !1 : (loading(), void(r ? $(e).click() : window.location.href = a)) }, loadSearchViewDefault: function() { "listView" == $("#selectDefaultView").val() || "" == $("#selectDefaultView").val() || void 0 == $("#selectDefaultView").val() ? $(".list-view").attr("src", "/_ui/desktop/common/images/list_view_active.png") : ($(".product-list-description").show(), $(".product-list-description-wheels").show(), $(".grid-view").attr("src", "/_ui/desktop/common/images/grid_view_active.png")) } }, WebStore.availability = WebStore.availability || {}, WebStore.availability = { init: function() { $("input:radio[name=availabilitySelection]").change(function() { $(this).is(".disabled") || (window.location = $(this).val()) }), $("input:radio[name=myBrandsSelection]").change(function() { $(this).is(".disabled") || (window.location = $(this).val()) }) } }, $(document).ready(function() { WebStore.availability.init() }), WebStore.refinement = WebStore.refinement || {}, WebStore.refinement = { init: function() { $("input:checkbox[name=refinements]").change(function() { if (!$(this).is(".disabled")) { var e = $(this).attr("data-url");
                window.location = e } }) } }, $(document).ready(function() { WebStore.refinement.init() }), WebStore.Category = { refineWheelSizeSelections: function() { var e = $("#wheelSizeSearch"),
            t = $("#wheelSizeSearchSelection"),
            i = function(i) { $(e).find("select").each(function() { $(this).empty() }), t.html(i) },
            a = function() {};
        $.ajax({ type: "get", url: "/category/wheelsize/refine", cache: !1, data: e.serialize(), success: i, error: a }) } }, WebStore.ga = WebStore.ga || {}, WebStore.ga = { eventHandler: function() { $(".gaProdData").each(function() { if ($(this).is(":visible") && WebStore.ga.isElementInViewport($(this)) && !$(this).hasClass("tagfired")) { var e = [];
                $($(this).data("section")).each(function() { e.push({ brand: $(this).data("brand"), id: $(this).data("product-number").toString(), list: sessionStorage.getItem("searchType"), name: $(this).data("name"), position: $(this).data("position").toString(), price: $(this).data("price").toString(), variant: $(this).data("variant"), category: $(this).data("category"), dimension15: $(this).data("dimension15").toString(), dimension16: $(this).data("dimension16").toString(), dimension17: $(this).data("dimension17").toString() }), $(this).addClass("tagfired") }), dataLayer.push({ event: "productImpression", eventAction: "Product Impression", eventCategory: "eCommerce", eventLabel: sessionStorage.getItem("searchType"), eventValue: 1, ecommerce: { impressions: e } }) } }) }, isElementInViewport: function(e) { "function" == typeof jQuery && e instanceof jQuery && (e = e[0]); var t = e.getBoundingClientRect(); return t.top >= 0 && t.top <= (window.innerHeight || document.documentElement.clientHeight) || t.bottom >= 0 && t.bottom <= (window.innerHeight || document.documentElement.clientHeight) || t.top <= 0 && t.bottom >= (window.innerHeight || document.documentElement.clientHeight) } }, $(window).on("DOMContentLoaded load resize scroll", WebStore.ga.eventHandler);
var global;
! function() { global = { events: function() { $(".accordion-wrap h4 , .navDetails").click(function(e) { if ("homepage-add-list-to-cart" !== e.target.id && !$(this).hasClass("accordion-mylist-link")) { var t = "/_ui/desktop/common/images/leftDownCaret.png",
                        i = "/_ui/desktop/common/images/ArrowRt_GreyAcc.png"; if ($(this).hasClass("navDetails")) { var a = "inner-list"; if ($(e.target).hasClass("image-icon-down-arrow-inner-list")) var a = $(this).next(".navDetails-conten").css("display") } else var a = $(this).next().css("display"); if ($(this).hasClass("refine-navDetails")) { var a = $(this).next(".navDetails-content").css("display"); "none" == a ? $(this).find(".image-icon-down-arrow").attr("src", t) : $(this).find(".image-icon-down-arrow").attr("src", i) } if ($(this).data("target")) var r = $(this).data("target").split("#"),
                        o = r[1];
                    else var o = ""; "none" == a ? ($(this).removeClass("collapse"), $(this).addClass("collapsed"), $("." + o + "-arrow-down-right").attr("src", t), $("." + o + "-arrow-down-right").removeClass("image-icon-right-arrow"), $("." + o + "-arrow-down-right").addClass("image-icon-down-arrow")) : "inner-list" !== a && ($(this).removeClass("collapsed"), $(this).addClass("collapse"), $("." + o + "-arrow-down-right").attr("src", i), $("." + o + "-arrow-down-right").removeClass("image-icon-down-arrow"), $("." + o + "-arrow-down-right").addClass("image-icon-right-arrow")), $(this).hasClass("navDetails") ? $(this).hasClass("refine-navDetails") ? $(this).next(".navDetails-content").slideToggle("fast") : $(e.target).hasClass("image-icon-down-arrow-inner-list") && $(this).next(".navDetails-conten").slideToggle("fast") : $(this).parent().find(".accordion-container").slideToggle("fast"); var n;
                    n = e.target.hasChildNodes() ? e.target.id : e.target.parentElement.id, $("#" + n).hasClass("collapse") ? sessionStorage.setItem(n, "off") : sessionStorage.setItem(n, "on") } }), $(".compare-product .products .compare-product-item .delete-action").off("click").on("click", function() { var e = $(".compare-product .products .compare-product-item a").index(this);
                $(this).closest(".compare-product-item").hide(), $(".compare-product .compare-description table.desc-table tr").each(function(t, i) { $(i).find("td:eq(" + (e + 1) + ")").hide() }) }) } } }(), $(document).ready(function() {
    function e() { $("ul.nav-tabs li.button-gap").each(function() { $(this).removeClass("active") }) } preventClickJacking(), $("tr[data-href]").on("click", function() { document.location = $(this).data("href") });
    var t = $("#searchResultsTab").val(),
        i = sessionStorage.getItem("selectedPage"),
        a = sessionStorage.getItem("selectedTabIndex"),
        r = sessionStorage.getItem("selectedTab");
    if (null === r) { var o = $(".multiTabsGlobalSearch li:first").text().toLowerCase();
        o && (t = o) } else t = r;
    $(".multiTabsGlobalSearch").click("tabsselect", function() { var e = $(".multiTabsGlobalSearch .ui-tabs-active").index();
        sessionStorage.setItem("selectedTabIndex", e); var t = $(".multiTabsGlobalSearch .ui-tabs-active").text().toLowerCase();
        updatePaginationDisplay(t, 1, $(".userSelectedNumber").val()), $("#pagination-text-" + t).val(1) }), $(".multiTabSearchTabs").tabs({ active: parseInt(a) || 0, activate: function() {} });
    var n = $("#vehicle-search-active-tab").val();
    if ("one" === n || "two" === n || "three" === n) { var s = sessionStorage.getItem("isFromDetailPage");
        null !== s && "true" === s ? (i = sessionStorage.getItem("selectedPage"), sessionStorage.removeItem("isFromDetailPage")) : i = 1, "one" === n ? ($("#navtab-tiresLink").addClass("active"), t = "tires") : "two" === n ? ($("#navtab-wheelsLink").addClass("active"), t = "wheels") : "three" === n && (t = "tpms") }
    var l = $("#userSelectedNumber").val();
    ("All" == l || null === i) && (i = 1), updatePaginationDisplay(t, i, l), $("#pagination-text-" + t).val(i), $(window).scroll(function() { var e = $("#backToTop");
        $(this).scrollTop() > 645 ? e.fadeIn() : e.fadeOut() }), $("#backToTop").click(function() { return $("html, body").animate({ scrollTop: 0 }, 600), !1 }), $("#list-view-div-tires-" + i).show(), $("#list-view-div-wheels-" + i).show(), $("#list-view-div-tpms-" + i).show(), $("#list-view-div-tubes-" + i).show(), $("#list-view-div-supplies-" + i).show(), $("#grid-view-div-tires-" + i).show(), $("#grid-view-div-wheels-" + i).show(), $("#grid-view-div-tpms-" + i).show(), $("#grid-view-div-supplies-" + i).show(), $("#grid-view-div-tubes-" + i).show();
    var d = (parseInt($("#resultsPerPage").val()), 1);
    if ("keyword" === $("#search-results-page-type").val()) { var c = { name: "tires", totalLength: parseInt($("#tiresLength").val()), maxPagination: parseInt($("#totalPaginationPagesTires").val()), upperName: "Tires" },
            u = { name: "wheels", totalLength: parseInt($("#wheelsLength").val()), maxPagination: parseInt($("#totalPaginationPagesWheels").val()), upperName: "Wheels" },
            h = { name: "tubes", totalLength: parseInt($("#tubesLength").val()), maxPagination: parseInt($("#totalPaginationPagesTubes").val()), upperName: "Tubes" },
            p = { name: "supplies", totalLength: parseInt($("#suppliesLength").val()), maxPagination: parseInt($("#totalPaginationPagesSupplies").val()), upperName: "Supplies" };
        $("#total-length-tires").html(c.totalLength), $("#total-length-wheels").html(u.totalLength), $("#total-length-tubes").html(h.totalLength), $("#total-length-supplies").html(p.totalLength); var m = 1;
        0 !== c.maxPagination ? m = c.maxPagination : 0 !== u.maxPagination ? m = u.maxPagination : 0 !== h.maxPagination ? m = h.maxPagination : 0 !== p.maxPagination && (m = p.maxPagination), i > m && (updatePaginationDisplay(t, 1, l), $("#pagination-text-" + t).val(1)), $("#pagination-text-tires").spinner({ min: 1, max: c.maxPagination, start: function(e) { d = $(e.target).spinner("value") }, classes: { "ui-spinner-up": "tires" }, stop: function(e) { var t = $(e.target).data().tab,
                    i = $(e.target).spinner("value");
                (0 >= i || i > c.maxPagination) && (d > c.maxPagination && (i = 1), i = d, $(e.target).spinner("value", i)), updatePaginationDisplay(t, i, c.maxPagination) } }), $("#pagination-text-wheels").spinner({ min: 1, max: u.maxPagination, start: function(e) { d = $(e.target).spinner("value") }, stop: function(e) { var t = $(e.target).data().tab,
                    i = $(e.target).spinner("value");
                (0 >= i || i > u.maxPagination) && (d > u.maxPagination && (i = 1), i = d, $(e.target).spinner("value", i)), updatePaginationDisplay(t, i, u.maxPagination) } }), $("#pagination-text-tubes").spinner({ min: 1, max: h.maxPagination, start: function(e) { d = $(e.target).spinner("value") }, stop: function(e) { var t = $(e.target).data().tab,
                    i = $(e.target).spinner("value");
                (0 >= i || i > h.maxPagination) && (d > h.maxPagination && (i = 1), i = d, $(e.target).spinner("value", i)), updatePaginationDisplay(t, i, h.maxPagination) } }), $("#pagination-text-supplies").spinner({ min: 1, max: p.maxPagination, start: function(e) { d = $(e.target).spinner("value") }, stop: function(e) { var t = $(e.target).data().tab,
                    i = $(e.target).spinner("value");
                (0 >= i || i > p.maxPagination) && (d > p.maxPagination && (i = 1), i = d, $(e.target).spinner("value", i)), updatePaginationDisplay(t, i, p.maxPagination) } }), 1 === c.maxPagination && ($(".ui-spinner-up").addClass("button-disabled"), $("#end-value-tires").html(c.totalLength), $("#total-length-tires").html(c.totalLength), $("#pagination-next-tires").addClass("button-disabled")), 1 === u.maxPagination && ($("#end-value-wheels").html(u.totalLength), $("#total-length-wheels").html(u.totalLength), $("#pagination-next-wheels").addClass("button-disabled")), 1 === h.maxPagination && ($("#end-value-tubes").html(h.totalLength), $("#total-length-tubes").html(h.totalLength), $("#pagination-next-tubes").addClass("button-disabled")), 1 === p.maxPagination && ($("#end-value-supplies").html(p.totalLength), $("#total-length-supplies").html(p.totalLength), $("#pagination-next-supplies").addClass("button-disabled")) } else { var m = parseInt($("#totalPaginationPages").val()),
            g = $("#totalLength").val(); if ($(".total-product-length").html(g), "All" == l && $("span.end-value").html(g), $(".pagination-text").spinner({ min: 1, max: m, start: function(e) { d = $(e.target).spinner("value") }, stop: function(e) { var t = $(e.target).data().tab,
                        i = $(e.target).spinner("value");
                    (0 >= i || i > m) && ($(e.target).spinner("value", d), i = d), updatePaginationDisplay(t, i, m) } }), 1 === m) { $(".ui-spinner-up").addClass("button-disabled"), $(".btn-next").addClass("button-disabled"); var g = $("#totalLength").val();
            $(".total-product-length").html(g), $(".end-value").html(g) } else if (0 === m) { $(".ui-spinner-up").addClass("button-disabled"), $(".btn-next").addClass("button-disabled"); var g = $("#totalLength").val();
            $(".total-product-length").html(g), $(".filtered-range").html(g) } } $(".ui-spinner-down").addClass("button-disabled"), $(".pagination-text").keydown(function(e) { switch (e.key) {
            case "Enter":
                break;
            default:
                return } e.preventDefault() }), $(".pagination-text").change(function(e) { var t = $(e.target).data().tab,
            i = $(e.target).spinner("value"); "keyword" === $("#search-results-page-type").val() ? (m = $(e.target).data().maxPagination, updatePaginationDisplay(t, i, m)) : updatePaginationDisplay(t, i, m) }), $(".pagination-next-prev").click(function(e) { e.preventDefault(), e.stopPropagation(); var t = $(e.target).data().tab,
            i = $(e.target).data().control,
            a = $("#pagination-text-" + t).spinner("value"); "stepDown" === i ? (a -= 1, $("#pagination-text-" + t).spinner("value", a)) : (a += 1, $("#pagination-text-" + t).spinner("value", a)), $("#pagination-text-" + t).change(), WebStore.ga.eventHandler() }), $(".product-action-id option").prop("selected", function() { return this.defaultSelected }), $(".product-action-id").css("background-color", "white"), $(".product-action-id").on("click", function(e) { navigator.userAgent.indexOf("MSIE") <= 0 && $(e.target).css("background-color", "transparent") }), $(".product-action-id").on("blur", function() { $(this).css("background-color", "white") }), fontAwesomeSettingIE(), $("a.how-we-use-email").tooltip({ track: !0, items: "a", show: { effect: "fade", duration: 200 }, hide: { effect: "fade", duration: 200 }, tooltipClass: "tooltipEmail", content: $("#how-we-use-your-email").html(), disabled: !0 }), $("#compare-tabs").tabs(), $("#package-div").hide();
    var f = window.location.pathname;
    if ("/" === f ? (e(), $("#navtab-homeLinkNew").addClass("active")) : -1 !== f.indexOf("category") ? "Tubes & Flaps" === $("#category_Title_Tab").val() ? (e(), $("#navtab-tubesLink").addClass("active")) : "Custom" === $("#category_Title_Tab").val() && (e(), $("#navtab-customLink").addClass("active")) : -1 !== f.indexOf("resourceCenterPage") ? (e(), $("#navtab-resourcesLink").addClass("active")) : -1 !== f.indexOf("feedback") ? (e(), $("#navtab-contactLink").addClass("active")) : -1 !== f.indexOf("retail-quote") ? (e(), $("#navtab-quoteLink").addClass("active")) : (-1 !== f.indexOf("/lists") || -1 !== f.indexOf("/order-history") || -1 !== f.indexOf("/messages") || -1 !== f.indexOf("/my-account") || -1 !== f.indexOf("/quote-setup") || -1 !== f.indexOf("/cart")) && e(), -1 !== f.indexOf("/search") || -1 !== f.indexOf("/vehicleguide") || -1 !== f.indexOf("/product-type") || -1 !== f.indexOf("/p/") || -1 !== f.indexOf("/lists/view") || -1 !== f.indexOf("/category")) { var v = window.location.pathname + window.location.search;
        $("#searchReferrer").val(v), $(".searchUrl").val(v) } $(".nav-tabs li").on("click", function(e) { $(".address-detail, .phone-online, .account-nav-menu, .languageList, .accordion_container").hide(), sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab"), $(".nav-tabs li").removeClass("active"), $(this).addClass("active"); var t = $(this).data().navTabs;
        $("#active-nav-tab").val(t), $(this).has("ul").length > 0 && ($(this).has("ul").find("ul.sub-nav").is(":visible") || $(this).has("ul").find("ul.sub-nav").show(), e.stopPropagation()) }), $("#showAd").on("click", function(e) { if ($(e.target).closest("div.vechicleGuideAdBanner").length > 0 || $(e.target).closest("div.keywordSearchAdBanner").length > 0 || $(e.target).closest("div.categoryAdBanner").length > 0) { var t = $(e.target).parent("#showAd").attr("href");
            $(t).toggle(function() { "none" == $(this).css("display") ? ($(".hideAd").css("display", "none"), $(".showAd").css("display", "block")) : ($(".hideAd").css("display", "block"), $(".showAd").css("display", "none")) }) } }), $(".gridDiv:even").css("background-color", "#fcfcfc"), $(".gridDiv:odd").css("background-color", "#f6f6f6"), $(".listView:even").css("background-color", "#fcfcfc"), $(".listView:odd").css("background-color", "#f6f6f6"), $(".featured-product .gridDiv").css("background-color", "#e6ebff"), $(".featured-product .listView").css("background-color", "#e6ebff"), $("#product-detail-carousel").slick({ infinite: !1, slidesToShow: 4, slidesToScroll: 1, prevArrow: '<span class="carousel-prev"><i class="fa fa-chevron-left"></i></span>', nextArrow: '<span class="carousel-next"><i class="fa fa-chevron-right"></i></span>' }), $("#search-tabs").tabs(), $("#upload-file").attr("disabled", "disabled"), $("#input-file").change(function() { $(this).val().indexOf(".xls") > 0 || $(this).val().indexOf(".xlsx") > 0 ? ($("#error-file").addClass("hidden"), "" != $(this).val() ? $("#upload-file").removeAttr("disabled") : $("#upload-file").attr("disabled", "disabled")) : ($(this).val(""), $("#error-file").removeClass("hidden")) });
    var C = $("#addtolistproductid").val(),
        b = $("#tabSelector").val(),
        w = $("#listCount").val(),
        k = getQueryString("qty");
    k && $(".order-data-quantity").val(k), $("#listTabs").tabs(-1 === window.location.search.indexOf("tab") ? "" != C && w > 0 && "addToListTab" === b ? { active: 2 } : "" != C && 1 > w ? { active: 1 } : { active: 0 } : -1 !== window.location.search.indexOf("addtolist") && w > 0 ? { active: 2 } : -1 !== window.location.search.indexOf("createlist") && w > 0 ? { active: 1 } : -1 !== window.location.search.indexOf("createlist") && 0 > w ? { active: 1 } : { active: 1 });
    var y = $("#productProfileActiveTab").val();
    y && $(".tabs-container").tabs("0" === y ? { active: 0 } : "1" === y ? { active: 1 } : "2" === y ? { active: 2 } : "3" === y ? { active: 3 } : { active: 3 });
    var y = $("#productProfileActiveTab").val();
    y && $(".tabs-container").tabs("0" === y ? { active: 0 } : "1" === y ? { active: 1 } : "2" === y ? { active: 2 } : "3" === y ? { active: 3 } : { active: 3 });
    var S = $("#rqTabSelector").val();
    S && $("#left_nav").find("services" === S ? $(".tab-4").addClass("ui-tabs-active") : "product-profiles" === S ? $(".tab-1").addClass("ui-tabs-active") : "taxes" === S ? $(".tab-2").addClass("ui-tabs-active") : "fees" === S ? $(".tab-3").addClass("ui-tabs-active") : $(".tab-0").addClass("ui-tabs-active"));
    var T = $("#myAccountsTabSelector").val();
    T && ("invoices" === T ? $("#left_nav").find($(".tab-2").addClass("ui-tabs-active")) : "payments" === T ? $("#left_nav").find($(".tab-0").addClass("ui-tabs-active")) : "payments-due" === T ? $("#left_nav").find($(".tab-1").addClass("ui-tabs-active")) : "memos" === T ? $("#left_nav").find($(".tab-4").addClass("ui-tabs-active")) : "statements" === T ? $("#left_nav").find($(".tab-5").addClass("ui-tabs-active")) : "secondary-supplier" === T && $("#left_nav").find($(".tab-3").addClass("ui-tabs-active")));
    var P = "left-nav",
        I = "right-nav";
    if ($("#leftSideArrayHidden").val()) { var x = $("#leftSideArrayHidden").val().split(",");
        (0 != x.length || void 0 != x || null != x) && loadOrderingData(P, x) } else "hide" === $("#leftRailShowPersonalization").val() && $(".left-nav .accordion-wrap").hide();
    if ($("#rightSideArrayHidden").val()) { var M = $("#rightSideArrayHidden").val().split(",");
        (0 != M.length || void 0 != M || null != M) && loadOrderingData(I, M) } else "hide" === $("#rightRailShowPersonalization").val() && ($(".right-nav .accordion-wrap").hide(), $(".quick-links").show()), $(".quick-links").show();
    if (void 0 != $(".next-occurrence").val() && "" != $(".next-occurrence").val()) { var D = []; if ($(".next-occurrence").each(function() { var e = $(this).data("list-name"),
                    t = $(this).val(),
                    i = new Date,
                    a = (i.getDate() + "/" + i.getMonth() + "/" + i.getFullYear(), new Date(i.getFullYear(), i.getMonth(), i.getDate())),
                    r = new Date(t);
                a - r == 0 ? D.push(e) : ($(".list-accordion-container").addClass("hidden"), $(".navDetails-conten").addClass("hidden"), $(".mylists-arrow-down-right").attr("src", "/_ui/desktop/common/images/ArrowRt_GreyAcc.png"), $(".mylists-arrow-down-right").addClass("image-icon-right-arrow"), $(".mylists-arrow-down-right").removeClass("image-icon-down-arrow")) }), D.length > 0) { $(".mylists-arrow-down-right").attr("src", "/_ui/desktop/common/images/leftDownCaret.png"), $(".mylists-arrow-down-right").removeClass("image-icon-right-arrow"), $(".mylists-arrow-down-right").addClass("image-icon-down-arrow"), $(".list-accordion-container").removeClass("hidden"), $(".navDetails-conten").addClass("hidden"), $(".image-icon-down-arrow-inner-list").attr("src", "/_ui/desktop/common/images/ArrowRt_GreyAcc.png"), $(".image-icon-down-arrow-inner-list").addClass("image-icon-right-arrow"), $(".image-icon-down-arrow-inner-list").removeClass("image-icon-down-arrow"); for (var L = 0; L < D.length; L++) $("." + D[L] + "-arrow-down-right").attr("src", "/_ui/desktop/common/images/leftDownCaret.png"), $("." + D[L] + "-arrow-down-right").addClass("image-icon-right-arrow"), $("." + D[L] + "-arrow-down-right").removeClass("image-icon-down-arrow"), $("#" + D[L]).show() } } else $(".list-accordion-container").addClass("hidden"), $(".navDetails-conten").addClass("hidden"), $(".mylists-arrow-down-right").attr("src", "/_ui/desktop/common/images/ArrowRt_GreyAcc.png"), $(".mylists-arrow-down-right").addClass("image-icon-right-arrow"), $(".mylists-arrow-down-right").removeClass("image-icon-down-arrow");
    collapseAccordion(), $("#home-carousel .carousel").slick({ infinite: !0, speed: 500, autoplay: !0, autoplaySpeed: 4e3, prevArrow: '<span class="carousel-prev"><i class="fa fa-chevron-left"></i></span>', nextArrow: '<span class="carousel-next"><i class="fa fa-chevron-right"></i></span>', asNavFor: ".home-carousel-nav ul" }), $(".home-carousel-nav ul").slick({ vertical: !0, infinite: !0, arrows: !1, slidesToShow: 4, autoplay: !0, asNavFor: "#home-carousel .carousel", focusOnSelect: !0 }), $("#bottom-tabs").tabs({ active: 0 }), $("#program-carousel").slick({ dots: !0, infinite: !1, speed: 500, prevArrow: '<button class="carousel-prev"><i class="fa fa-chevron-left"></i></button>', nextArrow: '<button class="carousel-next"><i class="fa fa-chevron-right"></i></button>' }), $("alert-box").show();
    var F = $(".alert-container > .alert-box");
    $(F).slice(3).hide();
    $(".alert-count").text();
    if ($(".choosefilebtn").change(function(e) { var t = $(".choosefilebtn").val(),
                i = t.substring(t.lastIndexOf(".")),
                a = e.target.value.split("\\"); ".csv" == i || ".xlsx" == i || ".xls" == i ? (a.length && $("#csv-file-name").text(a[a.length - 1]), $("#stock-order-upload-error").addClass("hidden"), $("#csv-file-name").removeClass("hidden"), $("#uploadfilebtn").prop("disabled", !1), $("#uploadfilebtn").removeClass("hidden"), $(".browse-stock-order-file").addClass("hidden"), $(".clearfile").removeClass("hidden")) : ($("#uploadfilebtn").prop("disabled", !0), $("#stock-order-upload-error").removeClass("hidden"), $("#csv-file-name").addClass("hidden")) }), $("#uploadfilebtn").addClass("hidden"), $(".clearfile").addClass("hidden"), $(".clearfile").click(function() { $("#uploadfilebtn").addClass("hidden"), $(".clearfile").addClass("hidden"), $(".browse-stock-order-file").removeClass("hidden"), $(".choosefilebtn").val(""), $("#csv-file-name").text("") }), "" !== $("#cobrand-logo-image").attr("src") ? $("#cobrand-logo-image").show() : $(".delete-link").css("display", "none"), $("#file-input").change(function() { var e = $("#file-input").val(),
                t = e.substring(e.lastIndexOf(".")); if ((".jpg" === t || ".png" === t || ".jpeg" === t) && isIE() && isIE() < 10) { var i = e.split("\\")[2];
                $("#cobrand-logo-filename").html(i), $("#cobrand-logo-filename").show(), $(".js-invalid-file-upload-label").hide() } }), global.events(), $(".image-icon-blue-question").click(function(e) { e.stopPropagation(), e.preventDefault(), $("." + e.target.id + "-helppopup").html(""), $("." + e.target.id + "-helppopup").css("display", "none"); var t, i = $("#searchOrigin").val();
            t = i ? "/ajax/search/contextualHelpComponent/" + e.target.id + "/" + i : "/ajax/contextualHelpComponent/" + e.target.id, $.ajax({ type: "GET", url: t }).done(function(t) { $("." + e.target.id + "-helppopup").append(t.data), t.data && $("." + e.target.id + "-helppopup").css("display", "block"), $(".close-btn-right").click(function(e) { $(this).closest("div").parent().css("display", "none"), e.stopPropagation(), e.preventDefault() }), $(".close-btn-left").click(function(e) { $(this).closest("div").parent().css("display", "none"), e.stopPropagation(), e.preventDefault() }) }) }), $(".image-icon-blue-question").dblclick(function(e) { e.preventDefault() }), $("html").click(function(e) {
            (0 === $(e.target).closest(".helppopup_left").length || 0 === $(e.target).closest(".helppopup_right").length) && ($(".helppopup_left").hide(), $(".helppopup_right").hide()) }), $(".rear-size-action").click(function(e) { "remove-rear-size-div" === e.target.id ? ($("#searchTerm").val($("#searchTermOne").val()), $(".tire-size-front").show(), $(".tire-size-all").hide(), $(".tire-size-all :input").val(), $("#rebate-error").addClass("hidden"), $(".less-text-error").hide()) : ($(".tire-size-all").show(), $(".tire-size-front").hide(), $("#searchTermOne").val($(".tire-size-front :input").val()), $("#rebate-error").addClass("hidden"), $(".less-text-error").hide()) }), updateRangeErrorMessage(), $(".horizontal-accordion").click(function() { $(".horizontal-container").css("display", "none"), $(".horizontal-accordion").removeClass("active"); var e = $(this).next().toggle();
            e.children().fadeIn(200), $(this).addClass("active") }), $(document).mouseup(function(e) { var t = $(".horizontal-container"),
                i = $(".horizontal-accordion"),
                a = $("#ui-datepicker-div");
            t.is(e.target) || 0 !== t.has(e.target).length || 0 !== a.has(e.target).length || (t.hide(), i.removeClass("active")) }), $("#lang-list").click(function() { $(this).addClass("langActive") }), $(document).mouseup(function(e) { var t = $(".languageList"),
                i = $("#lang-list");
            t.is(e.target) || 0 !== t.has(e.target).length || i.removeClass("langActive") }), $(".search-val, #liteStyleFilterLocation").keyup(function() { var e = $(this).val().length;
            e > "0" && "3" >= e ? $(this).css("border", "2px solid red") : e >= "4" ? $(this).css("border", "2px solid #7FFF00") : $(this).css("border", "1px solid #0d78b9") }), $(".search-val").click(function() { var e = $(this).val().length; "0" == e && $(this).css("border", "1px solid #0d78b9") }), $(".vin-val").keyup(function() { var e = $(this).val().length;
            e > "0" && "10" >= e ? $(this).css("border", "2px solid red") : e >= "11" ? $(this).css("border", "2px solid #7FFF00") : $(this).css("border", "1px solid #0d78b9") }), $("#fitment-message-label").hide(), "keyword" === $("#search-results-page-type").val()) { $(".fitmentMessage").each(function() { "true" == $(this).val() && $("#fitment-message-label").css("display", "block") }) } restoreAccordionVisibilityStatus()
}), window.onunload = function() {}, define("Router", ["jquery", "marionette", "VehicleGuidePageController", "AccountUserCreateStepOnePageController", "AccountUserCreateStepTwoView", "PageControllerMap", "RegistrationFormPageController", "GlobalSearchPageViewMediator", "CompareProductsPageController", "CartView", "DashboardView", "LoginView", "ListsPageController", "SelectLocationModalView", "MakeRecurringView", "MyListEditView", "SearchResultsView", "MyAccountOrderHistorySearchPageController", "OrderHistoryConfirmationNumberPageController", "ListView", "CategoryView", "CommunicationView", "VehicleGuidePackagePageController", "QuoteSetupProfileListView", "QuoteSetupProductProfilesView", "QuoteSetupAddonsView", "QuoteSetupAspectRatioView", "QuoteSetupTaxesView", "QuotePreferencesView", "QuoteSetupListView", "QuoteSummaryView", "QuoteDetailView", "QuoteCreateView", "MyQuotesLinkView", "AccountOrderApprovalsView", "AgreementsPageController", "FeedbackFormPageController", "MyAccountPaymentsListView", "MyAccountPaymentsDueView", "MyAccountInvoicesListView", "MyAccountSecondarySupplierListView", "MyAccountMemosListView", "MyAccountUpdateContactView", "MyAccountOrderHistoryOrderDetailsView", "PrintView", "SearchResultsPrintView", "MyAccountLocationSettingsView", "MyAccountLocationSettingBrandsView", "MyAccountMainView", "ResourceCenterProductImagesView", "PromotionalLandingPageView", "EmailFileModalView", "ProductDetailView", "ManageCreditCardsView", "MyWarrantyController", "MyWarrantyReviewPage", "MyWarrantyClaimInfoPage", "MyWarrantyPrintPage", "WarrantyClaimVehicleInfoController", "PrintVCFPage"], function(e, t, i, a, r, o, n, s, l, d, c, u, h, p, m, g, f, v, C, b, w, k, y, S, T, P, I, x, M, D, $, L, F, V, A, R, B, E, O, N, q, j, _, W, z, U, Q, G, H, K, Y, Z, J, X, et, tt, it, at, rt, ot) { return t.Controller.extend({ mappedPageControllers: [o.createMappedPageController("/product-type/product-type-search/print", U), o.createMappedPageController("/product-type/product-type-search", f), o.createMappedPageController("/my-account/.*/users/print", z), o.createMappedPageController("/my-account/.*/users/.*/details/print", z), o.createMappedPageController("/my-account/.*/users/create/1", a), o.createMappedPageController("^/my-account/order-approvals/print", z), o.createMappedPageController("^/my-account/order-approvals($|/offset/\\d)", A), o.createMappedPageController("^/my-account/.*/users/create/2", r), o.createMappedPageController("/my-account/.*/users/.*/details", r), o.createMappedPageController("/search/global/print", U), o.createMappedPageController("/search/rebates", f), o.createMappedPageController("/search/global", f), o.createMappedPageController("/search/valuebuys/print", U), o.createMappedPageController("/search/valuebuys", f), o.createMappedPageController("/search/refine/print", U), o.createMappedPageController("/search/refine", f), o.createMappedPageController("^/search", s), o.createMappedPageController("/p/.*/detailPage/print", z), o.createMappedPageController("^/p", J), o.createMappedPageController("/category/(tiresizes|wheelsizes)/print", U), o.createMappedPageController("/category/searchsize/print", U), o.createMappedPageController("/category/print", U), o.createMappedPageController("/category", w), o.createMappedPageController("/vehicleguide$", i), o.createMappedPageController("/vehicleguide/package/print", z), o.createMappedPageController("/vehicleguide/package", y), o.createMappedPageController("/vehicleguide/print", U), o.createMappedPageController("/register", n), o.createMappedPageController("/compare/print$", z), o.createMappedPageController("/compare/printpage", z), o.createMappedPageController("/compare", l), o.createMappedPageController("/cart", d), o.createMappedPageController("^/$", c), o.createMappedPageController("/login/storeSelect", p), o.createMappedPageController("/login", u), o.createMappedPageController("/login/forgotPassword", u), o.createMappedPageController("^(/lists/print)", z), o.createMappedPageController("^/lists/view/print", z), o.createMappedPageController("^/lists/view", b), o.createMappedPageController("/lists/makeRecurring", m), o.createMappedPageController("/lists/myListEditPage", g), o.createMappedPageController("/lists", f), o.createMappedPageController("^(/lists$)|(/lists/offset)", h), o.createMappedPageController("/my-account/order-history/search/print", z), o.createMappedPageController("/my-account/order-history/search", v), o.createMappedPageController("/my-account/order-history/details/print", z), o.createMappedPageController("/my-account/order-history/details", W), o.createMappedPageController("/retail-quote/print$", z), o.createMappedPageController("/retail-quote/quote-detail-print", z), o.createMappedPageController("/retail-quote/quote-summary/print", z), o.createMappedPageController("/retail-quote/quote-summary", $), o.createMappedPageController("/retail-quote/back/search", $), o.createMappedPageController("/retail-quote/quote-detail-print", z), o.createMappedPageController("/retail-quote/quote-detail", L), o.createMappedPageController("/retail-quote/updateConsumerInfo", L), o.createMappedPageController("/retail-quote/getUpdatedQuoteComments", L), o.createMappedPageController("/retail-quote/redesign/refreshQuote", F), o.createMappedPageController("/order-history/confirmation-number", C), o.createMappedPageController("/quote-setup/product-profiles/list/print", z), o.createMappedPageController("/quote-setup/product-profiles/list", S), o.createMappedPageController("/quote-setup/product-profiles/(new|edit)", T), o.createMappedPageController("/quote-setup/product-profiles", S), o.createMappedPageController("/quote-setup/(fees|services)/list/print", z), o.createMappedPageController("/quote-setup/(fees|services)/(add|view|addNewFees|addNewServices|editFees|editServices)", P), o.createMappedPageController("/quote-setup/services/aspectRatiosAndDiameter/(edit|view)", I), o.createMappedPageController("/quote-setup/fees/aspectRatiosAndDiameter/(edit|view)", I), o.createMappedPageController("/quote-setup/taxes/list/print", z), o.createMappedPageController("/quote-setup/taxes/(add|view)", x), o.createMappedPageController("/quote-setup/preferences/", M), o.createMappedPageController("/quote-setup", D), o.createMappedPageController("/agreements", R), o.createMappedPageController("/feedback", B), o.createMappedPageController("/my-account/contact/.*/my-account", _), o.createMappedPageController("/my-account/contact/.*/details", _), o.createMappedPageController("/my-account/print", z), o.createMappedPageController("/my-account/accounting/email-file/(payments-due|payments-received|memos)", Z), o.createMappedPageController("/my-account/accounting/payments-due/print", z), o.createMappedPageController("/my-account/accounting/payments-due", O), o.createMappedPageController("/my-account/accounting/payments-received/details/print", z), o.createMappedPageController("/my-account/accounting/payments/print", z), o.createMappedPageController("/my-account/accounting/payments", E), o.createMappedPageController("/my-account/accounting/invoices/details/print", z), o.createMappedPageController("/my-account/accounting/invoices/search/print", z), o.createMappedPageController("/my-account/accounting/invoices", N), o.createMappedPageController("/my-account/accounting/invoice/back/search", N), o.createMappedPageController("/my-account/accounting/secondary-supplier/details/print", z), o.createMappedPageController("/my-account/accounting/secondary-supplier/search/print", z), o.createMappedPageController("/my-account/accounting/secondary-supplier", q), o.createMappedPageController("/my-account/accounting/memos/details/print", z), o.createMappedPageController("/my-account/accounting/memos/search/print", z), o.createMappedPageController("/my-account/accounting/memos", j), o.createMappedPageController("/my-account/locations/communication", k), o.createMappedPageController("/my-account/locations/.*/print", z), o.createMappedPageController("/my-account/locations/.*/brands$", G), o.createMappedPageController("/my-account/locations/", Q), o.createMappedPageController("/my-account/messages/view/.*/print", z), o.createMappedPageController("/my-account/messages/print", z), o.createMappedPageController("/my-account", H), o.createMappedPageController("/resource-center/product-images", K), o.createMappedPageController("/promotion", Y), o.createMappedPageController("/retail-quote/quotePage/print", z), o.createMappedPageController("/view/MyQuotesLinkComponent/Controller", V), o.createMappedPageController("/managecreditcards", X), o.createMappedPageController("/my-warranty/reviewClaim", tt), o.createMappedPageController("/my-warranty/claimInfo", it), o.createMappedPageController("/my-warranty/claimDetail", tt), o.createMappedPageController("/my-warranty/printClaim", at), o.createMappedPageController("/my-warranty/printVCFPage", ot), o.createMappedPageController("/my-warranty/vehicleInfo", rt), o.createMappedPageController("/my-warranty", et)], initialize: function() { this.createMappedController() }, createMappedController: function() { var i = this.getMappedPageControllerClass();
            i && e(document).ready(function() { var e = new i;
                e instanceof t.ItemView ? e.render() : e instanceof t.Object || e.init() }) }, getMappedPageControllerClass: function() { for (var e = document.location.pathname, t = 0; t < this.mappedPageControllers.length; t++) { var i = this.mappedPageControllers[t]; if (i.getRegExp().test(e)) return i.getPageControllerClass() } return void 0 } }) }), define("PageControllerMap", [], function() {
    function e() { var e, t;
        this.setRegExp = function(t) { e = t }, this.getRegExp = function() { return e }, this.setPageControllerClass = function(e) { t = e }, this.getPageControllerClass = function() { return t } } return e.createMappedPageController = function(t, i) { var a = new e; return a.setRegExp(new RegExp(t)), a.setPageControllerClass(i), a }, e }), define("VehicleGuidePackagePageController", ["jquery", "ListModalMediator", "VehicleGuideModel"], function(e, t) {
    function i() {
        function i(t) { return { product: [t.data("tire-product-number"), t.data("wheel-product-number")], quantity: [e("#tireQty").val() ? e("#tireQty").val() : "1", e("#wheelQty").val() ? e("#wheelQty").val() : "1"] } }

        function a() { return l || (l = e(document)), l }

        function r() { return c || (c = e("#vehicle-guide-search-print-link")), c }

        function o() { d = new t({ $eventDelegate: a(), getProductsAndQtyFunction: i, $addToListModal: e("#add-to-list-id"), $createNewListModal: e("#create-list-modal") }) }

        function n() { return e(WebStore.VehicleGuide.Config.CSS.Ids.tireQtyAddtoOrder).val(e(WebStore.VehicleGuide.Config.CSS.Ids.packageTireQty).val()), e(WebStore.VehicleGuide.Config.CSS.Ids.wheelQtyAddtoOrder).val(e(WebStore.VehicleGuide.Config.CSS.Ids.packageWheelQty).val()), e(".addPackageForm").ajaxForm({ success: function(t) { e("#packageCostAndQuantity").html(t), "true" == e("#anyItemsAdded").val() ? window.location = "/cart" : (WebStore.VehicleGuide.init(), n()), loadingComplete() }, error: function() { loadingComplete(), alert("Error") } }), this }

        function s() { var e = "/vehicleguide/package/print" + document.location.search;
            window.open(e, "_blank") } var l, d, c;
        this.init = function() { e("#tirecarouselv").jcarousel({ vertical: !0, scroll: 2 }), e("#wheelcarouselv").jcarousel({ vertical: !0, scroll: 2 });
            e(".selected-tire"), e(".selected-wheel");
            e("#top-tabs").tabs(), o(), WebStore.VehicleGuide.init(), n(), r().click(s) } } return i }), define("MyAccountOrderHistorySearchPageController", ["jquery", "OrderHistoryModel"], function(e, t) { return function() {
        function i() { V = e("#top-tabs"), V.tabs({ activate: a }), A = e("#all-tab"), R = e("#return-tab"), B = e("#hybris-only-order-tab"), E = e("#tirebuyer-tab"), q = e("#myaccount-allorders"), j = e("#myaccount-returnsonly"), _ = e("#myaccount-tborders"), W = e("#orderHistoryResultTabs"), F = e("#orderHistoryData"), O = { date: "date", confirmationNumber: "confirmation", ponumber: "po", status: "status" } }

        function a(t, i) { var a = i.newTab.index(),
                r = i.newPanel.attr("id");
            e("#selectedTab").val(a), e("a.print-link").attr("href", "/my-account/order-history/search/print/" + r) }

        function r() { var t = e("#selectedTab").val(),
                i = 0;
            i = "" !== t && t.length > 1 ? e("a[href$='#" + t + "']").parent().index() : "" !== t ? t : 0, V.tabs("option", "active", i), e("#orderHistoryTabs").find(e(".tab-0").addClass("ui-tabs-active")), o(t) }

        function o(t) { "all-orders" === t ? (q.show(), j.hide(), _.hide(), W.find(e(".tabresult-0").addClass("ui-tabs-active")), W.find(e(".tabresult-1").removeClass("ui-tabs-active")), W.find(e(".tabresult-2").removeClass("ui-tabs-active"))) : "returns-only" === t ? (j.show(), q.hide(), _.hide(), W.find(e(".tabresult-1").addClass("ui-tabs-active")), W.find(e(".tabresult-0").removeClass("ui-tabs-active")), W.find(e(".tabresult-2").removeClass("ui-tabs-active"))) : "tirebuyer" === t && (_.show(), q.hide(), j.hide(), W.find(e(".tabresult-2").addClass("ui-tabs-active")), W.find(e(".tabresult-0").removeClass("ui-tabs-active")), W.find(e(".tabresult-1").removeClass("ui-tabs-active"))) }

        function n() { A.find("th.header").click(c), e(".pageLink").click(v) }

        function s() { E.find("th.header").click(h), e(".pageLinkTireBuyer").click(b) }

        function l() { R.find("th.header").click(u), e(".pageLinkRma").click(C) }

        function d() { B.find("th.header").click(p), e(".pageLinkHybrisOnly").click(w) }

        function c(t) { var i = e(t.currentTarget); if (m(i)) { var a = g(O, i.attr("id")),
                    r = f(i),
                    o = a + "_" + r;
                e("#sortBy").val(o), e("#sortOrder").val(o), e("#rmaOnly").val("N"), e("#tireBuyerOnly").val("N"), e("#hybrisOnly").val("N"), e("#requestedPage").val(1), k(y) } }

        function u(t) { var i = e(t.currentTarget); if (m(i)) { var a = g(O, i.attr("id").replace("Rma", "")),
                    r = f(i),
                    o = a + "_" + r;
                e("#sortRmaBy").val(o), e("#sortRma").val(o), e("#rmaOnly").val("Y"), e("#tireBuyerOnly").val("N"), e("#hybrisOnly").val("N"), e("#requestedRmaPage").val(1), k(S) } }

        function h(t) { var i = e(t.currentTarget); if (m(i)) { var a = g(O, i.attr("id").replace("TireBuyer", "")),
                    r = f(i),
                    o = a + "_" + r;
                e("#sortTireBuyerBy").val(o), e("#sortTireBuyer").val(o), e("#tireBuyerOnly").val("Y"), e("#rmaOnly").val("N"), e("#hybrisOnly").val("N"), e("#requestedTireBuyerPage").val(1), k(T) } }

        function p(t) { var i = e(t.currentTarget); if (m(i)) { var a = g(O, i.attr("id").replace("HybrisOnly", "")),
                    r = f(i),
                    o = a + "_" + r;
                e("#sortHybrisOnlyBy").val(o), e("#sortHybrisOnly").val(o), e("#rmaOnly").val("N"), e("#hybrisOnly").val("Y"), e("#requestedHybrisOnlyPage").val(1), k(P) } }

        function m(e) { return e.hasClass("header-sort-none") || e.hasClass("header-sort-up") || e.hasClass("header-sort-down") }

        function g(t, i) { var a = null; return e.each(t, function(e, t) { return t === i && (a = e), !a }), a }

        function f(e) { return e.hasClass("header-sort-none") || e.hasClass("header-sort-up") ? "desc" : e.hasClass("header-sort-down") ? "asc" : "none" }

        function v(t) { var i = e(t.target),
                a = i.data("pagenumber");
            e("#requestedPage").val(a), e("#pageOrder").val(a), e("#rmaOnly").val("N"), e("#tireBuyerOnly").val("N"), e("#hybrisOnly").val("N"), k(y) }

        function C(t) { var i = e(t.target),
                a = i.data("pagenumber");
            e("#requestedRmaPage").val(a), e("#pageRma").val(a), e("#rmaOnly").val("Y"), e("#tireBuyerOnly").val("N"), e("#hybrisOnly").val("N"), k(S) }

        function b(t) { var i = e(t.target),
                a = i.data("pagenumber");
            e("#requestedTireBuyerPage").val(a), e("#pageTireBuyer").val(a), e("#rmaOnly").val("N"), e("#tireBuyerOnly").val("Y"), e("#hybrisOnly").val("N"), k(T) }

        function w(t) { var i = e(t.target),
                a = i.data("pagenumber");
            e("#requestedHybrisOnlyPage").val(a), e("#pageHybrisOnly").val(a), e("#rmaOnly").val("N"), e("#tireBuyerOnly").val("N"), e("#hybrisOnly").val("Y"), k(P) }

        function k(t) { loading(); var i = F.serialize();
            e.ajax({ url: "/my-account/order-history/search/ajax", type: "post", data: i }).done(function(e) { t(e), loadingComplete() }).fail(function(e) { alert(e.responseText), loadingComplete() }) }

        function y(t) { t && A.html(t), I(e("#sortOrder").val(), ""), n() }

        function S(t) { t && R.html(t), I(e("#sortRma").val(), "Rma"), l() }

        function T(t) { t && E.html(t), I(e("#sortTireBuyer").val(), "TireBuyer"), s() }

        function P(t) { t && B.html(t), I(e("#sortHybrisOnly").val(), "HybrisOnly"), d() }

        function I(t, i) { var a = M(t),
                r = "#" + O[x(t)] + i,
                o = e(r); "asc" === a ? D(o) : "desc" === a && $(o) }

        function x(e) { return e.match(/.+(?=_desc)|.+(?=_asc)/, "")[0] }

        function M(e) { return e.match(/asc$|desc$/, "")[0] }

        function D(e) { e.removeClass("header-sort-none"), e.addClass("header-sort-up") }

        function $(e) { e.removeClass("header-sort-none"), e.addClass("header-sort-down") }

        function L() { e("form[id='orderHistoryData']").submit(function() { "searchTerm" == document.activeElement.id && (loading(), e("#searchBy").val("search_by_number")) }), e("#order-history").on("click", ":checkbox", function() { var t = e(this).data("order-pk"),
                    i = "/my-account/order-history/update-installed/" + t,
                    a = !1;
                e(this).is(":checked") && (a = !0), e.ajax({ url: i + "/" + a, type: "get" }) }) } var F, V, A, R, B, E, O, N, q, j, _, W;
        this.init = function() { N = t.getSharedInstance(), i(), r(), y(), S(), T(), P(), L(), F.find(".order-history-component--rangeFrom").datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: N.get("searchFromDateMax") }), F.find(".order-history-component--rangeTo").datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: N.get("searchToDateMax") }) } } }), define("GlobalSearchPageController", ["jquery", "CompareProductsBehavior", "ListModalMediator", "RefineSearchLeftNavigationView"], function(e, t, i, a) { return function() {
        function r() { return c || (c = e("#product-list-container")), c }

        function o() { return p || (p = e("#global-search-print-link")), p }

        function n() { return u || (u = new i({ $eventDelegate: r(), getProductsAndQtyFunction: s, $addToListModal: e("#add-to-list-id"), $createNewListModal: e("#create-list-modal") })), u }

        function s(e) { return { product: e.data("product-number"), quantity: e.closest(".product-row").find(".qty").val() } }

        function l() { return h || (h = new t, h.set$eventDelegate(r())), h }

        function d() { var e = "/search/global/print" + document.location.search;
            window.open(e, "_blank") } var c, u, h, p, m = new a;
        this.init = function() { n(), l().init(), m.render(), o().click(d) } } }), define("OrderHistoryConfirmationNumberPageController", ["jquery", "ListModalMediator", "RmaModalBehavior"], function(e, t, i) { return function() {
        function a() { return u || (u = new t({ $eventDelegate: e(".add-to-list-link"), getProductsAndQtyFunction: r, $addToListModal: e("#add-to-list-id"), $createNewListModal: e("#create-list-modal") })), u }

        function r() { return { product: o(), quantity: n() } }

        function o() { var t = []; return e(".sequential-data").each(function() { t.push(e(this).data("product_number1")) }), t }

        function n() { var t = []; return e(".input-qty").each(function() { t.push(e(this).html()) }), t }

        function s() { return h || (h = new i, h.set$modal(e(".rma-modal"))), h }

        function l() { return p || (p = e(".order_items_container")), p }

        function d(t) { var i = e(t.target);
            s().setConfirmationNumber(i.data("confirmation-number")), s().setCustomerNumber(i.data("customer-number")), s().setProductNumber(i.data("product-number")), s().setOrderNumber(i.data("order-number")), s().setErrorMessage(i.data("error-message")), s().openModal() }

        function c() { var t = e("a.pickup"),
                i = e(".rma-modal .actions a.quantity-return");
            t.length && t.click(function() { e(".rma-modal").find(".titlebar").hide(), e(".rma-modal").find(".message").hide(), e(".rma-modal").find(".actions.show").hide(), e(".rma-modal .return-response-pick-up").show() }), i.length && i.click(function() { i.attr("id");
                e(".rma-status").removeClass("hidden") }) } var u, h, p;
        this.init = function() { { var t = new Date(e("#order-date").html());
                t.getDate(), t.getMonth() + 1, t.getFullYear() } a(), s().init(), l().on("click", ".return_item_link", d), c(), window.onbeforeprint = function() { e("#order-history-container").attr("style", "overflow: visible;") }, window.onafterprint = function() { e("#order-history-container").removeAttr("style") } } } }), define("AgreementsPageController", ["jquery"], function(e) { return function() {
        function t() { var t;
            e("#btn-agree").click(function() { t = 0, e("input.agree").each(function() { var i = e(this),
                        a = i.parent("td").next("td").children("div.you-must-agree");
                    i.is(":checked") ? (a.hide(), a.prev("p").removeClass("need-to-agree")) : (a.show(), a.prev("p").addClass("need-to-agree"), t += 1) }), 0 == t && document.forms.userAgreementsForm.submit() }) } this.init = function() { t() } } }), define("ListsPageController", ["jquery"], function(e) { return function() {
        function t() { return p || (p = e(document)), p }

        function i() { return m || (m = e("#lists_header_name")), m }

        function a() { return g || (g = e("#lists_header_createdBy")), g }

        function r() { return f || (f = e("#lists_header_name")), f }

        function o() { return v || (v = e("#lists_header_sharingLocation")), v }

        function n(t) { c(e(t.currentTarget), "name") }

        function s(t) { c(e(t.currentTarget), "createdBy") }

        function l(t) { c(e(t.currentTarget), "recurring") }

        function d(t) { c(e(t.currentTarget), "sharingLocation") }

        function c(e, t) { var i, a = e.attr("class");
            h(), a.match("header-sort-down") ? (e.addClass("header-sort-up"), i = "ASC") : (e.addClass("header-sort-down"), i = "DESC"), u(t, i) }

        function u(t, i) { var a = window.location.protocol + "//" + window.location.host + e("#sortControll").val();
            a += t + "~" + i, window.location.assign(a) }

        function h() { for (var e = [i(), a(), r(), o()], t = 0; t < e.length; t++) e[t].removeClass("header-sort-down"), e[t].removeClass("header-sort-up") } var p, m, g, f, v;
        this.init = function() { t().on("click", "#lists_header_name", n), t().on("click", "#lists_header_createdBy", s), t().on("click", "#lists_header_recurring", l), t().on("click", "#lists_header_sharingLocation", d) } } }), define("CompareProductsPageController", ["jquery", "ListModalMediator", "AddToCartForm", "LoadingSpinnerView", "GlobalStorefrontModel"], function(e, t, i, a, r) {
    return function() {
        function o() { return T || (T = e(document)), T }

        function n() { return P || (P = new t({ $eventDelegate: o(), getProductsAndQtyFunction: s, $addToListModal: e("#add-to-list-id"), $createNewListModal: e("#create-list-modal") })), P }

        function s(e) { return { product: e.data("product-number"), quantity: e.closest(".product.totals-border ").find(".qty").val() } }

        function l() { return I || (I = e(".compare-products-component")), I }

        function d() { return x || (x = new i, x.setEventDelegate(l())), x }

        function c() { return M || (M = e("#compare-product-send-email")), M }

        function u(e) { e.stopPropagation() }

        function h() { e("#send-email-div-message").html(""), c().toggle() }

        function p() { for (var t = "", i = [], a = parseInt(e("#productsLength").val()), r = 0; a > r; r++) t = e("#productCode" + r).val(), i.push(t); return i }

        function m() { for (var t = "", i = [], a = parseInt(e("#productsLength").val()), r = 0; a > r; r++) t = e("#priceTaxSrvc" + r).val(), i.push(t); return i }

        function g() { for (var t = "", i = [], a = parseInt(e("#productsLength").val()), r = 0; a > r; r++) t = e("#installedPrc" + r).val(), i.push(t); return i }

        function f() { for (var t = "", i = [], a = parseInt(e("#productsLength").val()), r = 0; a > r; r++) t = e("#retailPrc" + r).val(), i.push(t); return i }

        function v() { for (var t = [], i = parseInt(e("#productsLength").val()), a = 0; i > a; a++) t.push(e("#msrpPrice" + a).val()); return t }

        function C(t) { var i = e("#email-address").val(); if (b(i)) { t.preventDefault(); var a = e(".product-qty-value").val(),
                    r = "/compare/compareProductDetailEmail",
                    o = p(),
                    n = m(),
                    s = g(),
                    l = f(),
                    d = v(),
                    c = e("#goodProductCode").val(),
                    u = e("#betterProductCode").val(),
                    h = e("#bestProductCode").val(),
                    C = e("#emailComments").val();
                e.ajax({ type: "POST", url: r, data: { recipientEmail: i, qty: a, "productCodes[]": o, "taxesAndFeesAndServices[]": n, "installedPrices[]": s, "retailPrices[]": l, "msrpPrices[]": d, goodProductCode: c, betterProductCode: u, bestProductCode: h, emailComments: C }, dataType: "json" }).done(function() {}); var w = e("button#compare-product-email-send-btn").attr("data-email-success-message");
                e("#send-email-div-message").html(w + "  " + i).css({ display: "block", color: "black" }), e("#compare-product-send-email").fadeOut(6e3), e("#send-email-div-message").fadeOut(6e3) } else { t.preventDefault(); var k = e("button#compare-product-email-send-btn").attr("data-email-validation-message");
                e("#send-email-div-message").html(k).css({ display: "block", color: "red" }) } }

        function b(e) { if ("" == e) return !1; var t = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/; return t.test(e) ? !0 : !1 }

        function w(t) {
            var i = parseInt(e("#productsLength").val()),
                a = e(t.target).data().productCode;
            if (3 == i) {
                e("#compareProductsForm").find(e(".compare-values")).remove();
                for (var r = 0, o = 0; i > o; o++) {
                    var n = e("#productCode" + o).val();
                    if (a != n) {
                        var s = '<input type="hidden" class="compare-values" name="productCodes[' + r + ']" value="' + n + '" />';
                        e("#compareProductsForm").append(s), r++
                    }
                }
                e("#compareProductsForm").attr("action", "/compare/getCompareProducts"), e("#compareProductsForm").submit()
            }
        }

        function k() { e("#compareProductsForm").submit() }

        function y() { for (var t, i = parseInt(e("#qtyVal").val()), a = parseInt(e("#productsLength").val()), r = [], o = "", n = [], s = [], l = "", d = 0; a > d; d++) o = e("#productCode" + d).val(), l = e("#netPrice" + d).val(), r.push(o), n.push(l), t = e("#msrp" + d).val(), s.push(t); if (i > 0) { D.showSpinner(); var c = "/compare/taxAndServiceFee?qty=" + i;
                e.ajax({ type: "GET", url: c, data: { "productCode[]": r, "netPrice[]": n, "msrpPrices[]": s }, dataType: "json", success: function(t) { e("#qntValue").val(i); for (var a in t)
                            for (var r = 0; r < t[a].length; r++) { e("#" + a + r).html(t[a][r]), e("#qty" + r).html(i), e("#qtyAtTop" + r).html(i); var o, n; "printLinkUrl" == a ? e("#printLink").attr("href", "/compare/printpage" + window.location.search + t[a]) : 0 == t[a][r] || "" == t[a][r] ? n = e("#missingLabel").val() : (o = t[a][r], n = "fr_CA" === $ ? o.toLocaleString("fr-CA", { minimumFractionDigits: 2 }) + " $" : "$" + o.toLocaleString("en-US", { minimumFractionDigits: 2 })), "retailPrices" == a ? (e("#retailPrc" + r).val(t[a][r]), e("#retailPrices" + r).html(n)) : "msrpPrices" == a ? (e("#msrp" + r).val(t[a][r]), e("#msrpPrices" + r).html(n)) : "installedPrices" == a ? (e("#installedPrc" + r).val(t[a][r]), e("#installedPrices" + r).html(n)) : "installedPricesTop" == a ? (e("#installedPrc" + r).val(t[a][r]), e("#installedPricesTop" + r).html(n)) : "priceTaxAndServices" == a && (e("#priceTaxSrvc" + r).val(t[a][r]), e("#priceTaxAndServices" + r).html(n)) } D.hideSpinner() }, error: function() { D.hideSpinner() } }) } }

        function S(t) { t.preventDefault(); var i = e(t.target).data().productNumber,
                a = e("#qtyVal").val(),
                r = e(t.target).val(); if (r = r.trim(), D.showSpinner(), "Add to Cart" === r) e.ajax({ url: "/cart/compare/addToCart/" + i + "/" + a, type: "GET", dataType: "json", success: function() { window.location.href = "/cart" }, error: function() { console.log("unable to add items to cart.") } });
            else if ("Add to List" === r) window.location.href = "/lists?productid=" + i + "&tab=addtolist&qty=" + a;
            else if ("Create List" === r) window.location.href = "/lists?productid=" + i + "&tab=createlist&qty=" + a;
            else if ("Quote" === r) { var o = e("#front-fitment-id").val(),
                    n = e("#rear-fitment-id").val(),
                    s = e("#trim-option-id").val();
                e.ajax({ url: "/retail-quote/" + i + "/" + a, type: "GET", data: { ff: o, rf: n, trimOptionId: s }, success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), D.hideSpinner() } }) } else D.hideSpinner(); return !1 }
        var T, P, I, x, M, D, $;
        this.init = function() { D = a.getSharedInstance(), $ = r.getSharedInstance().get("languageIsoCode"), n(), d().init(), e("#consumer-rebate").click(u), e(".print-link").click(k), e(".update-qty-link").click(y), e(".delete-action").click(w), e(".show-send-email-div").click(h), e("#compare-product-email-send-btn").click(C), e(".compareProductAction").change(S), e(".compareProductAction").each(function(t) { e(".compareProductAction")[t].selectedIndex = 0 }), y() }
    }
}), define("RegistrationFormPageController", ["jquery", "CheckUserIdAvailabilityBehavior"], function(e, t) { return function() {
        function i() { return n || (n = new t, n.set$userId(e("#userId"))), n }

        function a() { return s || (s = e(".languageList")), s }

        function r() { return l || (l = e(".language-change-dropdown")), l }

        function o(e) { a().is(":hidden") ? a().show() : a().hide(), e.stopPropagation() } var n, s, l;
        this.init = function() { i().init(), r().click(o) } } }), define("AccountUserCreateStepOnePageController", ["jquery", "CheckUserIdAvailabilityBehavior"], function(e, t) { return function() {
        function i(t) { a(e(t.target)) }

        function a(t) { var i = e(".email-okay"),
                a = t.val();
            r(a) ? i.addClass("validated") : i.removeClass("validated") }

        function r(e) { var t = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}$/i; return t.test(e) } var o;
        this.init = function() { e(document);
            o = new t, o.set$userId(e("#userId")), o.init(), e("#email-address").keyup(i) } } }), define("VehicleGuidePageController", ["jquery", "CompareProductsBehavior", "ListModalMediator", "RefineSearchLeftNavigationView", "LoadingSpinnerView", "GlobalContentMessagesModel"], function(t, i, a, r, o, n) { return function() {
        function s() { return ji || (ji = n.getSharedInstance()), ji }

        function l() { return Mi || (Mi = t(".pagination-per-page-dropdown")), Mi }

        function d() { return Di || (Di = t(".marketing-filter-checkbox")), Di }

        function c() { return $i || ($i = t(".marketing-programs")), $i }

        function u() { return zt || (zt = t(document)), zt }

        function h() { return Ut || (Ut = t("#top-tabs")), Ut }

        function p() { return Qt || (Qt = new a({ $eventDelegate: u(), getProductsAndQtyFunction: m, $addToListModal: t("#add-to-list-id"), $createNewListModal: t("#create-list-modal") })), Qt }

        function m(e) { return { product: e.data("product-number"), quantity: e.closest(".product-row").find(".qty").val() } }

        function g() { return Gt || (Gt = new i, Gt.set$eventDelegate(u())), Gt }

        function f() { return Kt || (Kt = t(".global-search-print-link-cat")), Kt }

        function v() { return Ht || (Ht = t(".selectSortOption")), Ht }

        function C() { return Yt || (Yt = t(".product-action-id")), Yt }

        function b() { return Zt || (Zt = t("#front-tire-package")), Zt }

        function w() { return Jt || (Jt = t("#front-wheel-package")), Jt }

        function k() { return Xt || (Xt = t("#front-tpms-package")), Xt }

        function y() { return ei || (ei = t("#rear-tire-package")), ei }

        function S() { return ti || (ti = t("#rear-wheel-package")), ti }

        function T() { return ii || (ii = t("#rear-tpms-package")), ii }

        function P() { return ai || (ai = t("#front-tire-select-link")), ai }

        function I() { return ri || (ri = t("#front-wheel-select-link")), ri }

        function x() { return oi || (oi = t("#front-tpms-select-link")), oi }

        function M() { return li || (li = t("#rear-tpms-select-link")), li }

        function D() { return si || (si = t("#rear-wheel-select-link")), si }

        function $() { return ni || (ni = t("#rear-tire-select-link")), ni }

        function L() { return di || (di = t(".cross-image")), di }

        function F() { return ci || (ci = t(".delete-package")), ci }

        function V() { return ui || (ui = t(".clear-all")), ui }

        function A() { return Ii || (Ii = t(".add-package-to-cart")), Ii }

        function R() { return xi || (xi = t(".add-package-to-quote")), xi }

        function B() { return hi || (hi = t("#package-hide")), hi }

        function E() { return pi || (pi = t("#package-div")), pi }

        function O() { return Si || (Si = t("#rear-section")), Si }

        function N() { return Ti || (Ti = t("#front-action-div")), Ti }

        function q() { return yi || (yi = t("#package-quantity")), yi }

        function j() { return Pi || (Pi = t("#package-text")), Pi }

        function _() { return gi || (gi = t("#tire-select")), gi }

        function W() { return mi || (mi = t("#wheel-select")), mi }

        function z() { return fi || (fi = t("#tpms-select")), fi }

        function U() { return Ci || (Ci = t("#rear-tire-select")), Ci }

        function Q() { return vi || (vi = t("#rear-wheel-select")), vi }

        function G() { return bi || (bi = t("#rear-tpms-select")), bi }

        function H() { return wi || (wi = t(".grid-list-view-icon")), wi }

        function K() { return ki || (ki = t("#selectDefaultView")), ki }

        function Y() { return Fi || (Fi = t("#frontGoodBetterBestLink")), Fi }

        function Z() { return Vi || (Vi = t("#rearGoodBetterBestLink")), Vi }

        function J() { return Ai || (Ai = t(".quote-link")), Ai }

        function X() { return Ri || (Ri = t(".inputQuantity")), Ri }

        function et() { return Bi || (Bi = t("#frontDropdown")), Bi }

        function tt() { return Ei || (Ei = t("#frontCheckBox")), Ei }

        function it() { return Oi || (Oi = t("#rearDropdown")), Oi }

        function at() { return Ni || (Ni = t("#rearCheckBox")), Ni }

        function rt() { return qi || (qi = t(".dollar-image")), qi }

        function ot(e) { var i = t(e.target);
            i.is(".installation-data-link.more") ? nt(e) : i.is(".installation-data-link.less") && nt(e) }

        function nt(e) { e.preventDefault(); var i = t(".installation-data");
            i.hasClass("collapsed") ? st(i) : lt(i) }

        function st(e) { t(".installation-data-link.more").hide(), e.removeClass("collapsed"), e.slideDown("fast") }

        function lt(e) { e.addClass("collapsed"), e.slideUp("fast"), t(".installation-data-link.more").show() }

        function dt() { var e = "fs",
                i = "rs",
                a = t("a#ui-id-1-link"),
                r = a.attr("href"),
                r = mt(e, t("input#front-oesize").val(), r);
            r = mt(i, t("input#rear-oesize").val(), r), a.attr("href", r) }

        function ct(e) { var i = t(e.target).val(),
                a = "resultsPerPage",
                r = window.location.pathname + window.location.search;
            r = pt(a, r), window.location.href = r + "&" + a + "=" + i }

        function ut(e) { var i = t(e.target).data().selectedTab,
                a = "all-products-" + i,
                r = "all-programs-" + i,
                o = e.target.id; - 1 !== o.indexOf("all-programs") ? (c().each(function() { t(this).prop("checked", !0) }), t(a).prop("checked", !1), t(a).val("")) : -1 !== o.indexOf("all-products") ? (c().each(function() { var e = t(this).prop("id").split("-"),
                    i = e[0];
                1 == t("#" + i + "-check").prop("checked") && t("#" + i + "-value").val(i), t(this).prop("checked", !1), t(this).val("") }), t(r).prop("checked", !1), t(r).val("")) : (t(r).prop("checked", !1), t(a).prop("checked", !1), t(r).val(""), t(a).val("")); var n = e.target.id.split("-"),
                s = n[0];
            t("#" + s + "-value").val(0 == t("#" + s + "-check").prop("checked") ? s : ""), Li.showSpinner(), t("#marketing-program-refinement-form-" + i).submit() }

        function ht() { var e = JSON.parse(sessionStorage.getItem("selectedCheckbox")); if (e && e.length > 0)
                for (var i = 0; i < e.length; i++) d().each(function() { t(this).attr("id") == e[i] && t(this).prop("checked", !0) }) }

        function pt(e, t) { var i, a = t.split("?")[0],
                r = [],
                o = -1 !== t.indexOf("?") ? t.split("?")[1] : ""; if ("" !== o) { r = o.split("&"); for (var n = r.length - 1; n >= 0; n -= 1) i = r[n].split("=")[0], i === e && r.splice(n, 1);
                a = a + "?" + r.join("&") } return a }

        function mt(e, t, i) { var a, r = i.split("?")[0],
                o = [],
                n = -1 !== i.indexOf("?") ? i.split("?")[1] : ""; if ("" !== n) { o = n.split("&"); for (var s = o.length - 1; s >= 0; s -= 1) a = o[s].split("="), a[0] === e && (a[1] = t, a = a.join("="), o[s] = a);
                r = r + "?" + o.join("&") } return r }

        function gt() { t("#showVehiclePackage").val() ? ("true" === B().val() ? E().hide() : (N().show(), h().find(t("#search-tabs")).addClass("vehicle-search-tabs"), j().html(q().val()), E().show(), U().val() || Q().val() || G().val() ? (O().show(), N().hide()) : (O().hide(), N().show())), _().val() ? (b().removeClass("disable-div"), P().hide(), t("#enableFrontTireImage").show(), t("#disableFrontTireImage").hide(), t("#enableFrontTireCloseImage").show(), t("#disableFrontTireCloseImage").hide()) : (b().addClass("disable-div"), P().show(), t("#enableFrontTireCloseImage").hide(), t("#disableFrontTireCloseImage").show(), t("#enableFrontTireImage").hide(), t("#disableFrontTireImage").show()), W().val() ? (w().removeClass("disable-div"), I().hide(), t("#disableFrontWheelImage").hide(), t("#enableFrontWheelImage").show(), t("#enableFrontWheelCloseImage").show(), t("#disableFrontWheelCloseImage").hide()) : (w().addClass("disable-div"), I().show(), t("#disableFrontWheelImage").show(), t("#enableFrontWheelImage").hide(), t("#enableFrontWheelCloseImage").hide(), t("#disableFrontWheelCloseImage").show()), z().val() ? (k().removeClass("disable-div"), x().hide(), t("#disableFrontTpmsImage").hide(), t("#enableFrontTpmsImage").show(), t("#disableFrontTpmsCloseImage").hide(), t("#enableFrontTpmsCloseImage").show()) : (k().addClass("disable-div"), x().show(), t("#disableFrontTpmsImage").show(), t("#enableFrontTpmsImage").hide(), t("#disableFrontTpmsCloseImage").show(), t("#enableFrontTpmsCloseImage").hide()), U().val() ? (y().removeClass("disable-div"), $().hide(), t("#enableRearTireCloseImage").show(), t("#disableRearTireCloseImage").hide(), t("#enableRearTireImage").show(), t("#disableRearTireImage").hide()) : (y().addClass("disable-div"), $().show(), t("#enableRearTireCloseImage").hide(), t("#disableRearTireCloseImage").show(), t("#enableRearTireImage").hide(), t("#disableRearTireImage").show()), Q().val() ? (S().removeClass("disable-div"), D().hide(), t("#disableRearWheelImage").hide(), t("#enableRearWheelImage").show(), t("#disableRearWheelCloseImage").hide(), t("#enableRearWheelCloseImage").show()) : (S().addClass("disable-div"), D().show(), t("#disableRearWheelImage").show(), t("#enableRearWheelImage").hide(), t("#disableRearWheelCloseImage").show(), t("#enableRearWheelCloseImage").hide()), G().val() ? (T().removeClass("disable-div"), M().hide(), t("#disableRearTpmsImage").hide(), t("#enableRearTpmsImage").show(), t("#disableRearTpmsCloseImage").hide(), t("#enableRearTpmsCloseImage").show()) : (T().addClass("disable-div"), M().show(), t("#disableRearTpmsImage").show(), t("#enableRearTpmsImage").hide(), t("#disableRearTpmsCloseImage").show(), t("#enableRearTpmsCloseImage").hide()), _().val() && W().val() || U().val() && Q().val() ? (A().prop("disabled", !1), A().removeClass("button-disabled"), R().prop("disabled", !1), R().removeClass("button-disabled")) : (A().prop("disabled", !0), A().addClass("button-disabled"), R().prop("disabled", !0), R().addClass("button-disabled")), _().val() || U().val() || W().val() || Q().val() || z().val() || G().val() || (t("#package-div").hide(), h().find(t("#search-tabs")).removeClass("vehicle-search-tabs"), xt(!1))) : t("#package-div").hide() }

        function ft() { var e = "/vehicleguide/print" + document.location.search;
            window.open(e, "_blank") }

        function vt(e) { loading(); var i = t(e.target).val(),
                a = K().val();
            t.ajax({ url: "/ajax/sort-order-option/" + i, type: "get", data: { selectedTab: a } }).done(function() { location.reload() }) }

        function Ct(e) { var i = t(e.target).data().productNumber,
                a = t(e.target).data().inventory,
                r = t(e.target).data().index,
                o = t(e.target).data().retailPrice,
                n = "" !== o ? !0 : !1,
                s = K().val(),
                l = t(".qty-" + a + "-" + r + "-" + s).val();
            l = l == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : l; var d = t(".qty-" + a + "-" + r + "-" + s).val();
            d = d == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : d; var c = t(".qty-" + a + "-" + r + "-" + s).val();
            c = c == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : c; var u, h = t(e.target).data().tab,
                p = t(e.target).data().frontrear,
                m = !1,
                g = t(e.target).data().staggered,
                f = bt(i);
            u = g ? "2" : "4", "" === l && (l = 1), "" === c && (c = 0); var v = t(e.target).prop("selectedIndex");
            t(".product-action-id").prop("selectedIndex", 0), t(".product-action-dropdown-" + f + "-" + r).prop("selectedIndex", v); var C = e.target.value; if (Li.showSpinner(), "Add to List" === C) window.location.href = "/lists?productid=" + i + "&tab=addtolist&qty=" + l;
            else if ("Create List" === C) window.location.href = "/lists?productid=" + i + "&tab=createlist&qty=" + l;
            else if ("Quote" === C) { var b = t("#front-fitment-id").val(),
                    w = t("#rear-fitment-id").val(),
                    k = t("#trim-option-id").val();
                t.ajax({ url: "/retail-quote/" + i + "/" + c, type: "GET", data: { ff: b, rf: w, trimOptionId: k }, success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), Li.hideSpinner() } }) } else "Create Package" === C ? yt(h, i, p, u, m, n, !0) : "Add to Package" === C ? yt(h, i, p, u, m, n, !1) : "Freight Cost" === C ? WebStore.Product.showFreightModal(i, d) : Li.hideSpinner() }

        function bt(e) { e = e.toString(); var t = /(:|\.|\]|\[)/g; return e.replace(t, "\\$1") }

        function wt(e) { loading(), t.ajax({ data: { view: e }, url: "/search/setGridOrListView", type: "get" }).done(function() { location.reload() }) }

        function kt(e) { { var i = t(e.target).data().selectedView;
                t(e.target).data().selectedTab } K().val(i), Gt.uncheckAllCheckboxes(), t(".grid-view").attr("src", "/_ui/desktop/common/images/grid_view.png"), t(".list-view").attr("src", "/_ui/desktop/common/images/list_view.png"), e.target.src = "listView" === i ? "/_ui/desktop/common/images/list_view_active.png" : "/_ui/desktop/common/images/grid_view_active.png", wt(i) }

        function yt(e, i, a, r, o, n, s) { h().find(t("#search-tabs")).addClass("vehicle-search-tabs"), t.ajax({ url: "/vehicleguide/addToPackage/" + e + "/" + i + "/" + a + "/" + r + "?createPackage=" + s + "&isQuoteAllowed=" + n, type: "get" }).done(function(e) { var i = !0,
                    a = !0,
                    r = !0,
                    o = !0,
                    n = !0,
                    s = !0,
                    l = e["product-tires"],
                    d = e["product-wheels"],
                    c = e["product-tpms"],
                    u = e["rearProduct-tires"],
                    h = e["rearProduct-wheels"],
                    p = e["rearProduct-tpms"],
                    m = e.packageQuantity;
                j().html(m), l ? (b().removeClass("disable-div"), b().find(t("#front-tire-size")).html(l.size), b().find(t("#front-tire-style")).html(l.style.brand.code + " " + l.style.name), b().find(t("#front-tire-number")).html(l.supplierNumber), l.images && b().find(t("#front-tire-image")).attr("src", l.images[0].thumbnail.url), i = l.quoteAllowed, t("#disableFrontTireImage").hide(), t("#enableFrontTireImage").show(), t("#enableFrontTireCloseImage").show(), t("#disableFrontTireCloseImage").hide(), P().hide(), t("#tires-product-number-front").val(l.productNumber)) : (t("#disableFrontTireImage").show(), t("#enableFrontTireImage").hide(), t("#enableFrontTireCloseImage").hide(), t("#disableFrontTireCloseImage").show()), d ? (w().removeClass("disable-div"), w().find(t("#front-wheel-size")).html(d.size), w().find(t("#front-wheel-style")).html(d.style.brand.code + " " + d.style.name), w().find(t("#front-wheel-number")).html(d.supplierNumber), d.images && w().find(t("#front-wheel-image")).attr("src", d.images[0].thumbnail.url), a = d.quoteAllowed, t("#disableFrontWheelImage").hide(), t("#enableFrontWheelImage").show(), t("#enableFrontWheelCloseImage").show(), t("#disableFrontWheelCloseImage").hide(), I().hide(), t("#wheels-product-number-front").val(d.productNumber)) : (t("#disableFrontWheelImage").show(), t("#enableFrontWheelImage").hide(), t("#enableFrontWheelCloseImage").hide(), t("#disableFrontWheelCloseImage").show()), u ? (y().removeClass("disable-div"), y().find(t("#rear-tire-size")).html(u.size), y().find(t("#rear-tire-style")).html(u.style.brand.code + " " + u.style.name), y().find(t("#rear-tire-number")).html(u.supplierNumber), u.images && y().find(t("#rear-tire-image")).attr("src", u.images[0].thumbnail.url), o = u.quoteAllowed, t("#disableRearTireImage").hide(), t("#enableRearTireImage").show(), t("#enableRearTireCloseImage").show(), t("#disableRearTireCloseImage").hide(), $().hide(), t("#tires-product-number-rear").val(u.productNumber)) : (t("#disableRearTireImage").show(), t("#enableRearTireImage").hide(), t("#enableRearTireCloseImage").hide(), t("#disableRearTireCloseImage").show()), h ? (S().removeClass("disable-div"), S().find(t("#rear-wheel-size")).html(h.size), S().find(t("#rear-wheel-style")).html(h.style.brand.code + " " + h.style.name), S().find(t("#rear-wheel-number")).html(h.supplierNumber), h.images && S().find(t("#rear-wheel-image")).attr("src", h.images[0].thumbnail.url), n = h.quoteAllowed, t("#disableRearWheelImage").hide(), t("#enableRearWheelImage").show(), t("#disableRearWheelCloseImage").hide(), t("#enableRearWheelCloseImage").show(), D().hide(), t("#wheels-product-number-rear").val(h.productNumber)) : (t("#disableRearWheelImage").show(), t("#enableRearWheelImage").hide(), t("#enableRearWheelCloseImage").hide(), t("#disableRearWheelCloseImage").show()), (l && d || u && h) && (A().prop("disabled", !1), A().removeClass("button-disabled"), R().prop("disabled", !1), R().removeClass("button-disabled")), c ? (k().removeClass("disable-div"), k().find(t("#front-tpms-size")).html(c.size), k().find(t("#front-tpms-style")).html(c.style.brand.code + " " + c.style.name), k().find(t("#front-tpms-number")).html(c.supplierNumber), c.images && k().find(t("#front-tpms-image")).attr("src", c.images[0].thumbnail.url), r = c.quoteAllowed, t("#disableFrontTpmsImage").hide(), t("#enableFrontTpmsImage").show(), t("#disableFrontTpmsCloseImage").hide(), t("#enableFrontTpmsCloseImage").show(), x().hide(), t("#tpms-product-number-front").val(c.productNumber)) : (t("#disableFrontTpmsImage").show(), t("#enableFrontTpmsImage").hide(), t("#enableFrontTpmsCloseImage").hide(), t("#disableFrontTpmsCloseImage").show()), p ? (T().removeClass("disable-div"), T().find(t("#rear-tpms-size")).html(p.size), T().find(t("#rear-tpms-style")).html(p.style.brand.code + " " + p.style.name), T().find(t("#rear-tpms-number")).html(p.supplierNumber), p.images && T().find(t("#rear-tpms-image")).attr("src", p.images[0].thumbnail.url), s = p.quoteAllowed, t("#disableRearTpmsImage").hide(), t("#enableRearTpmsImage").show(), t("#disableRearTpmsCloseImage").hide(), t("#enableRearTpmsCloseImage").show(), M().hide(), t("#tpms-product-number-rear").val(p.productNumber)) : (t("#disableRearTpmsImage").show(), t("#enableRearTpmsImage").hide(), t("#enableRearTpmsCloseImage").hide(), t("#disableRearTpmsCloseImage").show()), t("#package-div").show(), i && a && r && o && n && s ? t(".add-package-to-quote").removeClass("hideVisibility") : t(".add-package-to-quote").addClass("hideVisibility"), u || h || p ? (t("#rear-section").show(), N().hide()) : (t("#rear-section").hide(), N().show()), t("#createPackage").hide(), t("#addPackage").show(), xt(!0), Li.hideSpinner() }) }

        function St(e) { var i, a = e.target.id,
                r = t(e.target).data().rear;
            r || (r = "front"), i = t("#" + a + "-product-number-" + r).val(), a && t.ajax({ url: "/vehicleguide/deleteFromPackage/" + a + "/" + r, type: "get" }).done(function(e) { t(".product-action-dropdown-" + i).prop("selectedIndex", 0); var a = !0,
                    r = !0,
                    o = !0,
                    n = !0,
                    s = !0,
                    l = !0,
                    d = e["product-tires"],
                    c = e["product-wheels"],
                    u = e["product-tpms"],
                    p = e["rearProduct-tires"],
                    m = e["rearProduct-wheels"],
                    g = e["rearProduct-tpms"];
                d ? (t("#disableFrontTireImage").hide(), t("#enableFrontTireImage").show(), t("#enableFrontTireCloseImage").show(), t("#disableFrontTireCloseImage").hide(), a = d.quoteAllowed) : (b().addClass("disable-div"), b().find(t("#front-tire-size")).html(""), b().find(t("#front-tire-style")).html(""), b().find(t("#front-tire-number")).html(""), b().find(t("#front-tire-image")).attr("src", ""), P().show(), t("#disableFrontTireImage").show(), t("#enableFrontTireImage").hide(), t("#enableFrontTireCloseImage").hide(), t("#disableFrontTireCloseImage").show()), c ? (t("#disableFrontWheelImage").hide(), t("#enableFrontWheelImage").show(), t("#enableFrontWheelCloseImage").show(), t("#disableFrontWheelCloseImage").hide(), r = c.quoteAllowed) : (w().addClass("disable-div"), w().find(t("#front-wheel-size")).html(""), w().find(t("#front-wheel-style")).html(""), w().find(t("#front-wheel-number")).html(""), w().find(t("#front-wheel-image")).attr("src", ""), I().show(), t("#disableFrontWheelImage").show(), t("#enableFrontWheelImage").hide(), t("#enableFrontWheelCloseImage").hide(), t("#disableFrontWheelCloseImage").show()), u ? (t("#disableFrontTpmsImage").hide(), t("#enableFrontTpmsImage").show(), t("#disableFrontTpmsCloseImage").hide(), t("#enableFrontTpmsCloseImage").show(), o = u.quoteAllowed) : (k().addClass("disable-div"), k().find(t("#front-tpms-size")).html(""), k().find(t("#front-tpms-style")).html(""), k().find(t("#front-tpms-number")).html(""), k().find(t("#front-tpms-image")).attr("src", ""), x().show(), t("#disableFrontTpmsImage").show(), t("#enableFrontTpmsImage").hide(), t("#disableFrontTpmsCloseImage").show(), t("#enableFrontTpmsCloseImage").hide()), p ? (t("#disableRearTireImage").hide(), t("#enableRearTireImage").show(), t("#enableRearTireCloseImage").show(), t("#disableRearTireCloseImage").hide(), n = p.quoteAllowed) : (y().addClass("disable-div"), y().find(t("#rear-tire-size")).html(""), y().find(t("#rear-tire-style")).html(""), y().find(t("#rear-tire-number")).html(""), y().find(t("#rear-tire-image")).attr("src", ""), $().show(), t("#disableRearTireImage").show(), t("#enableRearTireImage").hide(), t("#enableRearTireCloseImage").hide(), t("#disableRearTireCloseImage").show()), m ? (t("#disableRearWheelImage").hide(), t("#enableRearWheelImage").show(), t("#disableRearWheelCloseImage").hide(), t("#enableRearWheelCloseImage").show(), s = m.quoteAllowed) : (S().addClass("disable-div"), S().find(t("#rear-wheel-size")).html(""), S().find(t("#rear-wheel-style")).html(""), S().find(t("#rear-wheel-number")).html(""), S().find(t("#rear-wheel-image")).attr("src", ""), D().show(), t("#disableRearWheelImage").show(), t("#enableRearWheelImage").hide(), t("#disableRearWheelCloseImage").show(), t("#enableRearWheelCloseImage").hide()), g ? (t("#disableRearTpmsImage").hide(), t("#enableRearTpmsImage").show(), t("#disableRearTpmsCloseImage").hide(), t("#enableRearTpmsCloseImage").show(), l = g.quoteAllowed) : (T().addClass("disable-div"), T().find(t("#rear-tpms-size")).html(""), T().find(t("#rear-tpms-style")).html(""), T().find(t("#rear-tpms-number")).html(""), T().find(t("#rear-tpms-image")).attr("src", ""), M().show(), t("#disableRearTpmsImage").show(), t("#enableRearTpmsImage").hide(), t("#disableRearTpmsCloseImage").show(), t("#enableRearTpmsCloseImage").hide()), d && c || p && m ? (A().prop("disabled", !1), A().removeClass("button-disabled"), R().prop("disabled", !1), R().removeClass("button-disabled")) : (A().prop("disabled", !0), A().addClass("button-disabled"), R().prop("disabled", !0), R().addClass("button-disabled")), a && r && o && n && s && l ? t(".add-package-to-quote").removeClass("hideVisibility") : t(".add-package-to-quote").addClass("hideVisibility"), d || c || p || m || u || g || (t("#package-div").hide(), h().find(t("#search-tabs")).removeClass("vehicle-search-tabs"), xt(!1)) }) }

        function Tt() { t.ajax({ url: "/vehicleguide/deletePackage", type: "get" }).done(function() { It(), t("#package-div").hide(), h().find(t("#search-tabs")).removeClass("vehicle-search-tabs") }) }

        function Pt() { A().prop("disabled", !0), A().addClass("button-disabled"), R().prop("disabled", !0), R().addClass("button-disabled"), t.ajax({ url: "/vehicleguide/clearAllFromPackage", type: "get" }).done(function() { It(), t("#disableFrontTireImage").show(), t("#enableFrontTireImage").hide(), t("#enableFrontTireCloseImage").hide(), t("#disableFrontTireCloseImage").show(), t("#disableFrontWheelImage").show(), t("#enableFrontWheelImage").hide(), t("#enableFrontWheelCloseImage").hide(), t("#disableFrontWheelCloseImage").show(), t("#disableFrontTpmsImage").show(), t("#enableFrontTpmsImage").hide(), t("#disableFrontTpmsCloseImage").show(), t("#enableFrontTpmsCloseImage").hide(), t("#disableRearTireImage").show(), t("#enableRearTireImage").hide(), t("#enableRearTireCloseImage").hide(), t("#disableRearTireCloseImage").show(), t("#disableRearWheelImage").show(), t("#enableRearWheelImage").hide(), t("#disableRearWheelCloseImage").show(), t("#enableRearWheelCloseImage").hide(), t("#disableRearTpmsImage").show(), t("#enableRearTpmsImage").hide(), t("#disableRearTpmsCloseImage").show(), t("#enableRearTpmsCloseImage").hide() }) }

        function It() { t(".product-action-id").prop("selectedIndex", 0), xt(!1), b().addClass("disable-div"), b().find(t("#front-tire-size")).html(""), b().find(t("#front-tire-style")).html(""), b().find(t("#front-tire-number")).html(""), b().find(t("#front-tire-image")).attr("src", ""), P().show(), w().addClass("disable-div"), w().find(t("#front-wheel-size")).html(""), w().find(t("#front-wheel-style")).html(""), w().find(t("#front-wheel-number")).html(""), w().find(t("#front-wheel-image")).attr("src", ""), I().show(), k().addClass("disable-div"), k().find(t("#front-tpms-size")).html(""), k().find(t("#front-tpms-style")).html(""), k().find(t("#front-tpms-number")).html(""), k().find(t("#front-tpms-image")).attr("src", ""), x().show(), y().addClass("disable-div"), y().find(t("#rear-tire-size")).html(""), y().find(t("#rear-tire-style")).html(""), y().find(t("#rear-tire-number")).html(""), y().find(t("#rear-tire-image")).attr("src", ""), $().show(), S().addClass("disable-div"), S().find(t("#rear-wheel-size")).html(""), S().find(t("#rear-wheel-style")).html(""), S().find(t("#rear-wheel-number")).html(""), S().find(t("#rear-wheel-image")).attr("src", ""), D().show(), T().addClass("disable-div"), T().find(t("#rear-tpms-size")).html(""), T().find(t("#rear-tpms-style")).html(""), T().find(t("#rear-tpms-number")).html(""), T().find(t("#rear-tpms-image")).attr("src", ""), M().show() }

        function xt(e) { C().find("option[value='Create Package'], option[value='Add to Package']").each(function() { t(this).text(e ? s().get("productActionAddToPackage") : s().get("productActionCreatePackage")) }) }

        function Mt(e) { e.preventDefault(), Li.showSpinner(), t("#gbbFrontCompareProductsForm").attr("action", "/compare/getCompareProducts"), t("#gbbFrontCompareProductsForm").submit() }

        function Dt(e) { e.preventDefault(), Li.showSpinner(), t("#gbbRearCompareProductsForm").attr("action", "/compare/getCompareProducts"), t("#gbbRearCompareProductsForm").submit() }

        function $t(e) { var i = t(e.target),
                a = i.data().productNumber,
                r = i.data().inventory,
                o = i.data().index,
                n = t("#selectDefaultView").val(),
                s = t(".qty-" + r + "-" + o + "-" + n).val();
            s = s == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : s, "" === s && (s = 0), Li.showSpinner(); var l = t("#front-fitment-id").val(),
                d = t("#rear-fitment-id").val(),
                c = t("#trim-option-id").val();
            t.ajax({ url: "/retail-quote/" + a + "/" + s, type: "GET", data: { ff: l, rf: d, trimOptionId: c }, success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), Li.hideSpinner() } }) }

        function Lt(e) { var i = e.target.id,
                a = t(e.target).val(),
                r = i.substring(0, i.indexOf("-qty")),
                o = t(e.target).closest("div").find("#add-to-cart-button-" + r);
            a > 0 && o.hasClass("button-disabled") ? o.removeClass("button-disabled") : 0 != a && a && 0 !== a.length || o.hasClass("button-disabled") || o.addClass("button-disabled") }

        function Ft() { var e = "fs",
                t = mt(e, "plussize", document.location.search);
            t = "/vehicleguide/front-plus-sizes" + t; var i = et();
            1 == i.find("option").length && Ot(t, i) }

        function Vt() { var e = t("#previousFrontValue").val(),
                i = t(this).find("option:selected").val(),
                a = t(this).find("option:selected").text(),
                r = !(e == i || e == a),
                o = et();
            r && At(o) }

        function At(e) { var i = "/vehicleguide",
                a = WebStore.VehicleGuide.Config.CSS.Ids.rearCheckBox,
                r = e.find("option:selected").data("dependent-query"),
                o = e.find("option:selected").data("independent-query"),
                n = i + o;
            loading(), t(a).is(":checked") && (n = i + r), window.location.href = n }

        function Rt() { var e = "rs",
                t = mt(e, "plussize", document.location.search);
            t = "/vehicleguide/rear-plus-sizes" + t; var i = it();
            1 == i.find("option").length && Ot(t, i) }

        function Bt() { var e = t("#previousRearValue").val(),
                i = t(this).find("option:selected").val(),
                a = t(this).find("option:selected").text(),
                r = !(e == i || e == a),
                o = it();
            r && Et(o) }

        function Et(e) { var i = "/vehicleguide",
                a = WebStore.VehicleGuide.Config.CSS.Ids.frontCheckBox,
                r = e.find("option:selected").data("dependent-query"),
                o = e.find("option:selected").data("independent-query"),
                n = i + o;
            loading(), t(a).is(":checked") && (n = i + r), window.location.href = n }

        function Ot(e, i) { i.attr("disabled", "disabled"), i.addClass("loading-options"), t.get(e, function(e) { var a = t("<select />");
                t(e).each(function(e, r) { var o = t("<option />", { val: r.id, text: r.label, "data-independent-query": r.independentQueryString, "data-dependent-query": r.dependentQueryString });
                    i.find("option").remove(), a.append(o) }), i.append(a.children()), i.prop("selectedIndex", 0), i.removeClass("loading-options"), i.removeAttr("disabled") }) }

        function Nt() { if (this.checked) { var i = t("#frontDropdown");
                At(i) } else { if (!t("#rearCheckBox").is(":checked")) return t(e).prop("checked", !0), void require(["VehicleGuideModel"], function(e) { alert(e.getSharedInstance().get("toggleFrontDropdownErrorMessage")) }); var i = t("#rearDropdown");
                Et(i) } }

        function qt() { if (this.checked) { var e = t("#rearDropdown");
                Et(e) } else { if (!t("#frontCheckBox").is(":checked")) return t(this).prop("checked", !0), void require(["VehicleGuideModel"], function(e) { alert(e.getSharedInstance().get("toggleFrontDropdownErrorMessage")) }); var e = t("#frontDropdown");
                At(e) } }

        function jt(e) { e.stopPropagation(), e.preventDefault(); var i = e.target.id.split("-")[3],
                a = e.target.id.split("-")[4];
            Wt(i, a), t("dollar-icon-" + bt(i) + a).css("display", "block") }

        function _t(e) { e.stopPropagation(), t(e.target).closest(".response").css("display", "none") }

        function Wt(e, i) { t.ajax({ url: "/search/displayMarketingDetails", type: "get", data: { productCode: e }, pCode: e, iIndex: i }).done(function(e) { t("#dollar-icon-" + bt(this.pCode) + "-" + this.iIndex).html(e) }) } var zt, Ut, Qt, Gt, Ht, Kt, Yt, Zt, Jt, Xt, ei, ti, ii, ai, ri, oi, ni, si, li, di, ci, ui, hi, pi, mi, gi, fi, vi, Ci, bi, wi, ki, yi, Si, Ti, Pi, Ii, xi, Mi, Di, $i, Li, Fi, Vi, Ai, Ri, Bi, Ei, Oi, Ni, qi, ji, _i = new r;
        this.init = function() { Li = o.getSharedInstance(), _i.render(), h().tabs(), WebStore.VehicleGuide.init(), WebStore.VehicleGuide.loadSearchViewDefault(), g().init(), p(), f().click(ft), v().change(vt), u().click(ot), C().change(Ct), L().click(St), F().click(Tt), V().click(Pt), gt(), H().click(kt), l().change(ct), d().change(ut), ht(), dt(), Y().click(Mt), Z().click(Dt), J().click($t), X().on("input", Lt), et().hover(Ft), it().hover(Rt), et().click(Vt), it().click(Bt), tt().click(Nt), at().click(qt), rt().click(jt), u().on("click", ".close-btn-left", _t) } } }), define("FeedbackFormPageController", ["jquery", "TextboxBehavior"], function(e, t) {
    function i() { this.init = function() { var i = new t;
            i.createEmailTextbox(e("#email")); var a = new t;
            a.createPhoneTextbox(e("#phone")) } } return i }), define("CompareProductsBehavior", ["jquery", "LoadingSpinnerView"], function(e, t) {
    return function() {
        function i(t) { var i = t.target; if (e(i).is(".compare-check")) { var o = e(i).is(":checked");
                o ? a(i) : r(i) } else e(i).is("#compare-product-search") && (d() || require(["CartModel"], function(e) { alert(e.getSharedInstance().get("minimumProductMessage")) })) }

        function a(t) { s() ? (o(t), c()) : (e(t).attr("checked", !1), require(["CartModel"], function(e) { alert(e.getSharedInstance().get("compareProductsMessage")) })) }

        function r(e) { n(e), d() || u() }

        function o(e) { f.push(e) }

        function n(t) { var i = h(t, f);
            e(".compare-product-search").off(), f.splice(i, 1) }

        function s() { return Boolean(f.length < 3) }

        function l(t) { t.preventDefault(), m.showSpinner(), p(), e("#compareProductsForm").submit() }

        function d() { return Boolean(f.length > 1) }

        function c() {
            d() && e.each(f, function() {
                e(".compare-product-search").off("click", l), e(".compare-product-search").on("click", l)
            })
        }

        function u() { e.each(f, function() { e(".compare-product-search").off(), require(["CartModel"], function(e) { alert(e.getSharedInstance().get("minimumProductMessage")) }) }) }

        function h(e, t) { for (var i = 0; i < t.length; i++)
                if (t[i] === e) return i; return -1 }

        function p() { e("#compareProductsForm").find(e(".compare-values")).remove(), e.each(f, function(t) { var i = e(this),
                    a = '<input type="hidden" class="compare-values" name="productCodes[' + t + ']" value="' + i.val() + '" />';
                e("#compareProductsForm").append(a), e(this).attr("checked", !1) }) }
        var m, g, f = [];
        this.set$eventDelegate = function(e) { g = e }, this.init = function() { m = t.getSharedInstance(), g.click(i) }, this.uncheckAllCheckboxes = function() { e(".compare-check").each(function() { e(this).attr("checked", !1) }), e(".compare-product-search").off(), f = [] }
    }
}), define("ForgotPasswordModalBehavior", ["jquery", "GlobalContentMessagesModel"], function(e, t) {
    function i() {
        function i() { return L || (L = t.getSharedInstance()), L }

        function a() { return y || (y = k.find("#forgottenPwdForm")), y }

        function r() { return S || (S = a().find("#forgottenPwd-userid")), S }

        function o() { return T || (T = a().find("#forgottenPwd-email")), T }

        function n() { return P || (P = a().find(".button.email-send")), P }

        function s() { return I || (I = a().find(".button.cancel")), I }

        function l() { return x || (x = a().find("#forgottenPwd-userid-error")), x }

        function d() { return M || (M = a().find(".email-sent")), M }

        function c() { return D || (D = a().find("#submitLabel")), D }

        function u() { return $ || ($ = a().find("#sendingLabel")), $ }

        function h() { k.find("#forgottenPwd-userid-error").text(""); var e = "/login";
            window.location.href = e }

        function p(e) { null != e && 13 == e.keyCode && n().click() }

        function m() { if ("emailSent" === e("#emailSendStatus").val()) { var t = "/login";
                window.location.href = t } else { k.find("#forgottenPwd-userid-error").text(""), C(); var i = { userid: r().val(), email: o().val() };
                e.ajax({ url: "/login/pw/request/ajax", type: "post", data: i }).done(function(e) { e.status ? g() : f(e.message) }) } }

        function g() { var t = 500;
            e("#emailSendStatus").val("emailSent"), n().delay(t).queue(function() { d().show(), s().hide(), b(), e(this).dequeue() }) }

        function f(e) { l().html(e), v() }

        function v() { n().text(c().val()), n().click(m) }

        function C() { n().text(u().val()), n().append("<img src='/_ui/desktop/common/images/loading-sm-blue.gif' />") }

        function b() { n().text(i().get("closeButtonLabel")) }

        function w() { a().resetForm(), v(), s().show(), d().hide() } var k, y, S, T, P, I, x, M, D, $, L;
        this.set$modal = function(e) { k = e }, this.init = function() { s().click(h), k.find("#forgottenPwd-userid").keydown(p), k.find("#forgottenPwd-email").keydown(p), w() }, this.openModal = function() { k.dialog("open") }, this.closeModal = function() { k.dialog("close") } } return i }), define("RmaModalBehavior", ["jquery", "DialogConfigurationFactory"], function(e, t) {
    function i() {
        function i() { return S || (S = C.data("singular-message")), S }

        function a() { return T || (T = C.data("multiple-message")), T }

        function r() { return P || (P = C.find(".accept-restocking")), P }

        function o() { return I || (I = C.find(".accept-restocking .accept")), I }

        function n() { return x || (x = C.find(e(".quantity-return"))), x }

        function s() { return M || (M = C.find(e(".message .response"))), M }

        function l() { return D || (D = C.find("#quantity")), D }

        function d() { C.dialog("close") }

        function c() { var t = { confirmationNumber: b, productNumber: k, orderNumber: y, returnReason: "Return to Stock", restockingFee: s().text(), quantity: l().find(":selected").text() };
            e.ajax({ url: "/order-history/submit-rma", type: "post", data: e.param(t, !0) }).done(function() { location.reload(), C.dialog("close") }) }

        function u() { m(), h() }

        function h() { var t = l().find(":selected").text(); if (t > 0) { var i = { confirmationNumber: b, customerNumber: w, productNumber: k, returnReason: "Return to Stock", quantity: t };
                e.ajax({ url: "/order-history/rma-restock-fee", type: "post", data: e.param(i, !0) }).done(function(e) { e > 0 ? (s().html(e), r().fadeIn("fast")) : s().html(e), s().hide(), n().fadeIn("fast") }) } }

        function p(t) { var i = e(t.target);
            i.prop("checked") ? n().fadeIn("fast") : n().fadeOut("fast") }

        function m() { r().hide(), o().prop("checked", !1), n().hide(), s().html("") }

        function g(t) { var i = { confirmationNumber: b, customerNumber: w, productNumber: k, orderNumber: y, errorMessage: $ };
            e.ajax({ url: "/order-history/rma-returnable-qty", type: "post", data: e.param(i, !0) }).done(function(i) { i >= 1 ? (f(i), v(i), 1 == i && e("#quantity").prop("disabled", !0), C.dialog("open")) : alert($), t() }) }

        function f(e) { var t;
            t = 1 === e ? i() : a().replace("<QTY>", e), C.find(".titlebar .title h2").text(t) }

        function v(e) { l().empty(); for (var t = 1; e >= t; t++) { var i = '<option value="' + t + '">' + t + "</option>";
                l().append(i) } } var C, b, w, k, y, S, T, P, I, x, M, D, $;
        this.setConfirmationNumber = function(e) { b = e }, this.setCustomerNumber = function(e) { w = e }, this.setProductNumber = function(e) { k = e }, this.setOrderNumber = function(e) { y = e }, this.setErrorMessage = function(e) { $ = e }, this.set$modal = function(e) { C = e, C.dialog(t.getRmaModalConfiguration()) }, this.init = function() { C.find(".cancel_link").click(d), n().click(c), l().change(u), o().change(p) }, this.openModal = function() { m(), g(h) } } return i }), define("CheckUserIdAvailabilityBehavior", ["jquery", "GlobalContentMessagesModel"], function(e, t) { return function() {
        function i() { return u || (u = e("#check-availability")), u }

        function a() { return h || (h = t.getSharedInstance()), h }

        function r() { var e = c.val(); "" != e && o(e) }

        function o(t) { e("#check-availability").hide(); var i = e("#availability-response");
            e.ajax({ url: "/register/users/exists/" + t, type: "get", success: function(e) { e ? n(i) : s(i) } }) }

        function n(e) { e.html(a().get("unavailableMessage")), e.addClass("verify-ex") }

        function s(e) { e.html(a().get("availableMessage")), e.addClass("added-check") }

        function l() { var t = e("#availability-response");
            t.html("&nbsp;"), t.removeClass("added-check"), t.removeClass("verify-ex"), i().show(), i().css("display", "inline-block") }

        function d(t) { var a = e(t.target),
                r = a.siblings(".availability-response.verify-ex"),
                o = a.siblings("div.error");
            (0 != r.length || 0 != o.length) && (a.attr("value", ""), a.removeClass("input-error"), r.html(" "), r.removeClass("verify-ex"), i().show(), o.hide()) } var c, u, h;
        this.set$userId = function(e) { c = e }, this.init = function() { c.focusout(r), c.keyup(l), c.focus(d) } } }), define("EditListModalBehavior", ["jquery", "ListModalBehavior", "GlobalContentMessagesModel"], function(e, t, i) {
    function a() {
        function r() { return O || (O = new t, O.set$listModal(E)), O }

        function o() { return N || (N = E.find("#listName")), N }

        function n(e) { return q || (q = E.find("#name-field-error"), q.html(e)), q.html() != e && q.html(e), q }

        function s() { return j || (j = E.find("#shareLocation")), j }

        function l() { return _ || (_ = E.find(".recurringType")), _ }

        function d() { return W || (W = E.find(".recurringOptions")), W }

        function c() { return z || (z = E.find("#poNumber")), z }

        function u() { return U || (U = E.find(".start_date_editlist")), U }

        function h() { return Q || (Q = E.find("#start-date-error"), Q.html(w().get("listInvalidStartDateMessage"))), Q }

        function p() { return G || (G = E.find("#frequency")), G }

        function m() { return H || (H = E.find("#frequencyUom")), H }

        function g() { return K || (K = E.find(".cancel_next_order_link")), K }

        function f() { return tt || (tt = E.find("#isNextOrderCancelled")), tt }

        function v() { return Y || (Y = E.find("#list-edit-recurring")), Y }

        function C() { return Z || (Z = E.find(".cancel-next-order-confirmation")), Z }

        function b() { return J || (J = E.find("#updateOccurrenceForm")), J }

        function w() { return et || (et = i.getSharedInstance()), et }

        function k() { y() }

        function y() { "yes" == l().val() ? d().slideDown() : d().slideUp(), E.css("height", "") }

        function S(e) { null != e && 13 == e.keyCode && T(e) }

        function T(t) { t.preventDefault(); var i = P(); if (i) { var r = { formData: { listCode: E.data("list_code"), name: o().val(), shareLocation: s().val(), recurring: l().val(), poNumber: c().val(), startDate: u().val(), frequency: parseInt(p().val()), frequencyUom: m().val(), isNextOrderCancelled: f().val() } };
                E.trigger(a.Event_FormDidSuccessfullyValidateOnSubmit, r), e("#lists-nav-link").prop("display", "block"), e("#lists-nav-link").prop("class", " ") } }

        function P() { var e = I(),
                t = Boolean("yes" === l().val()),
                i = D(); return t ? i ? $() : L() : $(), Boolean(e && (t && i || !t)) }

        function I() { var t = o().val().trim(),
                i = /^[a-zA-Z0-9' ']+$/,
                a = !1; if (i.test(t)) { var r = "/lists/validName/" + t + "/" + e("#list-code").val();
                e.ajax({ type: "GET", url: r, async: !1 }).done(function(e) { 1 === e.code ? M(e.errorMessage) : (a = !0, x()) }) } else M(E.find("#special_char_error").val()); return a }

        function x() { o().removeClass("input-error"), n().hide() }

        function M(e) { o().addClass("input-error"), n(e).show() }

        function D() { var t = u().val(),
                i = e.datepicker.formatDate("mm/dd/yy", new Date); return Boolean(null != t && "" != t && t >= i) }

        function $() { u().removeClass("input-error"), h().hide() }

        function L() { u().addClass("input-error"), h().show() }

        function F() { var e = E.data("list_name"),
                t = E.data("share_list_with_location"),
                i = E.data("recurring_order"),
                a = E.data("po"),
                r = E.data("start_date_editlist"),
                n = E.data("frequency_uom");
            e && o().val(e), t && s().val(t), i && l().val(i), a && c().val(a), r && u().val(r), n && m().val(n) }

        function V(t) { t.preventDefault(), e.ajax({ url: b().attr("action"), type: "get", data: b().serialize() }).done(function() { f().val(!0), g().hide(), C().show() }) }

        function A(e) { e.preventDefault(), l().val("no"), T(e) }

        function R() { B() }

        function B() { o().val(""), s().val("no"), l().val("no"), c().val(""), m().val(m().find("option:first").val()), x(), $(), d().slideUp(0), g().show(), C().hide() } var E, O, N, q, j, _, W, z, U, Q, G, H, K, Y, Z, J, X, et, tt;
        this.set$listModal = function(e) { E = e }, this.set$listDetail = function(e) { X = e }, this.invalidNameError = function(e, t) { 1 == e ? M(t) : x() }, this.set$startDate = function(e) { U = e }, this.init = function() { u().datepicker({ showOtherMonths: !0, selectOtherMonths: !0, minDate: 0 }), l().change(k), E.find(".submit_list_edit_link").off(), E.find(".submit_list_edit_link").click(T), E.find("#listName").keydown(S), g().click(V), v().click(A), E.on(t.Event_ListModalDidClose, R), E.find(".submit_list_make_recurring_link").click(T) }, this.openModal = function() { F(), y() }, this.closeModal = function() { r().closeModal() } } return a.Event_FormDidSuccessfullyValidateOnSubmit = "EditListModalBehavior_Event_FormDidSuccessfullyValidateOnSubmit", a }), define("CommentInputLimiterBehavior", ["jquery", "GlobalContentMessagesModel"], function(e, t) { return function() {
        function i() { return d || (d = e("#comment")), d }

        function a() { return c || (c = e(".input_comments_id-error small")), c }

        function r() { return u || (u = t.getSharedInstance()), u }

        function o(t) { var i = e(t.target),
                a = i.val();
            a.length < h ? n() : (s(), i.val(a.substr(0, h))) }

        function n() { var e = h - i().val().length;
            a().html(e + " " + r().get("textareaCharactersRemainingMessage")), a().removeClass("too-many-characters") }

        function s() { a().html(r().get("textareaNoCharactersRemainingMessage")), a().addClass("too-many-characters") } var l, d, c, u, h = 80;
        this.set$eventDelegate = function(e) { l = e }, this.init = function() { l.on("keyup", "#comment", o) } } }), define("ListModalBehavior", ["jquery"], function() {
    function e() {
        function t() { r.closeModal() }

        function i() { r.closeModal() } var a, r = this;
        this.set$listModal = function(e) { a = e }, this.init = function() { a.dialog(DialogConfigurationFactory.getListModalConfiguration()), a.dialog("option", "close", function() { a.trigger(e.Event_ListModalDidClose) }), a.find(".button.close").click(t), a.find(".actions .button.cancel").click(i) }, this.openModal = function() { a.dialog("open") }, this.closeModal = function() { WebStore.Cart.refreshNavBarComponent("lists"), a.dialog("close") } } return e.Event_ListModalDidClose = "ListModalBehavior_Event_ListModalDidClose", e }), define("RadioButtonBehavior", ["jquery"], function(e) { return function() {
        function t(e) { a(e, function(e) { e.removeClass("disabled"), e.is("div") || e.removeAttr("disabled"), e.parent("span") && e.parent("span").removeClass("disabled") }) }

        function i(e, t) { a(e, function(e) { e.addClass("disabled"), e.is("div") || (e.attr("disabled", "disabled"), t || e.val("")), e.parent("span") && e.parent("span").addClass("disabled") }) }

        function a(t, i) { e.each(t, function(t, r) { e.isPlainObject(r) ? a(r, i) : i(r) }) } this.radioButton = function(e, a) { var r = e; return { $this: r, activate: function() { t(r) }, deactivate: function() { i(r, a) } } } } }), define("TextboxBehavior", ["jquery", "underscore", "accounting", "jqueryValFormatter"], function(e, t, i) {
    function a() {
        function t(t) { t.validateEmail ? (u = t.validateEmail, s.on("blur.placeholder", r), l = p) : t.validatePhone && (c = t.validatePhone, s.on("blur.placeholder", r), s.on("blur.placeholder", a), l = m), 1 == t.validateNumeric && s.on("keyup", b), 1 == t.validateSignedNumeric && s.on("keyup", w), 1 == t.formatCurrency && (v(), s.jqueryValFormatter(e.fn.jqueryValFormatter.actions.addValFormatter, { getterFormatter: function(e) { return i.unformat(e) } }), s.on("blur.placeholder", v)), 1 == t.formatPercent && (C(), s.on("blur.placeholder", C)), t.formatNumeric && s.on("blur.placeholder", o), t.maskDecimal && s.maskMoney({ decimalOnly: !0 }), t.validateSpecialChar === !0 && s.on("keyup", k), s.on("blur.placeholder", n) }

        function a() { if (s.val().length <= 0) return !1; var e = s.val(); if (e = e.replace(/[^0-9]+/g, ""), m.test(e)) { var t = e.substring(0, 3),
                    i = e.substring(3, 6),
                    a = e.substring(6, 10);
                s.val("(" + t + ") " + i + "-" + a) } }

        function r() { if ((c || u) && s.val().length <= 0) return !1; var e = s.val(); return e == d ? !1 : void(l.test(e) ? (s.removeClass("fix-me"), s.removeClass("invalid-input"), s.addClass("valid-input")) : (s.addClass("fix-me"), s.addClass("invalid-input"), s.removeClass("valid-input"))) }

        function o() { var t = parseInt(s.val());
            e.isNumeric(t) && e.isNumeric(dec) && s.val(t.toFixed(dec)) }

        function n() { var e = s[0].value;
            s.value = e.trim() } var s, l, d, c, u, h = /[^0-9.]/g,
            p = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}$/i,
            m = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,
            g = /[^a-zA-Z0-9*]/g,
            f = /[^-0-9.]/g;
        this.init = function(e) { s = e.textbox, s.placeholder(), t(e) }; var v = function() { var e = s.val(); if (e) { if (e.length <= 0) return !1;
                    s.val(i.formatMoney(e, "")) } },
            C = function() { var e = s.val(); if (e) { if (e.length <= 0) return !1;
                    s.val(i.formatNumber(e, 4)) } },
            b = function() { s.val(s[0].value.replace(h, "")) },
            w = function() { s.val(s[0].value.replace(f, "")) },
            k = function() { s.val(s[0].value.replace(g, "")) };
        this.createPhoneTextbox = function(e, t) { var i = { textbox: e, validatePhone: !0 };
            t && (i.ghostText = t), this.init(i) }, this.createEmailTextbox = function(e, t) { var i = { textbox: e, validateEmail: !0 };
            t && (i.ghostText = t), this.init(i) } } return a }), define("RetailQuoteBehavior", ["jquery", "TextboxBehavior", "RetailQuoteItemBehavior"], function(e, t, i) {
    function a() {
        function a() { if (!w) { w = e(".quote"); var t = r(w);
                w.items = t.items, 0 == w.items.length && (e("#add-quote-button").removeClass("dark-grey"), e("#add-quote-button").addClass("button-dark-grey-appears--disabled"), e("#add-quote-button").prop("onclick", ""), e("#add-quote-button").click(function(e) { e.preventDefault() })), w.itemBehaviors = t.behaviors, w.phoneTextbox = n(w), w.sendEmailTextbox = s(w), a().find("#emailFormLink").length && (w.on("click", "#emailFormLink", h), w.on("click", "#send-email-button", p)), a().find("#exportConsumerInfoLink").length && w.on("click", "#exportConsumerInfoLink", g), w.on("click", "#clearRetailQuote", m), w.on(i.Event_updateQuantityLinkClicked, v), w.on(i.Event_refreshQuote, u), e(".cust-info").on("blur", "input:text", d), w.on("click", "#addAddonButton-0", C), w.on("click", "#print-link", b) } return w }

        function r(t) { var a = [],
                r = []; return e(".root-item, .rq-subtotal-addon").each(function(n, s) { var l = o(t.data("quotedata"), e(s).data("entry-number")),
                    d = new i;
                d.init(s, l), a.push(l), r.push(d) }), { items: a, behaviors: r } }

        function o(t, i) { var a; return e(t).each(function(e, t) { return t.entryNumber === i ? (a = t, 0) : void 0 }), a }

        function n() { var e = new t; return e.createPhoneTextbox(w.find("#consumerPhone"), w.find("#phoneGhostText")), e }

        function s() { var e = new t; return e.createEmailTextbox(w.find("#recipientEmail-retailQuote"), w.find("#emailAddressGhostText")), e }

        function l() { k = w.find("#consumerFirstName").placeholder(), y = w.find("#consumerLastName").placeholder(), S = w.find("#address1").placeholder(), T = w.find("#address2").placeholder(), P = w.find("#consumerCity").placeholder(), I = w.find("#consumerState").placeholder(), x = w.find("#consumerZipcode").placeholder(), M = w.find("#consumerEmailId").placeholder(), D = w.find("#consumerPhoneNumber").placeholder(), $ = w.find("#phoneAreaCode").placeholder() }

        function d() { var t = "/retail-quote/",
                i = t + "updateConsumer/";
            e("#recipientEmail-retailQuote").val(e("#consumerEmailId").val());
            e.post(i, e(".customer-info-entry").serialize()) }

        function c(t) { a().off("click", "#emailFormLink", h), a().off("click", "#send-email-button", p), a().off("click", "#clearRetailQuote", m), a().off("click", "#addAddonButton-0", C), a().off("click", "#print-link", b), e("#consumerPhoneNumber").off(), e("#recipientEmail-retailQuote").off(), e("#consumerEmailId").off(), e(a().itemBehaviors).each(function(e, t) { t.clearQtyHandler() }), w = null, e("#retail-quote-modal").html(t), a(), l() }

        function u(e, t) { c(t) }

        function h() { e("#EmailSendForm").slideToggle(), e("#EmailSendForm #recipientEmail-retailQuote").val(""), e("#EmailSendForm #recipientEmail-retailQuote").css("background", "white") }

        function p() { var t = w.find(".message-indicator"),
                i = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}$/i; if (i.test(w.find("#recipientEmail-retailQuote").val())) { e("#EmailSendForm").slideToggle(); var a = "/retail-quote/",
                    r = a + "redesign/sendEmail/",
                    o = function() { t.addClass("added-check"), t.removeClass("verify-ex"), t.prop("innerText", w.find("#emailSentLabel").prop("innerText")), f(t, 2e3) },
                    n = function() { t.removeClass("added-check"), t.addClass("verify-ex"), t.prop("innerText", w.find("#emailErrorLabel").prop("innerText")), f(t, 2e3) },
                    s = e("#recipientEmail-retailQuote").serialize();
                e.ajax({ type: "POST", url: r, data: s, success: o, error: n }) } else t.removeClass("added-check"), t.prop("innerText", w.find("#validEmailErrorLabel").prop("innerText")), f(t, 5e3) }

        function m() { var e = "/retail-quote/",
                t = e + "clearQuoteRedesign/";
            window.location.href = t }

        function g() { w.find("#customer-info-form").validate().cancelSubmit = !0, w.find("#customer-info-form").submit() }

        function f(e, t) { var i = w.find(".placeholder");
            i.hide(), e.fadeIn("fast", function() { setTimeout(function() { e.hide(), i.show() }, t) }) }

        function v(t) { { var i = "";
                e(t.target).data().index } e.each(a().itemBehaviors, function(e, t) { var a = t.updateQuantity();
                i += void 0 != a ? a : "" }); var r = "/retail-quote/quote/",
                o = r + "updateQuantity/" + i;
            e.get(o, function() { location.reload() }) }

        function C() { var t, i = e("#quoteManualAddon-0").val(); if ("" === i || null === i) return void alert("Please select an Addon to be added"); if ("-1" == i) return void e("#retail-quote-modal").html(t); var a = "/retail-quote/",
                r = a + "addManualAddon/" + i + "/0";
            window.location.href = r }

        function b() { window.open("/retail-quote/quotePage/print", "_blank") } var w, k, y, S, T, P, I, x, M, D, $;
        this.init = function() { a(), l() }, this.reinit = function(e) { c(e) } } return a._sharedInstance = null, a.getSharedInstance = function() { return a._sharedInstance || (a._sharedInstance = new a, a._sharedInstance.init()), a._sharedInstance }, a }), define("RetailQuoteItemBehavior", ["jquery", "TextboxBehavior", "accounting"], function(e, t, i) {
    function a() {
        function r(t, i, a) { if (w = e(t), w.item = i, a && (S = !0, w.parentItem = a), void 0 == w.item || "PRODUCT" != w.item.type || S || e("#addAddonButton-" + w.item.entryNumber).on("click", m), w.quantityTextbox = n(), w.quantityTextbox.on("keypress", d), w.updateQtyLink = s(), w.updateQtyLink.on("keypress", c), w.on("click", ".deleteItemButton", p), void 0 != w.item && w.item.childItems.length > 0) { var r = o(w.item.childItems, w);
                w.childItems = r[0], w.childItemBehaviors = r[1] } w.updateCostField = l() }

        function o(t, i) { var r = [],
                o = [],
                n = [],
                s = e(t).length; return e.each(t, function(e, t) { if ("TAX" !== t.type) { var n = "child_" + t.parentItemEntryNumber + "-" + t.entryNumber,
                        l = i.closest("table").find("#" + n),
                        d = new a;
                    d.init(l, t, i), e == s - 1 && l.addClass("no-top-border"), r.push(l), o.push(d) } }), n.push(r), n.push(o), n }

        function n() { if (!k) { k = w.find(".quantityInput"); var e = new t,
                    i = { textbox: k, validateNumeric: !0 };
                e.init(i) } return k }

        function s() { return y || (y = w.find(".update-quantity-link"), y.on("click", c)), y }

        function l() { if (void 0 != w.item) { var e = S ? w.item.parentItemEntryNumber + "-" + w.item.entryNumber : w.item.entryNumber,
                    i = T + e,
                    a = P + e,
                    r = w.find(i);
                r.on("click", g); var o = w.find(a);
                o.val(w.item.price.value); var n = new t,
                    s = ""; return s = "FEE" == w.item.type || "SERVICE" == w.item.type ? { textbox: o, validateSignedNumeric: !0 } : { textbox: o, validateNumeric: !0 }, n.init(s), o.on("blur", v), o.on("keypress", f), { link: r, entry: o } } }

        function d(e) { var t = e.keyCode || e.which;
            13 === t && (e.preventDefault(), c(e)) }

        function c() { w.trigger(a.Event_updateQuantityLinkClicked, w) }

        function u() { if (void 0 != w.item && void 0 !== w.quantityTextbox.val()) { var t = w.quantityTextbox.val();
                isBlank(t) && (t = 0); var i = w.item.entryNumber + "@" + parseInt(t); return w.childItemBehaviors ? (i += "!", e.each(w.childItemBehaviors, function(e, t) { i += t.updateQuantity() }), i += "!") : i += "!!", i } }

        function h() { if (void 0 != w.item) { var e = w.quantityTextbox.val(); return isBlank(e) && (e = 0), w.item.entryNumber + "@" + parseInt(e) + "!" } }

        function p() { if (void 0 != w.item) { var e = "";
                e = S ? w.item.parentItemEntryNumber + "@" + w.parentItem.item.quantity + "!" + w.item.entryNumber + "@0" : w.item.entryNumber + "@0"; var t = "/retail-quote/updateQuantityWithRedirect/" + e + "/";
                window.location.href = t } }

        function m() { var t = e("#quoteManualAddon-" + w.item.entryNumber).val(); if ("" === t || null === t || "-1" == t) return void alert("Please select an Addon to be added"); var i = "/retail-quote/addManualAddon/" + t + "/" + w.item.entryNumber;
            window.location.href = i }

        function g() { w.updateCostField.link.hide(), w.updateCostField.entry.show(), w.updateCostField.entry.focus() }

        function f(e) { var t = e.which || e.keyCode;
            13 === t && v(e) }

        function v(t) {
            function a(t) { return void 0 != w.item ? e.isNumeric(t) && parseFloat(t) !== w.item.price.value : void 0 } t.preventDefault(), cost = i.toFixed(w.updateCostField.entry.val(), 2), a(cost) ? S ? b(w.item.entryNumber, w.item.parentItemEntryNumber, cost) : C(w.item.entryNumber, cost, t) : (w.updateCostField.link.show(), w.updateCostField.entry.hide()) }

        function C(e, t) { var i = "/retail-quote/",
                a = i + "updateCostWithRedirect/" + e + "/" + t;
            window.location.href = a }

        function b(e, t, i) { var a = "/retail-quote/",
                r = a + "updateChildCostWithRedirect/" + e + "/" + t + "/" + i;
            window.location.href = r } var w, k, y, S = !1,
            T = "#update-cost-link-",
            P = "#update-cost-entry-";
        this.clearQtyHandler = function() { y.off(), w.off(), w.manualAddonSelector && w.off("click", ".addAddonButton", m) }, this.init = function(e, t, i) { r(e, t, i) }, this.get$retailQuoteItem = function() { return w }, this.updateQuantity = function() { return S ? h() : u() }, a.Event_refreshQuote = "RetailQuoteItemBehavior_Event_refreshQuote", a.Event_updateQuantityLinkClicked = "RetailQuoteBehavior_Event_updateQuantityLinkClicked" } return a }), define("CatalystFacade", ["CatalystLoggerController"], function(e) {
    function t() {
        function t() { var e = window.location.pathname,
                t = e.substring(e.lastIndexOf("/") + 1); return i(t) ? "home" : t }

        function i(e) { return "" === e }

        function a() { o("prop", 1, 22) }

        function r() { o("eVar", 1, 47) }

        function o(e, t, i) { for (var a = t; i >= a; a++) { var r = e + a;
                n.getCatalystObject()[r] = void 0 } } var n = this,
            l = new e({ loggingEnabled: !1, textFiltersCollection: [] });
        this.getCatalystObject = function() { try { return s } catch (e) { return {} } }, this.clearAllCatalystProperties = function() { var e = this.getCatalystObject();
            e.events = void 0, e.Products = void 0, e.Pagename = void 0, e.pageName = t(), e.Channel = void 0, e.channel = "none", e.Campaign = void 0, e.server = window.location.hostname, a(), r() }, this.getCatalystProperty = function(e) { return this.getCatalystObject()[e] }, this.appendToCatalystProperty = function(e, t) { var i = this.getCatalystProperty(e) + t;
            this.setCatalystProperty(e, i) }, this.setCatalystProperty = function(e, t) { var i = t; "events" === e && this.getCatalystObject()[e] && (i = this.getCatalystObject()[e] + "," + i), this.getCatalystObject()[e] = i, l.log(this.constructor.name + ': DID set Catalyst property "' + e + '" to "' + i + '"') }, this.setCatalystProperties = function(e) { for (var t in e) e.hasOwnProperty(t) && this.setCatalystProperty(t, e[t]) }, this.sendCatalystDataToServer = function() { console.warn('"sendCatalystDataToServer" is deprecated. Please use the "sendCatalystDataToServerViaT" or "sendCatalystDataToServerViaTl" methods.'), this.sendCatalystDataToServerViaT() }, this.sendCatalystDataToServerViaT = function() { try { this.getCatalystObject().t(), this.clearAllCatalystProperties(), l.forceLog(this.constructor.name + ": DID send Catalyst data to server via t().") } catch (e) {} }, this.sendCatalystDataToServerViaTl = function() { try { this.getCatalystObject().tl(), this.clearAllCatalystProperties(), l.forceLog(this.constructor.name + ": DID send Catalyst data to server via tl().") } catch (e) {} }, this.setAndSendCatalystDataToServer = function(e) { console.warn('"setAndSendCatalystDataToServer" is deprecated. Please use the "setAndSendCatalystDataToServerViaT" or "setAndSendCatalystDataToServerViaTl" methods.'), this.setAndSendCatalystDataToServerViaT(e) }, this.setAndSendCatalystDataToServerViaT = function(e) { this.setCatalystProperties(e), this.sendCatalystDataToServerViaT() }, this.setAndSendCatalystDataToServerViaTl = function(e) { this.setCatalystProperties(e), this.sendCatalystDataToServerViaTl() } } return t._sharedInstance = null, t.getSharedInstance = function() { return t._sharedInstance || (t._sharedInstance = new t), t._sharedInstance }, t }), define("CatalystCookieFacade", ["underscore", "jquery", "catalystFacadeInstance", "CatalystLoggerController"], function(e, t, i, a) {
    function r() {
        function r() { return Boolean(null !== t.cookie(s.getCatalystCookieName())) }

        function o() { t.cookie(s.getCatalystCookieName(), JSON.stringify({}), { path: s.getCatalystCookiePath() }) } var n, s = this,
            l = "catalyst_communicator_cookie",
            d = "/",
            c = new a({ loggingEnabled: !1, textFiltersCollection: [] });
        this.getCatalystFacade = function() { return void 0 === n && (n = i), n }, this.setCatalystFacade = function(e) { n = e }, this.getCatalystCookieName = function() { return l }, this.setCatalystCookieName = function(e) { l = e }, this.getCatalystCookiePath = function() { return d }, this.setCatalystCookiePath = function(e) { d = e }, this.getCookie = function() { return r() || o(), t.cookie(s.getCatalystCookieName()) }, this.removeCookie = function() { t.removeCookie(s.getCatalystCookieName(), { path: s.getCatalystCookiePath() }) }, this.getCookieValueForKey = function(e) { return t.parseJSON(s.getCookie())[e] }, this.setCookieValueForKey = function(e, t) { var i = {};
            i[e] = t, this.setCookieValuesForKeys(i) }, this.setCookieValuesForKeys = function(i) { var a = t.parseJSON(s.getCookie());
            e.each(i, e.bind(function(e, t) { var i = e; "events" === t && a[t] && (i = a[t] + "," + i), a[t] = i, c.log(this.constructor.name + ': DID set Catalyst Cookie property "' + t + '" to "' + i + '"') }, this)), t.cookie(s.getCatalystCookieName(), JSON.stringify(a), { path: s.getCatalystCookiePath() }) }, this.sendCookieDataToCatalyst = function() { var e = s.getCatalystFacade(); if (r()) { c.forceLog(this.constructor.name + ": WILL send Catalyst cookie data to Catalyst facade"); var i = t.parseJSON(s.getCookie()); for (var a in i) i.hasOwnProperty(a) && e.setCatalystProperty(a, i[a]);
                s.removeCookie(), e.sendCatalystDataToServerViaTl(), c.forceLog(this.constructor.name + ": DID send Catalyst cookie data to Catalyst facade") } } } return r._sharedInstance = null, r.getSharedInstance = function() { return r._sharedInstance || (r._sharedInstance = new r), r._sharedInstance }, r }), define("UserTrailCookieFacade", ["jquery"], function(e) {
    function t() {
        function t() { return Boolean(null !== e.cookie(a.getTrailCookieName())) }

        function i() { e.cookie(a.getTrailCookieName(), "", { path: a.getTrailCookiePath() }) } var a = this,
            r = "user_trail_cookie",
            o = "/",
            n = "search",
            s = "vehicle-guide",
            l = "cart",
            d = "my-account",
            c = "stock-order",
            u = "home",
            h = "change-location",
            p = "compare",
            m = "login",
            g = !1;
        this.getTrailCookieName = function() { return r }, this.setTrailCookieName = function(e) { r = e }, this.getTrailCookiePath = function() { return o }, this.setTrailCookiePath = function(e) { o = e }, this.getCookieValue = function() { return t() || i(), e.cookie(a.getTrailCookieName()) }, this.setCookieValue = function(t) { e.cookie(a.getTrailCookieName(), t, { path: a.getTrailCookiePath() }), g && console.debug('DID set user trail cookie to "' + t + '"') }, this.isValueSearch = function() { return this.getCookieValue() === n }, this.isValueVehicleGuide = function() { return this.getCookieValue() === s }, this.isValueCart = function() { return this.getCookieValue() === l }, this.isValueMyAccount = function() { return this.getCookieValue() === d }, this.isValueStockOrder = function() { return this.getCookieValue() === c }, this.isValueHome = function() { return this.getCookieValue() === u }, this.isValueChangeLocation = function() { return this.getCookieValue() === h }, this.isValueCompare = function() { return this.getCookieValue() === p }, this.isValueLogin = function() { return this.getCookieValue() === m }, this.setValueToSearch = function() { this.setCookieValue(n) }, this.setValueToVehicleGuide = function() { this.setCookieValue(s) }, this.setValueToCart = function() { this.setCookieValue(l) }, this.setValueToMyAccount = function() { this.setCookieValue(d) }, this.setValueToStockOrder = function() { this.setCookieValue(c) }, this.setValueToHome = function() { this.setCookieValue(u) }, this.setValueToChangeLocation = function() { this.setCookieValue(h) }, this.setValueToCompare = function() { this.setCookieValue(p) }, this.setValueToLogin = function() { this.setCookieValue(m) } } return t._sharedInstance = null, t.getSharedInstance = function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance }, t }), define("StoreLocation", ["ATDObject"], function(e) {
    function t(e, t, i, a) { this.store = e, this.storeName = t, this.number = i, this.storeDisplayName = a } return t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t }), define("ATDObject", [], function() {
    function e() {} return e.prototype = Object.create(Object.prototype, { constructor: { value: e } }), e }), define("DialogConfigurationFactory", ["underscore", "jquery"], function(e, t) {
    function i() {} return e.extend(i, { getListModalConfiguration: function() { return this.getDefaultConfiguration() }, getRmaModalConfiguration: function() { return this.getDefaultConfiguration() }, getDefaultConfiguration: function() { return { bgiframe: !0, autoOpen: !1, resizable: !1, width: 380, height: "auto", minHeight: 190, show: "fade", hide: "fade", zIndex: 2e3, position: { my: "top", at: "top", offset: "0 52" }, modal: !0, stack: !1, closeOnEscape: !1, open: function() { var e = t(this),
                        i = e.dialog("widget");
                    i.find(".ui-dialog-titlebar").hide(), i.find(".ui-dialog-titlebar-close").hide(), t(document).on("click", ".ui-widget-overlay", function() { e.dialog("close") }) } } } }), i }), define("AddToCartForm", ["jquery"], function(e) { return function() {
        function t(t) { return e.isNumeric(t) ? t : "" } var i, a = "add-to-cart-form",
            r = "input.qty";
        this.setEventDelegate = function(e) { i = e }, this.init = function() { i.on("submit", "." + a, function(e) { return e.preventDefault(), !1 }), i.change(function(i) { if (e(i.target).is(r)) { var a = e(this),
                        o = a.val();
                    a.val(t(o)) } }) } } }), define("MyAccountUserComponent", ["jquery", "underscore", "backbone", "ATDObject", "SelectLocationInputView"], function(e, t, i, a, r) {
    function o(e, t, i, a, r, o) { this.autoCompleteId = "#" + e, this.allLocationsCheckBoxId = "#" + t, this.deleteUserClass = "." + i, this.cancelDeleteUserLink = "#" + a, this.deleteUserModalId = r, this.ALL_LOCATIONS = "allLocations", this.selectLocationInputView = null, this.preselectedStore = o }
    return o.prototype = Object.create(a.prototype), o.prototype.constructor = o, o.prototype.initialize = function() { this.selectLocationInputView = new r({ el: ".my-account-users .js-select-location-input-view", preselectedStore: this.preselectedStore }), this.selectLocationInputView.render(), this.initializeAutoComplete(), this.initializeAllLocationsCheckbox(), this.initializeDeleteUserLinks(), this.initializeCancelDeleteUserLink(), this.initializeUserListTablesorter() }, o.prototype.initializeAutoComplete = function() { var i = this;
        t.extend(this, Backbone.Events), this.listenTo(this.selectLocationInputView, r.Event_EnterKeyKeydown, function() { e(this.autoCompleteId).change() }), e(this.autoCompleteId).change(function() { return e.browser.msie && e.browser.version < 9 ? setTimeout(function() { i.findUsers(e(i.autoCompleteId).val()) }, 20) : i.findUsers(e(i.autoCompleteId).val()), !1 }) }, o.prototype.initializeAllLocationsCheckbox = function() { var t = this;
        e(this.allLocationsCheckBoxId).change(function() { this.checked && t.findUsers(t.ALL_LOCATIONS) }) }, o.prototype.initializeDeleteUserLinks = function() { e(this.deleteUserClass).click(function() { var t = e(this).data("uid");
            deleteUserModal(t) }) }, o.prototype.initializeCancelDeleteUserLink = function() { var t = this;
        e(this.cancelDeleteUserLink).click(function() { modalClose(t.deleteUserModalId) }) }, o.prototype.initializeUserListTablesorter = function() {
        e("#users").tablesorter({ sortList: [
                [0, 0]
            ], headers: { 0: { sorter: "text" }, 1: { sorter: "text" }, 2: { sorter: "none" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }), e("#users").bind("pagerChange pagerComplete pagerInitialized pageMoved", function(t, i) {
            for (var a = "", r = 0; r < i.totalPages; r++) a += r == i.page ? '<span class="pager-button current-page">' + (r + 1) + "</span>" : '<a class="pager-gotopage">' + (r + 1) + "</a>";
            e(".pagelist").html(a), e(".pager-gotopage").bind("click", function() {
                e("#users").trigger("pageSet.pager", e(this).text())
            }), window.scrollTo(0, 0)
        }), e("#users").tablesorterPager({ container: e(".tablesorter-pager"), size: 25, updateArrows: !0, cssNext: ".next", cssPrev: ".prev", cssPageSize: ".pagesize", cssDisabled: "disabled" })
    }, o.prototype.isEnterKey = function(e) { var t = 13; return e == t }, o.prototype.findUsers = function(e) { var t = null;
        e == this.ALL_LOCATIONS ? t = this.ALL_LOCATIONS : "" != e && (t = this.selectLocationInputView.getSelectedStoreNumber()), window.location = "/my-account/" + t + "/users" }, o
}), define("MyAccountUpdatePasswordComponent", ["ATDObject"], function(e) {
    function t(e, t, i, a) { this.formElement = e, this.submitButtonElement = t, this.cancelButtonElement = i, this.passwordValidator = a } return t.prototype = Object.create(e.prototype, { constructor: { value: t }, initialize: { value: function() { var e = this;
                this.passwordValidator.initialize(), this.submitButtonElement.click(function() { return e.formElement.submit(), !1 }), this.cancelButtonElement.click(function() { window.history.back() }) } } }), t }), define("MyAccountUsersCreateStepOneComponent", ["ATDObject"], function(e) {
    function t(e, t, i, a, r) { this.$formCancelButton = e, this.$saveButton = t, this.$form = i, this.$cancelConfirmNoButton = a, this.passwordValidator = r } return t.prototype = Object.create(e.prototype, { constructor: { value: t }, initialize: { value: function() { this.initializeCancelButton(), this.initializeSaveButton(), this.initializeCancelConfirmNoButton(), this.passwordValidator.initialize() } }, initializeCancelButton: { value: function() { this.$formCancelButton.on("click", function() { modalOpen("cancel", "cancel-modal") }) } }, initializeSaveButton: { value: function() { var e = this;
                this.$saveButton.on("click", function() { return e.$form.submit(), !1 }) } }, initializeCancelConfirmNoButton: { value: function() { this.$cancelConfirmNoButton.on("click", function() { modalClose("cancel-modal") }) } } }), t }), define("PasswordValidator", ["ATDObject", "GlobalContentMessagesModel"], function(e, t) {
    function i(e, i, a, r) { this.$newPassword = e, this.$matchedPassword = i, this.$newPasswordValidationAlert = a, this.$matchedPasswordValidationAlert = r, this.validNewPasswordDecoratorClass = "added-check", this.validMatchedPasswordDecoratorClass = "added-check", this.unmatchedPasswordText = "", this.model = t.getSharedInstance(), this.validNewPasswordText = this.model.get("passwordValidMessage"), this.invalidNewPasswordText = this.model.get("passwordInvalidLengthMessage"), this.matchedPasswordText = this.model.get("passwordMatchMessage") } return i.prototype = Object.create(e.prototype, { constructor: { value: i }, initialize: { value: function() { var e = this;
                this.$newPassword.keyup(function() { e.validatePasswords.call(e) }), this.$matchedPassword.keyup(function() { e.validatePasswords.call(e) }) } }, validatePasswords: { value: function() { this.validateNewPassword(), this.validateMatchedPassword() } }, validateNewPassword: { value: function() { this.isNewPasswordValid() ? this.markNewPasswordAsValid() : this.markNewPasswordAsInvalid() } }, validateMatchedPassword: { value: function() { this.isNewPasswordValid() && this.doPasswordsMatch() ? this.markMatchedPasswordAsMatched() : this.markMatchedPasswordAsUnmatched() } }, isNewPasswordValid: { value: function() { return !this.isNewPasswordEmpty() && this.isNewPasswordCorrectLength() } }, isNewPasswordEmpty: { value: function() { return "" == this.$newPassword.val() } }, isNewPasswordCorrectLength: { value: function() { var e = this.$newPassword.val().length; return e >= 6 && 20 > e } }, doPasswordsMatch: { value: function() { return this.$newPassword.val() == this.$matchedPassword.val() } }, markNewPasswordAsValid: { value: function() { this.$newPasswordValidationAlert.html(this.validNewPasswordText), this.$newPasswordValidationAlert.addClass("added-check"), $(".error").html(""), $(".input-error").removeClass("input-error") } }, markNewPasswordAsInvalid: { value: function() { this.$newPasswordValidationAlert.html(this.invalidNewPasswordText), this.$newPasswordValidationAlert.removeClass(this.validNewPasswordDecoratorClass) } }, markMatchedPasswordAsMatched: { value: function() { this.$matchedPasswordValidationAlert.html(this.matchedPasswordText), this.$matchedPasswordValidationAlert.addClass(this.validMatchedPasswordDecoratorClass) } }, markMatchedPasswordAsUnmatched: { value: function() { this.$matchedPasswordValidationAlert.html(this.unmatchedPasswordText), this.$matchedPasswordValidationAlert.removeClass(this.validMatchedPasswordDecoratorClass) } } }), i }), define("backboneAll", ["backbone", "underscore", "epoxy", "backbone-nested"], function(e, t, i) { return e.Model.prototype._ = t, e.Model.prototype.epoxy = i, e.View.prototype._ = t, e.View.prototype.epoxy = i, e }), define("catalystCookieFacadeInstance", ["CatalystCookieFacade"], function(e) { return console.warn('"catalystCookieFacadeInstance" is deprecated. Please use the "CatalystCookieFacade.getSharedInstance()" method.'), e.getSharedInstance() }), define("catalystFacadeInstance", ["CatalystFacade"], function(e) { return console.warn('"catalystFacadeInstance" is deprecated. Please use the "CatalystFacade.getSharedInstance()" method.'), e.getSharedInstance() }), define("userTrailCookieFacadeInstance", ["UserTrailCookieFacade"], function(e) { return console.warn('"userTrailCookieFacadeInstance" is deprecated. Please use the "UserTrailCookieFacade.getSharedInstance()" method.'), e.getSharedInstance() }), define("LoadingSpinnerView", ["jquery", "underscore", "marionette", "spin"], function(e, t, i, a) { return i.ItemView.extend({ spinnerView: null, className: "js-loading-spinner loading-spinner", template: t.template(""), ui: { spinnerOverlay: ".js-spinner-overlay" }, initialize: function(e) { e = e || {} }, onRender: function() { this.$el.dialog({ bgiframe: !0, autoOpen: !1, resizable: !1, width: 0, height: 0, show: "fade", hide: "fade", zIndex: 2e3, modal: !0, stack: !1, open: function() { var t = e(this).dialog("widget");
                    t.find(".ui-dialog-titlebar").hide(), t.find(".ui-dialog-titlebar-close").hide(), t.find(".ui-widget-content").hide() } }) }, showSpinner: function() { var e = { radius: 20, length: 20, width: 10, color: "#d3d3d3", redesign: !0 };
            this.$el.dialog("open"), this.spinnerView = new a(e).spin(this.$el[0]) }, hideSpinner: function() { this.$el.dialog("close"), this.spinnerView.stop() } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this, this._sharedInstance.render(), e("body").append(this._sharedInstance.$el)), this._sharedInstance } }) }), define("VehicleGuideHeaderView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "VehicleGuideModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#leftpanel-VehicleSearch", loadingSpinnerView: a.getSharedInstance(), vehicleGuideModel: r.getSharedInstance(), ui: { year: "select.year", make: "select.make", model: "select.model", trim: "select.trim", goLink: "#fitment-go-link", fitmentOptionsModal: "#fitment-modal", fitmentOptionsMessageModal: "#fitment-options-message-modal", vehicleGuideForm: "#vehicle-guide-search-form" }, events: { "change @ui.year": "onYearDropdownChange", "change @ui.make": "onMakeDropdownChange", "change @ui.model": "onModelDropdownChange" }, fitmentMakesUrl: "/fitment/vehicle-makes", fitmentModelsUrl: "/fitment/vehicle-models", fitmentTrimsUrl: "/fitment/vehicle-trims", disabledSelectCssClass: "disabled", enabledGoCssClass: "theme-color", disabledGoCssClass: "grey", selectedYear: null, selectedMake: null, selectedModel: null, selectedTrim: null, onRender: function() { var e = this.vehicleGuideModel.get("selectedYear"),
                t = this.vehicleGuideModel.get("selectedMake"),
                i = this.vehicleGuideModel.get("selectedModel"),
                a = this.vehicleGuideModel.get("selectedTrim");
            this.selectedYear = e, this.selectedMake = t, this.selectedModel = i, this.selectedTrim = a, this.ui.year.val(e), this.ui.make.val(t), this.ui.model.val(i), this.ui.trim.val(a), this.selectedYear ? this.selectedMake ? this.selectedModel || (this.disableDropdowns([this.ui.trim]), this.ui.trim.prop("selectedIndex", 0)) : (this.disableDropdowns([this.ui.model, this.ui.trim]), this.ui.model.prop("selectedIndex", 0), this.ui.trim.prop("selectedIndex", 0)) : (this.disableDropdowns([this.ui.make, this.ui.model, this.ui.trim]), this.ui.year.prop("selectedIndex", 0), this.ui.make.prop("selectedIndex", 0), this.ui.model.prop("selectedIndex", 0), this.ui.trim.prop("selectedIndex", 0)), this.isValidYear() && this.isValidMake() && this.isValidModel() && this.enableGo() }, onYearDropdownChange: function() { this.isValidYear() ? (this.populateDropdown(this.fitmentMakesUrl, this.ui.make, { year: this.ui.year.val() }), this.enableDropdown(this.ui.make)) : this.disableDropdowns([this.ui.make]), this.disableGo(), this.disableDropdowns([this.ui.model, this.ui.trim]) }, onMakeDropdownChange: function() { this.isValidYear() && this.isValidMake() ? (this.populateDropdown(this.fitmentModelsUrl, this.ui.model, { year: this.ui.year.val(), make: this.ui.make.val() }), this.enableDropdown(this.ui.model)) : this.disableDropdowns([this.ui.model]), this.disableGo(), this.disableDropdowns([this.ui.trim]) }, onModelDropdownChange: function() { this.isValidYear() && this.isValidMake() && this.isValidModel() ? (this.populateDropdown(this.fitmentTrimsUrl, this.ui.trim, { year: this.ui.year.val(), make: this.ui.make.val(), model: this.ui.model.val() }), this.enableDropdown(this.ui.trim)) : (this.disableDropdowns([this.ui.trim]), this.disableGo()), this.isValidYear() && this.isValidMake() && this.isValidModel() ? this.enableGo() : this.disableGo() }, populateDropdown: function(e, i, a) { var r = this;
            t.post(e, a, function(e) { r.resetDropdown(i); var a = t("<select />");
                t(e).each(function(e, i) { var r = "------" === i ? "" : i,
                        o = t("<option />", { val: r, text: i });
                    a.append(o) }), -1 != navigator.appVersion.indexOf("MSIE 9") ? i.append(a.children()).css("width", 0).css("width", "").hide().show() : i.append(a.children()), i.prop("selectedIndex", 0) }) }, resetDropdown: function(e) {-1 != navigator.appVersion.indexOf("MSIE 9") ? e[0].options.length = 1 : e.children().slice(1).remove() }, enableDropdown: function(e) { e.removeClass(this.disabledSelectCssClass), e.removeAttr(this.disabledSelectCssClass) }, disableDropdowns: function(t) { e.each(t, function(e) { e.attr("disabled", this.disabledSelectCssClass), this.resetDropdown(e) }, this) }, enableGo: function() { this.ui.goLink.removeClass(this.disabledGoCssClass), this.ui.goLink.addClass(this.enabledGoCssClass), this.ui.goLink.off("click").on("click", e.bind(this.onGoLinkClick, this)) }, disableGo: function() { this.ui.goLink.removeClass(this.enabledGoCssClass), this.ui.goLink.addClass(this.disabledGoCssClass), this.ui.goLink.off("click") }, isValidYear: function() { return /^\d{4}$/.test(this.ui.year.val()) }, isValidMake: function() { return "" !== this.ui.make.val() }, isValidModel: function() { return "" !== this.ui.model.val() }, onGoLinkClick: function() { this.resetCategorySelectionVehicle(), this.isValidYear() && this.isValidMake() && this.isValidModel() && (this.loadingSpinnerView.showSpinner(), this.ui.vehicleGuideForm.submit(), sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab")) }, onSelectFitmentClick: function(e) { this.forwardToUrl(t(e.currentTarget).data("href")) }, forwardToUrl: function(e) { this.loadingSpinnerView.showSpinner(), window.location.href = e }, resetCategorySelectionVehicle: function() { t.ajax({ url: "/category/reset-category-selection", type: "get" }).done(function() {}) } }) }), define("StockOrderHeaderView", ["jquery", "underscore", "marionette", "LoadingSpinnerView", "GlobalContentMessagesModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#stock_order", bulkAddProductQuantityMap: {}, ui: { stockOrderItemsForm: "#stock-order-items-form", stockOrderItemsTable: "#stock-order-items", stockOrderSupplierNumberInput: "#stock-order-supp-no", stockOrderSupplierQtyInput: "#stock-order-qty", stockOrderAddLink: "#stock-order-add-button", createQuoteLink: "#create-quote-link", addToOrderLink: "#add-to-order-link", addBulkStockLink: "#add-bulk-stock-link", csvTextArea: "#csv", stockOrderBulkUploadValidation: "#stockOrderBulkUploadValidation", stockOrderQuantityValidation: "#stockOrderQuantityValidation", subTotal: "#subtotal", toggleButton: "#toggle", stockOrderForm: "#stock_order_form", stockOrderSupplierNumberValidation: "#stockOrderSupplierNumberValidation", stockOrderBulkUploadMyBrandsMsg: "#stockOrderBulkUploadMyBrandsMsg", stockOrderSelectList: "#list-select", stockFooter: ".stock-footer", hr: ".hr", chooseList: ".choose-list", createList: ".create-list", csvDiv: ".csv", csvMore: ".more", csvLess: ".less", csvPaste: ".csv-paste", createNewListLink: ".create-new-list-link", recurringOrderStartDateInput: "#start-date-stockorder", createNewListSubmitLink: ".create-new-list-submit-link", isRecurringDropdown: "#recurring1", recurringOptionsContainer: ".recurringOptions", returnLink: ".return-link", cancelReturnLink: ".cancel-return-link", maxQuantity: "#maxQuantity", startDateError: "#start-date-error" }, events: { "click @ui.createQuoteLink": "onAddCreateQuoteLinkClick", "click @ui.addToOrderLink": "onAddToOrderLinkClick", "click @ui.addBulkStockLink": "onAddBulkStockLinkClick", "click @ui.toggleButton": "onToggleButtonClick", "click @ui.createNewListLink": "onCreateNewListLinkClick", "click @ui.createNewListSubmitLink": "onCreateNewListSubmitLinkClick", "change @ui.isRecurringDropdown": "onIsRecurringDropdownChange", "click @ui.stockOrderAddLink": "onStockOrderAddLinkClick", "click @ui.returnLink": "stockOrderShowDefault", "click @ui.cancelReturnLink": "stockOrderShowDefault" }, loadingSpinnerView: a.getSharedInstance(), onRender: function() { this.initStockOrderList(), this.initRecurringOrderStartDateInput(), this.ui.stockOrderSupplierNumberInput.placeholder(), this.ui.stockOrderSupplierQtyInput.placeholder() }, initStockOrderList: function() {
            function t() { var t = o.val(),
                    i = o.find("option:selected").text(); return "--" != i ? (e("#listCode").val(t), e("#productsForm").attr("action", "${pageContext.request.contextPath}/lists/addProduct"), !0) : !1 }

            function i() { var t = e("#createList input[name=name]").val(); if (t.trim(), t = t.split(" ").join(""), "" === t || null == t || 0 == t.length) return e("#listname-field-error").html("Enter a valid List Name").show(), !1; var i = /^[a-zA-Z0-9' ']+$/; return i.test(t) ? (e("#listname-field-error").html("Enter a valid List Name").hide(), !0) : (e("#listname-field-error").html("Enter a valid List Name").show(), e("#listName").addClass("input-error"), !1) } var a = this,
                r = this.$el;
            this.ui.stockOrderSupplierNumberValidation.hide(), this.ui.stockOrderQuantityValidation.hide(), this.ui.stockOrderBulkUploadValidation.hide(), this.ui.stockOrderBulkUploadMyBrandsMsg.hide(), r.find("#listRecurringStartDate").datepicker(); var o = this.ui.stockOrderSelectList,
                n = this.ui.stockOrderForm,
                s = this.ui.stockFooter,
                l = this.ui.chooseList,
                d = this.ui.createList;
            o.change(t), n.find("#stock-order-qty").keypress(function(e) { validateNumericInput(e), e && 13 == e.keyCode && a.stockOrderAdd() }), n.find("#stock-order-supp-no").keypress(function(e) { return e && 13 == e.keyCode ? (a.stockOrderAdd(), !1) : void 0 }), s.find(".add-to-list").click(function() { r.find(".choose-list-success").slideUp(); var t = r.find(".list-fail"),
                    i = e("#stock-order-items"); if (i.find('tr[id ^= "product_"]').length <= 0) t.slideDown().delay(2e3).slideUp();
                else if (0 == o.find("option").length) { var a = r.find(".create-list");
                    a.slideDown(), a.addClass("expanded") } else { var l = e(this),
                        d = n.find(".top-inputs"),
                        c = r.find(".choose-list"),
                        t = r.find(".list-fail"),
                        i = e("#stock-order-items");
                    l.hasClass("active") || (l.addClass("active"), d.children("input").attr("disabled", "disabled"), d.children("a").hide(), n.find(".csv").slideUp(), s.slideUp(), n.find(".form-idle").addClass("idling"), c.addClass("expanded"), c.slideDown()) } }), l.find(".cancel").click(function() { var e = n.find(".top-inputs");
                r.find(".choose-list").slideUp().removeClass("expanded"), n.find(".form-idle").removeClass("idling"), e.children("input").removeAttr("disabled"), e.children("a").show(), n.find(".csv").slideDown(), s.slideDown(), s.find("a.add-to-list").removeClass("active") }), l.find(".add").click(function() { var i = r.find(".list-fail"),
                    a = i.prop("textContent"),
                    o = n.find(".top-inputs"); if (t() === !0) { r.find(".choose-list-success").slideDown().delay(2500), r.find(".choose-list").slideUp().removeClass("expanded"), n.find(".form-idle").removeClass("idling"); var l = r.find("#stock-order-items-form").serialize();
                    e.ajax({ url: r.find("#addToList").attr("action"), type: "post", data: l, success: function(t) { var a = e.parseJSON(t); if (0 == a.code) { var o = r.find("#viewListLinkChoose"),
                                    n = o.attr("href");
                                n += t + "/", o.attr("href", n), r.find("#stock-order-items-form")[0].reset() } else 1 == a.code ? console.log(a.errorMessage) : 4 == a.code && (i.prop("textContent", a.message), i.slideDown().delay(5e3).slideUp()) } }), o.children("input").removeAttr("disabled"), o.children("a").show(), n.find(".csv").slideDown(), s.slideDown(), s.find("a.add-to-list").removeClass("active"), i.prop("textContent", a) } }), d.find(".cancel").click(function() { var e = n.find(".top-inputs");
                r.find(".create-list-success").slideUp(), r.find(".create-list").slideUp().removeClass("expanded"), n.find(".form-idle").removeClass("idling"), e.children("input").removeAttr("disabled"), e.children("a").show(), n.find(".csv").slideDown(), s.slideDown(), s.find("a.add-to-list").removeClass("active"), r.find(".choose-list select").val("--") }), d.find(".create-new-list-submit-link").click(function() { var l = n.find(".top-inputs"); if (i() === !0 && a.isRecurringStarteDateExists()) { var d = r.find("#createList"),
                        c = d.serialize();
                    e.ajax({ url: d.attr("action"), type: "post", data: c }).done(function(i) { if (null != i.data) { r.find(".create-list-success").slideDown().delay(2500), r.find(".create-list").slideUp().removeClass("expanded"), o.append("<option value='" + i.data + "'>" + r.find("#listName").val() + "</option>"), o.val(i.data), t(); var a = r.find("#stock-order-items-form").serialize();
                            e.ajax({ url: r.find("#addToList").attr("action"), type: "post", data: a }), r.find("#createList")[0].reset(), refreshListCount() } else e("#listname-field-error").html(i.errorMessage).show() }), l.children("input").removeAttr("disabled"), l.children("a").show(), n.find(".csv").slideDown(), s.slideDown(), s.find("a.add-to-list").removeClass("active") } n.find(".form-idle").removeClass("idling") }) }, initRecurringOrderStartDateInput: function() { this.ui.recurringOrderStartDateInput.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, minDate: 0, beforeShow: t.bind(function(e, t) { t.dpDiv.on("click", this.onDatepickerCalendarClick) }, this), onClose: t.bind(function(e, t) { t.dpDiv.off("click", this.onDatepickerCalendarClick) }, this) }) }, onDatepickerCalendarClick: function(e) { e.stopPropagation() }, onCreateNewListLinkClick: function() { this.ui.chooseList.slideUp(), this.ui.createList.slideDown(), this.ui.createList.addClass("expanded") }, onCreateNewListSubmitLinkClick: function() { "yes" == this.ui.isRecurringDropdown.val() && this.ui.recurringOptionsContainer.slideDown("fast") }, onIsRecurringDropdownChange: function() { "yes" == this.ui.isRecurringDropdown.val() ? this.ui.recurringOptionsContainer.slideDown("slow") : "no" == this.ui.isRecurringDropdown.val() && this.ui.recurringOptionsContainer.slideUp("slow") }, onStockOrderAddLinkClick: function() { this.stockOrderAdd() }, onAddCreateQuoteLinkClick: function() { this.loadingSpinnerView.showSpinner(); var t = this.ui.stockOrderItemsTable.find('tr[id*="product_"]');
            t.each(function(t, i) { var a = e(i),
                    r = a.find('input[name="product"]').val(),
                    o = a.find('input[name="quantity"]').val();
                e.ajax({ url: "/retail-quote/" + r + "/" + o, type: "GET", success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), loadingSpinnerView.hideSpinner() } }) }), modalOpen("retail-quote", "retail-quote-modal") }, onAddToOrderLinkClick: function() { this.loadingSpinnerView.showSpinner(), this.ui.stockOrderItemsForm.submit() }, validateBulkStockUpload: function() { var e = this.ui.csvTextArea.val().trim().split("\n"),
                i = !t.any(e, function(e) { var t = e.split("	"); return e.length > 0 && 2 !== t.length || "" === t[0].trim() || "" === t[1].trim() }); return i ? this.hideBulkValidationError() : this.showBulkValidationError(), i }, showBulkValidationError: function() { this.ui.stockOrderBulkUploadValidation.show(), this.ui.csvTextArea.addClass("input-error") }, hideBulkValidationError: function() { this.ui.stockOrderBulkUploadValidation.hide(), this.ui.csvTextArea.removeClass("input-error") }, onAddBulkStockLinkClick: function() { var i = this; if (this.validateBulkStockUpload()) { var a = parseInt(this.ui.maxQuantity.val()),
                    r = this.ui.csvTextArea.val().trim().split("\n"),
                    o = t.filter(r, function(e) { var t = e.split("	"),
                            i = parseInt(t[1].trim()); return i > a }); if (o.length > 0) { e("#overlimit-check-modal-warn-quantity").html(a); var n = e("#overlimit-check-modal-item-confirm"),
                        s = e("#overlimit-check-modal-item-cancel");
                    s.off("click"), n.off("click"), n.on("click", function() { var e = i.getProductNumbersString();
                        i.bulkStockOrderAdd(e), modalClose("overlimit-check-modal") }), s.on("click", function() { modalClose("overlimit-check-modal") }), modalOpen("generic-modal", "overlimit-check-modal") } else { var l = this.getProductNumbersString();
                    this.bulkStockOrderAdd(l) } } }, isRecurringStarteDateExists: function() { var e = r.getSharedInstance(),
                t = this.ui.isRecurringDropdown,
                i = ""; return t && "yes" === t.val() && (i = this.ui.recurringOrderStartDateInput.val(), "" === i || null == i || 0 == i.length) ? (this.ui.startDateError.html(e.get("startDateEmptyMessage")).show(), !1) : (this.ui.startDateError.html(e.get("startDateEmptyMessage")).hide(), !0) }, getProductNumbersString: function() { this.bulkAddProductQuantityMap = {}; var e = this.ui.csvTextArea.val().split("\n"),
                i = []; return t.each(e, function(e) { var t = e.split(/\s+/),
                    a = t[0],
                    r = t[1];
                i.push(a), this.bulkAddProductQuantityMap[a] = r }, this), i.join(":") }, showTextArea: function() { this.ui.stockFooter.hide(), this.ui.hr.hide(), this.ui.toggleButton.addClass("active"), this.ui.csvMore.hide(), this.ui.csvLess.show(), this.ui.csvDiv.addClass("expanded"), this.ui.csvPaste.slideDown() }, hideTextArea: function() { this.ui.toggleButton.removeClass("active"), this.ui.csvLess.hide(), this.ui.csvMore.show(), this.ui.csvDiv.removeClass("expanded"), this.ui.csvPaste.slideUp(), this.hideBulkValidationError(), this.ui.stockFooter.fadeIn("fast"), this.ui.hr.fadeIn("fast") }, onToggleButtonClick: function() { var e = this.ui.toggleButton;
            e.hasClass("active") ? e.hasClass("active") && this.hideTextArea() : this.showTextArea() }, stockOrderAdd: function() { e("#stockOrderSupplierNumberValidation").hide(), e("#stockOrderQuantityValidation").hide(), e("#stock-order-supp-no").removeClass("input-error"), e("#stock-order-qty").removeClass("input-error"); var i = e("#stock-order-supp-no").val(),
                a = e("#stock-order-qty").val(),
                r = !1; if ((null === i || "" === i || i.length < 4 || i == e("#supplierLabelTextHolder").val()) && (r = !0, e("#stockOrderSupplierNumberValidation").show(), e("#stock-order-supp-no").addClass("input-error")), (null === a || isNaN(a) || "" === a) && (r = !0, e("#stockOrderQuantityValidation").show(), e("#stock-order-qty").addClass("input-error")), !r) { this.loadingSpinnerView.showSpinner(); { var o = "/stockOrder/",
                        n = o + "add/" + i;
                    e.get(n, t.bind(function(e) { this.stockOrderHandleResults(e, !1) }, this)) } } }, bulkStockOrderAdd: function(i) { e("#stockOrderSupplierNumberValidation").hide(), e("#stockOrderQuantityValidation").hide(), e("#stock-order-supp-no").removeClass("input-error"), e("#stock-order-qty").removeClass("input-error"); var a = (e("#stock-order-qty").val(), !1); if ((null === i || "" === i || i.length < 4 || i == e("#supplierLabelTextHolder").val()) && (a = !0, e("#stockOrderSupplierNumberValidation").show(), e("#stock-order-supp-no").addClass("input-error")), !a) { var r = "/stockOrder/",
                    o = r + "addBulk?searchTerm=" + i;
                e.get(o, t.bind(function(e) { this.stockOrderHandleBulkResults(e) }, this)) } }, stockOrderHandleResults: function(i, a) { var r, o, n = this,
                s = Number(e("#stock-order-qty").val()),
                l = e("#stock-order-supp-no").val(),
                d = e("#partNumberKey").val(),
                c = 0;
            o = a ? i : i.data; for (r in o) c++; var u = e("#stock_order_form").data("quoteallowed") === !0; if (u && c > 0 && (e("#create-quote-link").show(), e(".stock-link-divider").show()), 1 == c) { for (var r in o) { var h = o[r].productNumber,
                        p = o[r].partNumberMap[d],
                        m = (o[r].netPrice, "product_" + h),
                        g = (o[r].retailPrice, o[r].fet); if (m = m.replace(/\./gi, "_"), 0 != e("#" + m).length) { var f = Number(e("#" + m + " .qty input").val()),
                            v = f + s;
                        1 > v ? e("#" + m).remove() : this.stockOrderUpdateRecord(o[r], m, p, v, s) } else s >= 1 && (e("#stock-order-items-templateRow").clone().attr("id", m).show().appendTo("#stock-order-items").find(".deleter").mouseup(t.bind(this.onDeleterClick, this)), this.stockOrderUpdateRecord(o[r], m, p, s, s));
                    this.stockOrderUpdateTotal(h) } e("#stock-order-supp-no").val(""), e("#stock-order-qty").val(""), this.stockOrderShowDefault() } else if (1 > c) { var C;
                C = 5 == i.code ? e(".stock-order-content .stock-order-5 .message").attr("data-message") : e(".stock-order-content .stock-order-4 .message").attr("data-message"); var b = C.replace("SUPPLIER_NUMBER", l);
                e(".stock-order-content .message").text(b), stockOrderShowNoResults(i.code) } else if (c > 1) { e(".duplicate-items").find("tr:gt(1)").remove(); for (var r in o) { var h = o[r].productNumber,
                        p = o[r].partNumberMap[d],
                        w = (o[r].mfgpartNumber, o[r].displayableBrandAndStyle),
                        k = o[r].netPriceLocalized.formattedValue,
                        g = o[r].federalExciseTaxLocalized.formattedValue,
                        y = e("#fetLabel").val(),
                        S = o[r].federalExciseTax,
                        m = "duplicate_product_" + r;
                    m = m.replace(/\./gi, "_"), e("#duplicate-items-templateRow").clone().attr("id", m).show().appendTo(".duplicate-items"), e("#" + m + " a").each(function() { var t = r;
                        e(this).click(function() { var e = new Object;
                            e[t] = o[t], n.stockOrderHandleResults(e, !0) }) }), e("#" + m + " .supplier").html(p + "<br/>" + w), e("#" + m + " .unit-cost").html(S > 0 ? k + "<br/>" + y + "&nbsp;" + g : k), e("#" + m + " .qty").text(s) } this.stockOrderShowMuptipleResults() } else alert("Unexpected results occurred for this request [" + l + "]");
            this.loadingSpinnerView.hideSpinner() }, stockOrderHandleBulkResults: function(i) { var a = (e("#stock-order-supp-no").val(), e("#partNumberKey").val()),
                r = i.data; for (var o in r) { var n = r[o].productNumber,
                    s = r[o].partNumberMap[a],
                    l = "product_" + n,
                    d = r[o].code,
                    c = r[o].supplierNumber,
                    u = 0; if (this.bulkAddProductQuantityMap.hasOwnProperty(d) ? u = Number(this.bulkAddProductQuantityMap[d]) : this.bulkAddProductQuantityMap.hasOwnProperty(c) && (u = Number(this.bulkAddProductQuantityMap[c])), l = l.replace(/\./gi, "_"), 0 != e("#" + l).length) { var h = Number(e("#" + l + " .qty input").val()),
                        p = h + u;
                    1 > p ? e("#" + l).remove() : this.stockOrderUpdateRecord(r[o], l, s, p, u) } else u >= 1 && (e("#stock-order-items-templateRow").clone().attr("id", l).show().appendTo("#stock-order-items").find(".deleter").mouseup(t.bind(this.onDeleterClick, this)), this.stockOrderUpdateRecord(r[o], l, s, u, u));
                this.stockOrderUpdateTotal(n) } e("#stock-order-supp-no").val(""), e("#stock-order-qty").val(""), this.stockOrderShowDefault(), this.hideTextArea(), 5 == i.code ? this.ui.stockOrderBulkUploadMyBrandsMsg.show() : this.ui.stockOrderBulkUploadMyBrandsMsg.hide(), this.ui.csvTextArea.val("") }, stockOrderUpdateRecord: function(t, i, a, r, o) { var n = t.netPrice * r + t.federalExciseTax * r;
            null == a && (a = t.productNumber), e("#" + i + " .supplier span").text(a), e("#" + i + " .supplier input").val(t.productNumber), e("#" + i + " .supplier input").attr("name", "product"), e("#" + i + " .retail-price input").val(t.retailPrice), e("#" + i + " .qty span").text(r), e("#" + i + " .qty input").val(r), e("#" + i + " .qty input").attr("name", "quantity"), e("#" + i + " .deltaQty input").val(o), e("#" + i + " .deltaQty input").attr("name", "deltaQty"), e("#" + i + " #unit-cost").text(t.netPriceLocalized.formattedValue), e("#" + i + " .unit-cost input").val(t.netPrice); var s = e("#fetLabel").val();
            t.federalExciseTaxLocalized.value > 0 && e("#" + i + " #fet").text(s + " " + t.federalExciseTaxLocalized.formattedValue), e("#" + i + " .fet-cost input").val(t.federalExciseTax), this.formatCurrency(n, e("#" + i + " .line-total span")), e("#" + i + " .line-total input").val(n) }, stockOrderUpdateTotal: function() { var t = 0,
                i = "",
                a = !1;
            e("#stock-order-items tr").each(function() { var r = e(this).find(".unit-cost input").val(),
                    o = e(this).find(".qty input").val(),
                    n = e(this).find(".fet-cost input").val();
                n || (n = 0), r && o && n && (t += r * o + n * o), i = i + e(this).find(".supplier input").val() + " ", a || (a = e.isNumeric(e(this).find(".retail-price input").val())) }), a ? (e("#create-quote-link").show(), e(".stock-link-divider").show()) : (e("#create-quote-link").hide(), e(".stock-link-divider").hide()), this.formatCurrency(t, e("#subtotal")) }, stockOrderShowDefault: function() { e("#stock-order-supp-no").focus(), e(".stock-order-1").show(), e(".stock-order-2").hide(), e(".stock-order-3").hide(), e(".stock-order-4").hide(), e(".stock-order-5").hide() }, stockOrderShowMuptipleResults: function() { e(".stock-order-1").hide(), e(".stock-order-2").hide(), e(".stock-order-3").show(), e(".stock-order-4").hide(), e(".stock-order-5").hide() }, onDeleterClick: function(t) { var i = e(t.target);
            i.closest("tr").remove(), this.stockOrderUpdateTotal() }, formatCurrency: function(t, i) { e.get("/priceData/" + t, function(e) { i.text(e.formattedValue) }) } }) }), define("GlobalSearchHeaderView", ["marionette", "LoadingSpinnerView", "TextboxBehavior"], function(e, t, i) {
    return e.ItemView.extend({
        el: ".global-search-component",
        ui: { liteGlobalSearchButton: "#lite-global-search-button", liteGlobalSearchInput: "#lite-global-search-input", liteGlobalSearchForm: "#lite-global-search-form", globalSearchButton: "#global-search-button", globalSearchInput: "#global-search-input", globalSearchForm: "#global-search-form", keywordAccordion: "#keyword-header", advancedSearchLabel: "#advanced-search-label", advancedSearchActive: "#advanced-search-active", showAdvancedSearchSpan: "#show-advanced-search-span", hideAdvancedSearchSpan: "#hide-advanced-search-span", advancedSearchList: "#advanced-search-list" },
        events: { "keypress @ui.liteGlobalSearchInput": "onLiteGlobalSearchInputKeypress", "keyup @ui.liteGlobalSearchInput": "onLiteGlobalSearchInputKeyup", "mouseover @ui.liteGlobalSearchButton": "onLiteGlobalSearchButtonMouseover", "click @ui.liteGlobalSearchButton": "onLiteGlobalSearchButtonClick", "keypress @ui.globalSearchInput": "onGlobalSearchInputKeypress", "keyup @ui.globalSearchInput": "onGlobalSearchInputKeyup", "mouseover @ui.globalSearchButton": "onGlobalSearchButtonMouseover", "click @ui.globalSearchButton": "onGlobalSearchButtonClick", "click @ui.keywordAccordion": "onKeyWordSearchAccordionClick", "click @ui.advancedSearchLabel": "toggleAdvancedSearch" },
        minimumSearchCharacters: 4,
        searchInputTextboxBehavior: null,
        loadingSpinnerView: t.getSharedInstance(),
        onRender: function() { this.initSearchInputTextboxBehavior(), this.initLiteGlobalSearchButton(), this.initGlobalSearchButton(), this.restoreKeyWordSearchAccordionStatus() },
        initSearchInputTextboxBehavior: function() { this.ui.liteGlobalSearchInput.val(""), this.ui.globalSearchInput.val(""), this.searchInputTextboxBehavior = new i, this.searchInputTextboxBehavior.init({ textbox: this.ui.liteGlobalSearchInput, textbox: this.ui.globalSearchInput }) },
        initLiteGlobalSearchButton: function() { var e = this.$el.find("#key").data("search-error-tool-tip-text");
            this.ui.liteGlobalSearchButton.tooltip({ content: e, items: "#lite-global-search-button", tooltipClass: "global-search-tooltip2" }) },
        initGlobalSearchButton: function() { var e = this.$el.find("#key").data("search-error-tool-tip-text");
            this.ui.globalSearchButton.tooltip({ content: e, items: "#global-search-button", tooltipClass: "global-search-tooltip" }) },
        onLiteGlobalSearchInputKeypress: function(e) { 13 == e.which && (sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab"), e.preventDefault(), this.submitLiteSearch()) },
        onGlobalSearchInputKeypress: function(e) { 13 == e.which && (sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab"), e.preventDefault(), this.submitSearch()) },
        onLiteGlobalSearchInputKeyup: function() { this.toggleLiteSearchButtonTooltip() },
        onGlobalSearchInputKeyup: function() { this.toggleSearchButtonTooltip() },
        onLiteGlobalSearchButtonMouseover: function() { this.toggleLiteSearchButtonTooltip() },
        onGlobalSearchButtonMouseover: function() { this.toggleSearchButtonTooltip() },
        toggleLiteSearchButtonTooltip: function() { this.ui.liteGlobalSearchButton.tooltip(this.isLiteSearchInputValid() ? { disabled: !0 } : { disabled: !1 }) },
        toggleSearchButtonTooltip: function() { this.ui.globalSearchButton.tooltip(this.isSearchInputValid() ? { disabled: !0 } : { disabled: !1 }) },
        toggleAdvancedSearch: function() { this.ui.advancedSearchLabel.hasClass("more") ? (this.ui.advancedSearchLabel.removeClass("more"), this.ui.advancedSearchLabel.addClass("less"), this.ui.advancedSearchActive.val("false")) : (this.ui.advancedSearchLabel.removeClass("less"), this.ui.advancedSearchLabel.addClass("more"), this.ui.advancedSearchActive.val("true")), this.ui.showAdvancedSearchSpan.toggle(), this.ui.hideAdvancedSearchSpan.toggle(), this.ui.advancedSearchList.toggle() },
        onKeyWordSearchAccordionClick: function() {
            $("#keyword-header").hasClass("collapse") ? sessionStorage.setItem("keywordAccordionStatus", "off") : sessionStorage.setItem("keywordAccordionStatus", "on")
        },
        restoreKeyWordSearchAccordionStatus: function() { var e = sessionStorage.getItem("keywordAccordionStatus"); "off" == e && $("#key").hide() },
        isLiteSearchInputValid: function() { var e = this.ui.liteGlobalSearchInput.val().replace(/[\s\*]/g, "").length >= this.minimumSearchCharacters,
                t = this.ui.liteGlobalSearchInput.val() != this.ui.liteGlobalSearchInput.prop("title"); return e && t },
        isSearchInputValid: function() { var e = this.ui.globalSearchInput.val().replace(/[\s\*]/g, "").length >= this.minimumSearchCharacters,
                t = this.ui.globalSearchInput.val() != this.ui.globalSearchInput.prop("title"); return e && t },
        onLiteGlobalSearchButtonClick: function() { sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab"), this.resetCategorySelection(), this.submitLiteSearch() },
        onGlobalSearchButtonClick: function() { sessionStorage.setItem("selectedPage", 1), sessionStorage.setItem("selectedTabIndex", 0), sessionStorage.removeItem("selectedTab"), this.resetCategorySelection(), this.submitSearch() },
        submitLiteSearch: function() { this.isLiteSearchInputValid() ? (this.loadingSpinnerView.showSpinner(), this.ui.liteGlobalSearchForm.submit()) : (this.ui.liteGlobalSearchButton.tooltip("open"), event.preventDefault()) },
        submitSearch: function() { this.isSearchInputValid() ? (this.loadingSpinnerView.showSpinner(), this.ui.globalSearchForm.submit()) : this.ui.globalSearchButton.tooltip("open") },
        resetCategorySelection: function() { $.ajax({ url: "/category/reset-category-selection", type: "get" }).done(function() {}) }
    })
}), define("RefineSearchLeftNavigationView", ["underscore", "marionette", "LoadingSpinnerView"], function(e, t, i) { return t.ItemView.extend({ LoadingSpinnerView: null, loadingSpinnerView: null, el: "#left_nav", ui: { refineSearchCheckbox: ".radiodiv input[type=checkbox]", refineMentFormButton: "#refineMentForm-Button" }, events: { "change @ui.refineSearchCheckbox": "onRefineSearchCheckboxChange", "click @ui.refineMentFormButton": "showSpinner" }, initialize: function(e) { e = e || {}, this.LoadingSpinnerView = e.LoadingSpinnerView || i, this.loadingSpinnerView = e.loadingSpinnerView || this.LoadingSpinnerView.getSharedInstance() }, onRefineSearchCheckboxChange: function(e) { var t = e.target.id.split("-"),
                i = t[0];
            $("#" + i + "-value").val(0 == $("#" + i + "-check").prop("checked") ? i : "") }, showSpinner: function() { this.loadingSpinnerView.showSpinner() }, hasRefinementsSelected: function() { var t = !1; return this.ui.refineSearchCheckbox.each(e.bind(function(e, i) { return $(i).is(":checked") ? (t = !0, !1) : void 0 }, this)), t }, getSelectedRefinementNames: function() { var t = []; return this.getSelectedRefinementCheckboxes().each(e.bind(function(e, i) { t.push($(i).val()) }, this)), t.join(":") }, getSelectedRefinementCheckboxes: function() { return this.ui.refineSearchCheckbox.filter(e.bind(function(e) { return this.ui.refineSearchCheckbox.eq(e).is(":checked") }, this)) } }) }), define("AddToListModalView", ["underscore", "marionette", "ListModalBehavior"], function(e, t, i) { return t.ItemView.extend({ listModalBehavior: null, listsData: null, ui: { addToListForm: "#addToListProduct-form", listsDropdown: "select[name=listCode]" }, events: { "click .add_to_list_confirm": "onAddToListConfirmLinkClick", "click .create_new_list_link": "onCreateNewListLinkClick" }, initListModalBehavior: function() { this.listModalBehavior = new i, this.listModalBehavior.set$listModal(this.$el), this.listModalBehavior.init() }, populateListOptions: function() { this.ui.listsDropdown.empty(), e.each(this.listsData, function(e, t) { var i = '<option value="' + t + '">' + e + "</option>";
                this.ui.listsDropdown.append(i) }, this) }, onAddToListConfirmLinkClick: function() { this.trigger(this.constructor.Event_addToListConfirmLinkClick, { listCode: this.ui.listsDropdown.find("option:selected").val() }) }, onCreateNewListLinkClick: function() { this.closeModal(), this.trigger(this.constructor.Event_createNewListLinkClick) }, closeModal: function() { this.listModalBehavior.closeModal() }, openModal: function() { this.populateListOptions(), this.listModalBehavior.openModal() } }, { Event_addToListConfirmLinkClick: "add:to:list:confirm:link:click", Event_createNewListLinkClick: "create:new:list:link:click" }) }), define("CreateNewListModalView", ["underscore", "jquery", "marionette", "EditListModalBehavior"], function(e, t, i, a) { return i.ItemView.extend({ editListModalBehavior: null, ui: { createListSuccessLabel: ".create-list-success" }, onRender: function() { this.initEditListModalBehavior(), this.$el.on(a.Event_FormDidSuccessfullyValidateOnSubmit, e.bind(this.onFormDidSuccessfullyValidate, this)), t("#print-icon-div").hide() }, initEditListModalBehavior: function() { this.editListModalBehavior = new a, this.editListModalBehavior.set$listModal(this.$el), this.editListModalBehavior.init() }, onFormDidSuccessfullyValidate: function(i, a) { var r = function(i) { 0 == i.code ? (this.editListModalBehavior.invalidNameError(!1), this.ui.createListSuccessLabel.fadeIn("fast", e.bind(this.showSuccessfulListCreation, this)), this.trigger(this.constructor.Event_newListSuccessfullyCreated, { listCode: i.data }), t("#mylist-tab").load(location.href + " #mylist-tab>*", "")) : 1 == i.code && this.editListModalBehavior.invalidNameError(!0, i.errorMessage) };
            t.ajax({ url: "/lists/createList", type: "post", data: a.formData, async: !1, success: e.bind(r, this), error: function(e, t) { console.log(t) } }) }, showSuccessfulListCreation: function() { setTimeout(e.bind(function() { this.ui.createListSuccessLabel.fadeOut("fast"), this.editListModalBehavior.closeModal() }, this), 2e3) }, openModal: function() { this.editListModalBehavior.openModal() } }, { Event_newListSuccessfullyCreated: "new:list:successfully:created" }) }), define("AccountUserCreateStepTwoView", ["jquery", "marionette"], function(e, t) { return t.ItemView.extend({ el: "#content", ui: { noDirectOrder: "#no3", yesDirectOrder: "#yes3", submitDirectOrders: "#submitDirectOrders", approveOrders: "#approveOrders", noApproveOrder: "#no7", yesApproveOrder: "#yes7", approveOrdersDiv: "#approve-orders-row .toggle-element .preference-toggle" }, events: { "click @ui.noDirectOrder": "onNoDirectOrderLinkClicked", "click @ui.yesDirectOrder": "onYesDirectOrderLinkClicked" }, onRender: function() { this.initApproveOrderToggleButtonBehavior() }, initApproveOrderToggleButtonBehavior: function() { this.checkSubmitOrderToggleStatus() }, checkSubmitOrderToggleStatus: function() { var e = this.ui.submitDirectOrders.val(); "No" == e && (this.ui.approveOrdersDiv.children().attr("disabled", "disabled"), this.ui.approveOrdersDiv.children().removeClass("active"), this.ui.approveOrdersDiv.children().css("cursor", "default"), this.ui.noApproveOrder.removeAttr("onclick"), this.ui.yesApproveOrder.removeAttr("onclick"), this.ui.approveOrders.val("No")) }, onNoDirectOrderLinkClicked: function() { this.checkSubmitOrderToggleStatus() }, onYesDirectOrderLinkClicked: function() { var e = this.ui.submitDirectOrders.val(); "Yes" == e && this.ui.approveOrdersDiv.children().is(":disabled") && (this.ui.approveOrdersDiv.children().removeAttr("disabled"), this.ui.yesApproveOrder.addClass("active"), this.ui.approveOrders.val("Yes"), this.ui.noApproveOrder.attr("onclick", "rqToggleFieldWithInput('no7', 'approveOrders', 'No')"), this.ui.yesApproveOrder.attr("onclick", "rqToggleFieldWithInput('yes7', 'approveOrders', 'Yes')"), this.ui.approveOrdersDiv.children().css("cursor", "pointer")) } }) }), define("AccountOrderApprovalsView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#content", pendingOrderColEnums: ["SUBMITTED_BY", "SUBMITTED_DATE", "ORDER_TOTAL", "STATUS"], ui: { ordersTable: "table#approvals", pagerLink: "#pager a" }, events: { "click .expand-comments-link": "onExpandCommentsLinkClick", "click .collapse-comments-link": "onCollapseCommentsLinkClick", "click #pager a": "onAppendPagerSortInfo" }, onRender: function() { this.initTableSorter() }, initTableSorter: function() { var i = this,
                a = this.ui.ordersTable.data("sort-column"),
                r = this.ui.ordersTable.data("sort-direction");
            this.ui.ordersTable.tablesorter({ sortList: [
                    [this.getColumnIndexFromParameterName(a), r]
                ], headers: t.extend(this.getDisabledColumnsConfig(), { 2: { sorter: "money" } }), cssAsc: "header-sort-up", cssDesc: "header-sort-down" }).bind("sortEnd", function(t) { table = t.target, currentSort = table.config.sortList, columnNum = currentSort[0][0], sortDirection = currentSort[0][1]; var a = window.location.href; - 1 == a.indexOf("offset") && (a += "/offset/0"), e.each(i.pendingOrderColEnums, function() { a = a.indexOf(this) > -1 ? a.substring(0, a.indexOf(this) - 1) : a }), a += "/" + i.getColumnNameFromIndex(columnNum) + "/" + sortDirection, location.href = a }), e.tablesorter.addParser({ id: "money", is: function() { return !1 }, format: function(e) { var t = e.replace("$", "").replace(",", ""); return parseFloat(t) }, type: "numeric" }) }, getColumnIndexFromParameterName: function(t) { var i = this.ui.ordersTable.find("th").length,
                a = e.inArray(t, this.pendingOrderColEnums); return 0 > a ? 0 : 4 == i && 3 == a ? 2 : a }, getColumnNameFromIndex: function(e) { var t = this.ui.ordersTable.find("th").length; return 4 == t && 2 == e ? this.pendingOrderColEnums[3] : this.pendingOrderColEnums[e] }, getDisabledColumnsConfig: function() { var e = {}; return this.ui.ordersTable.find("th").each(t.bind(function(t, i) { var a = this.$(i).data("disable-sort") === !0;
                a && (e[t] = { sorter: !1 }) }, this)), e }, onExpandCommentsLinkClick: function(t) { var i = e(t.target).closest(".expand-comments-container");
            i.hide(), i.siblings("td.collapse-comments-container").show() }, onCollapseCommentsLinkClick: function(t) { var i = e(t.target).closest(".collapse-comments-container");
            i.hide(), i.siblings("td.expand-comments-container").show() }, onAppendPagerSortInfo: function(t) { var i = e(t.target).attr("href"),
                a = this.ui.ordersTable[0]; return currentSort = a.config.sortList, columnNum = currentSort[0][0], sortDirection = currentSort[0][1], i += "/" + this.getColumnNameFromIndex(columnNum) + "/" + sortDirection, location.href = i, !1 } }) }), define("AccountInfoHeaderView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#account-info-header", locationData: null, loadingSpinnerView: a.getSharedInstance(), ui: { locationHeader: ".location-menu , ul.sub-tophead i.caret-left", filterLocationInput: "#filterLocation", cancelButton: ".location-cancel-btn", submitButton: "#selectLocationSubmitBtn", addressHeader: ".address", addressMenu: ".address-detail", accountHeader: ".account-menu", languageChange: ".lang-caret, .language-change-dropdown", languageList: ".languageList", accountMenu: ".account-nav-menu", phoneHeader: ".phone-detail", phoneMenu: ".phone-online", locationLink: ".location-menu-content ul li", locationMenu: ".location-nav-menu", locationListMenu: "#locationMenu", locationList: ".location-list", noLocationFoundError: "#no-location-found", selectLocationForm: "#selectLocationForm", myWarrantyLinkClick: ".myWarrantyLinkClick", cutOffTime: "#cutOffTime", timeZoneOffset: "#timeZoneOffset", cartEntryCount: "#cartEntryCount" }, events: { "keyup @ui.filterLocationInput": "filterLocations", "click @ui.cancelButton": "cancelClick", "click @ui.submitButton": "submitClick", "click @ui.locationHeader": "showLocationMenu", "click @ui.addressHeader": "showAddressMenu", "click @ui.accountHeader": "showAccountMenu", "click @ui.languageChange": "languageChange", "click @ui.phoneHeader": "showPhoneMenu", "click @ui.locationLink": "clickLocation", "click @ui.myWarrantyLinkClick": "myWarrantyLinkClick" }, onRender: function() { var t = this;
            e("html").click(function() { e(".address-detail, .phone-online, .account-nav-menu, ul.sub-nav, ul.subinner-nav, .languageList").hide() }); var i = this.ui.cutOffTime.val(),
                a = this.ui.timeZoneOffset.val(),
                r = parseInt(this.ui.cartEntryCount.val());
            r > 0 && a && i && (this.changeCartColor(), setInterval(function() { t.changeCartColor() }, 6e4)) }, changeCartColor: function() { var t = this,
                i = getCurrentDate(this.ui.timeZoneOffset.val()),
                a = new Date(this.ui.cutOffTime.val()),
                r = a - i,
                o = r / 36e5,
                n = Math.max(1, Math.floor(r / 1e3));
            1 >= n ? (e("span.cart-number").removeClass("cart-number-red"), e("span.cart-number").addClass("cart-number-blue"), e.ajax({ url: "/ajax/get/fetchNextCutOffTime", type: "get" }).done(function(e, i) { "success" === i && -1 === JSON.stringify(e).indexOf("html") ? (t.ui.cutOffTime.val(e.cutOffTime), t.ui.timeZoneOffset.val(e.timeZoneOffset)) : (window.location.href = "/login", location.reload()) })) : 1 > o ? (e("span.cart-number").removeClass("cart-number-blue"), e("span.cart-number").addClass("cart-number-red")) : o >= 1 && (e("span.cart-number").removeClass("cart-number-red"), e("span.cart-number").addClass("cart-number-blue")) }, myWarrantyLinkClick: function() { sessionStorage.removeItem("myWarrantyArray"), sessionStorage.removeItem("myWarrantySelectedPage") }, showLocationMenu: function() { this.ui.locationMenu.is(":hidden") ? (0 === e("#selectLocationForm").length && (this.getListOfLocations(), e.cookie("locationSelected") && e("#" + e.cookie("locationSelected")).css("background", "#606060")), this.ui.locationMenu.show()) : this.ui.locationMenu.hide() }, getListOfLocations: function() { var t = this;
            e.ajax({ url: "/my-account/getLocationList", type: "get" }).done(function(e) { t.ui.locationListMenu.html(e) }) }, filterLocations: function() { var t = this,
                i = this.ui.filterLocationInput.val().toLowerCase(),
                a = t.ui.locationListMenu.find("li"),
                r = a.length,
                o = 0;
            a.each(function() { var a = e(this).text().toLowerCase();
                a.indexOf(i) >= 0 ? e(this).show() : (o++, e(this).hide()), r == o ? t.ui.noLocationFoundError.show() : t.ui.noLocationFoundError.hide() }) }, resetLocations: function() { var t = this,
                i = t.ui.locationListMenu.find("li");
            i.each(function() { e(this).show() }), t.ui.noLocationFoundError.hide() }, cancelClick: function(e) { this.ui.filterLocationInput.val(""), this.resetLocations(), this.ui.locationMenu.hide(), e.stopPropagation() }, submitClick: function() { this.locationData && (this.loadingSpinnerView.showSpinner(), e("#selectLocationForm").attr("action", "/login/make_store_selection?select-location-hidden=" + this.locationData), e("#selectLocationForm").submit()) }, showAddressMenu: function(t) { this.ui.addressMenu.is(":hidden") ? this.ui.addressMenu.show() : this.ui.addressMenu.hide(), this.ui.locationMenu.add(this.ui.phoneMenu).add(this.ui.accountMenu).add(this.ui.languageList).hide(), e("ul.sub-nav, ul.subinner-nav, .languageList").hide(), t.stopPropagation() }, showAccountMenu: function(t) { this.ui.accountMenu.is(":hidden") ? this.ui.accountMenu.show() : this.ui.accountMenu.hide(), this.ui.locationMenu.add(this.ui.phoneMenu).add(this.ui.addressMenu).hide(), e("ul.sub-nav, ul.subinner-nav, .languageList").hide(), t.stopPropagation() }, languageChange: function(t) { this.ui.languageList.is(":hidden") ? this.ui.languageList.show() : this.ui.languageList.hide(), this.ui.locationMenu.add(this.ui.phoneMenu).add(this.ui.addressMenu).add(this.ui.accountMenu).hide(), e("ul.sub-nav, ul.subinner-nav").hide(), t.stopPropagation() }, showPhoneMenu: function(t) { this.ui.phoneMenu.is(":hidden") ? this.ui.phoneMenu.show() : this.ui.phoneMenu.hide(), this.ui.locationMenu.add(this.ui.addressMenu).add(this.ui.accountMenu).hide(), e("ul.sub-nav, ul.subinner-nav,.languageList").hide(), t.stopPropagation() }, clickLocation: function(t) { e("#" + e.cookie("locationSelected")).css("background", ""), this.locationData = t.target.id, e.cookie("locationSelected", this.locationData), e("#" + this.locationData).css("background", "#606060") } }) }), define("AccountInfoHeaderLinkView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#account-info-header-link", isCollapsed: !1, accordionTarget: "", loadingSpinnerView: a.getSharedInstance(), ui: { accountInfoLink: "#punchout-account-info", punchoutAccountMenu: ".accordion_container", accountAccordionHead: ".account-accordion-head", accountAccordionBody: ".account-accordion-body", plusminus: ".plusminus", manageListLabel: "#manageListLbl", manageListButton: "#manageListBtn", manageQuoteLabel: "#manageQuoteLbl", liteStyleFilterLocation: "#liteStyleFilterLocation", locationListMenu: "#liteStyleLocationList", homepageAddListToCart: ".homepage-add-list-to-cart", noLocationFound: "#no-location-found", locationLink: ".location-menu-content ul li", submitButton: "#liteStyleLocationSubmitBtn", myQuotesTable: ".myQuotesTable", closeButton: "#my-account-close" }, events: { "click @ui.accountInfoLink": "showPunchoutAccountMenu", "click @ui.accountAccordionHead": "doSlideup", "keyup @ui.liteStyleFilterLocation": "filterLocations", "click @ui.locationLink": "clickLocation", "click @ui.submitButton": "submitClick", "click @ui.myQuotesTable": "loadQuoteDetail", "click @ui.closeButton": "hideMyAccount", "click @ui.homepageAddListToCart": "onAddListToCartLinkClick" }, onRender: function() { var e = this;
            document.onclick = function(t) { "accordion_container" !== t.target.id && e.ui.punchoutAccountMenu.hide() } }, showPunchoutAccountMenu: function(t) {
            (this.ui.punchoutAccountMenu.is(":hidden") || this.isCollapsed) && (e("ul.nav-tabs li ul.sub-nav, ul.sub-nav li ul.subinner-nav, .languageList").hide(), e("ul.nav-tabs li.button-gap").each(function() { e(this).removeClass("active") }), this.ui.punchoutAccountMenu.show()), t.stopPropagation() }, doSlideup: function(t) { if (this.isCollapsed = !0, this.ui.accountAccordionBody.is(":visible") && (this.ui.accountAccordionBody.slideUp(300), this.ui.plusminus.text("+"), this.isCollapsed = !1), this.ui.accountAccordionBody.is(":visible") && this.accordionTarget === e(t.target).data("name") && !e(t.target).is(".plusminus")) e(t.target).not(".plusminus").toggleClass("maActive"), this.ui.accountAccordionBody.slideUp(300), this.ui.accountAccordionHead.children(".plusminus").text("+");
            else if (this.ui.accountAccordionBody.is(":visible") && this.accordionTarget === e(t.target).parent().data("name")) e(t.target).parent().toggleClass("maActive"), this.ui.accountAccordionBody.slideUp(300), this.ui.accountAccordionHead.children(".plusminus").text("+");
            else { var i = e(t.target).not("#locImg");
                e(".account-accordion-head").not(i).removeClass("maActive"); var a = i.prop("class"); if ("plusminus" == a) { var r = i.parent();
                    r.next(".account-accordion-body").slideDown(300), r.toggleClass("maActive"), i.text("-"), isCollapsed = !0; var o = r.data("name"); "list" === o && this.getMyListsForLitePage(), "quote" === o && this.getQuotesForLitePage(), "returns" === o && this.getReturnHistory(), "location" === o && this.getListOfLocations(), this.accordionTarget = o } else { i.next(".account-accordion-body").slideDown(300), i.children(".plusminus").text("-"), i.not(".plusminus").toggleClass("maActive"), isCollapsed = !0; var o = i.data("name"); "list" === o && this.getMyListsForLitePage(), "quote" === o && this.getQuotesForLitePage(), "returns" === o && this.getReturnHistory(), "location" === o && this.getListOfLocations(), this.accordionTarget = o } } t.stopPropagation() }, getMyListsForLitePage: function() { var t = this;
            e.ajax({ url: "/my-account/getMyLists", type: "get", success: function(i) { e("#punchoutListBody").html(i), e("#manageListBtn").html(t.ui.manageListLabel.val()) }, error: function() { console.log("ERROR" + errorThrown) } }) }, getQuotesForLitePage: function() { var t = this;
            e.ajax({ url: "/my-account/getQuotes", type: "get" }).done(function(i) { e("#punchoutQuoteBody").html(i), e("#manageQuoteBtn").html(t.ui.manageQuoteLabel.val()) }) }, getReturnHistory: function() { e.ajax({ url: "/my-account/order-history/get-returns-history-widget", type: "get" }).done(function(t) { e("#punchoutReturnsBody").html(t) }) }, getListOfLocations: function() { e.ajax({ url: "/my-account/getLocationList", type: "get" }).done(function(t) { e("#liteStyleLocationList").html(t), e.cookie("locationSelected") && e("#" + e.cookie("locationSelected")).css("background", "#606060") }) }, filterLocations: function() { var t = this,
                i = this.ui.liteStyleFilterLocation.val().toLowerCase(),
                a = t.ui.locationListMenu.find("li"),
                r = a.length,
                o = 0;
            a.each(function() { var a = e(this).text().toLowerCase();
                a.indexOf(i) >= 0 ? e(this).show() : (o++, e(this).hide()), r == o ? t.ui.noLocationFound.show() : t.ui.noLocationFound.hide() }) }, clickLocation: function(t) { e("#" + e.cookie("locationSelected")).css("background", ""), this.locationData = t.target.id, e.cookie("locationSelected", this.locationData), e("#" + this.locationData).css("background", "#606060"), t.stopPropagation() }, submitClick: function() { this.locationData && (this.loadingSpinnerView.showSpinner(), e("#selectLocationForm").attr("action", "/login/make_store_selection?select-location-hidden=" + this.locationData), e("#selectLocationForm").submit(), event.stopPropagation()) }, onAddListToCartLinkClick: function(t) { var i = e(t.target).data().productIndex,
                a = e("#homepage-list-form" + i);
            a.submit() }, loadQuoteDetail: function() { this.loadingSpinnerView.showSpinner(), document.location = e(".myQuotesTable").data("href"), event.stopPropagation() }, hideMyAccount: function(t) { e(".accordion_container").hide(), t.stopPropagation() } }) }), define("LanguageSelectView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#language-change-header", locationData: null, loadingSpinnerView: a.getSharedInstance(), ui: { languageChange: "#lang-list", languageList: ".languageList" }, events: { "click @ui.languageChange": "languageChange" }, onRender: function() { e("html").click(function() { e(".languageList").hide() }) }, languageChange: function(t) { this.ui.languageList.is(":hidden") ? (e("ul.nav-tabs li ul.sub-nav, ul.sub-nav li ul.subinner-nav, .accordion_container").hide(), e("ul.nav-tabs li.button-gap").each(function() { e(this).removeClass("active") }), this.ui.languageList.show()) : this.ui.languageList.hide(), t.stopPropagation() } }) }), define("AccountInfoLinkView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#account-info-link-header", locationData: null, loadingSpinnerView: a.getSharedInstance(), ui: { accountHeader: ".account-menu", accountMenu: ".account-nav-menu" }, events: { "click @ui.accountHeader": "showAccountMenu" }, onRender: function() { e("html").click(function() { e(".account-nav-menu").hide() }) }, showAccountMenu: function(e) { this.ui.accountMenu.is(":hidden") ? this.ui.accountMenu.show() : this.ui.accountMenu.hide(), e.stopPropagation() } }) }), define("CartView", ["underscore", "jquery", "marionette", "CommentInputLimiterBehavior", "ListModalMediator", "TextboxBehavior", "CartModel", "LoadingSpinnerView"], function(e, t, i, a, r, o, n, s) {
    return i.ItemView.extend({
        el: "#content",
        model: n.getSharedInstance(),
        listModalMediator: null,
        commentInputLimiterBehavior: null,
        phoneTextBoxBehavior: null,
        phonePartOneTextBoxBehavior: null,
        phonePartTwoTextBoxBehavior: null,
        phonePartThreeTextBoxBehavior: null,
        poTextBoxBehavior: null,
        nameTextBoxBehavior: null,
        loadingSpinnerView: s.getSharedInstance(),
        ui: { $cartForm: "#cartForm", $placeOrderLink: "#place-order-link", $addToListLink: ".add-to-list-link", $cartSelect: ".cartSelect", $rejectBackLink: "#rejectedCart-backlink", $rejectedBackLinkBottom: "#rejectedCart-backlinkbottom", $productRows: ".product-row", removeRejectedProductRowLink: ".product-row .rejected-remove", $recurringOrderLinkCreate: ".recurring-order-link .create", $recurringOrderLinkEdit: ".recurring-order-link .edit", $recurringOrderLinkHide: ".recurring-order-link .hide", $recurringOrderSaveLink: ".recurring-order-save-button .button", $createListFromOrderForm: "#createListFromOrder", listCode: "#listCodeFromOrder", listForm: "#listform", $savingList: "#saving-list", $thankYouPara: "#thankyou-content", $recurringOrderFormContainer: ".recurring-order .form-container", $recurringDisclaimer: ".order-confirmation-container .recurring-order .disclaimer", $recurringOrderForm: "#recurring-order-form", customerInfoSection: ".customer-info", nameInput: "#name", phoneInput: "#phone", commentInput: "#comment", customerPhonePartOneInput: "#customerPhonePartOne", customerPhonePartTwoInput: "#customerPhonePartTwo", customerPhonePartThreeInput: "#customerPhonePartThree", customerPoInput: "#customerPO", consumerEmailInput: "#consumerShipToEmail", commentsHiddenFormInput: "#input_comments_id", orderItemsForm: "#order-items-form", $orderNameTextField: "#order-name", $orderStartDateDatePicker: "#start-date", $orderNameError: "#list-name-required-error", $orderStartDateError: "#start-date-required-error", disablePO: "#disable-po", disableComment: "#disable-comment", clearAllModal: "#clearall-modal", approveOrderLink: ".js-approve-order-link", deleteOrderLink: ".delete-order-link", submitOrderForApprovalLink: ".js-submit-order-for-approval-link", resubmitOrderForApprovalLink: ".js-resubmit-order-for-approval-link", rejectOrderLink: ".reject-order-link", cancelOrderLink: ".cancel-order-link", goBackToAllApprovalsLink: ".go-back-to-all-approvals-link", shippingAgreementErrorLabel: "#shippingAgreementError", backorderAgreementErrorLabel: "#backorderAgreementError", discontinuedReplacedAgreementErrorLabel: "#discontinuedReplacedAgreementError", returnDisclaimerAgreementErrorLabel: "#returnDisclaimerAgreementError", shippingChargeAgreementCheckbox: "#shippingChargeAgreement", backorderAgreementCheckbox: "#backorderAgreement", discontinuedReplacedAgreementCheckbox: "#discontinuedReplacedAgreement", returnDisclaimerAgreementCheckbox: "#returnDisclaimerAgreement", inputQuantity: ".inputQuantity", showExpeditedFreight: ".show-more-freight-options" },
        events: { "click @ui.$addToListLink": "onAddToListLinkClicked", "change @ui.$cartSelect": "onDropDownSelection", "change @ui.customerPoInput, @ui.commentsHiddenFormInput": "onUpdateFields", "click @ui.$placeOrderLink": "onPlaceOrderLinkClick", "click @ui.$recurringOrderLinkCreate": "onRecurringOrderLinkCreateClick", "click @ui.$recurringOrderLinkHide": "onRecurringOrderLinkHideClick", "click @ui.$recurringOrderLinkEdit": "onRecurringOrderLinkEditClick", "click @ui.$recurringOrderSaveLink": "onRecurringOrderSaveLinkClick", "click @ui.removeRejectedProductRowLink": "onRemoveRejectedProductRowLinkClick", "click @ui.approveOrderLink": "onApproveOrderLinkClick", "click @ui.deleteOrderLink": "onDeleteOrderLinkClick", "click @ui.submitOrderForApprovalLink": "onSubmitOrderForApprovalLinkClick", "click @ui.resubmitOrderForApprovalLink": "onResubmitOrderForApprovalClick", "click @ui.rejectOrderLink": "onRejectOrderLinkClick", "click @ui.cancelOrderLink": "onCancelOrderLinkClick", "click @ui.goBackToAllApprovalsLink": "onGoBackToAllApprovalsLinkClick", "change @ui.inputQuantity": "changeQuantity", "change @ui.showExpeditedFreight": "changeShowExpeditedFreight", "focus @ui.customerPhonePartTwoInput": "onFocusPhonePartTwo", "focus @ui.customerPhonePartThreeInput": "onFocusPhonePartThree", "blur @ui.customerPhonePartOneInput": "onBlurPhonePartOne", "blur @ui.customerPhonePartTwoInput": "onBlurPhonePartTwo", "blur @ui.customerPhonePartThreeInput": "onBlurPhonePartThree" },
        onRender: function() { this.initPhoneTextBoxBehavior(), this.initListModalMediator(), this.initCommentInputLimiterBehavior(), this.initPoTextBoxBehavior(), this.initNameTextBoxBehavior(), this.initRecurringOrderDatePicker(), this.ui.clearAllModal.find("#clear-all").click(e.bind(this.onClearAllModalConfirmLinkClick, this)) },
        initPhoneTextBoxBehavior: function() { this.phonePartOneTextBoxBehavior = new o, this.phonePartOneTextBoxBehavior.init({ textbox: this.$el.find("#customerPhonePartOne").inputmask("mask", { mask: "999" }), formatPhone: !0 }), this.phonePartTwoTextBoxBehavior = new o, this.phonePartTwoTextBoxBehavior.init({ textbox: this.$el.find("#customerPhonePartTwo").inputmask("mask", { mask: "999" }), formatPhone: !0 }), this.phonePartThreeTextBoxBehavior = new o, this.phonePartThreeTextBoxBehavior.init({ textbox: this.$el.find("#customerPhonePartThree").inputmask("mask", { mask: "9999" }), formatPhone: !0 }) },
        initListModalMediator: function() { this.listModalMediator = new r({ $eventDelegate: this.$el, getProductsAndQtyFunction: this.getProductsAndQty, $addToListModal: this.$el.find("#add-to-list-id"), $createNewListModal: this.$el.find("#create-list-modal") }) },
        getProductsAndQty: function(e) { var t = e.data("quantity"); return { product: e.data("product-number"), quantity: t } },
        initCommentInputLimiterBehavior: function() { this.commentInputLimiterBehavior = new a, this.commentInputLimiterBehavior.set$eventDelegate(this.$el), this.commentInputLimiterBehavior.init() },
        initPoTextBoxBehavior: function() { this.poTextBoxBehavior = new o, this.poTextBoxBehavior.init({ textbox: this.$el.find("#customerName") }) },
        initNameTextBoxBehavior: function() { this.nameTextBoxBehavior = new o, this.nameTextBoxBehavior.init({ textbox: this.$el.find("#customerPO") }) },
        initRecurringOrderDatePicker: function() { t("#start-date").datepicker({ showOtherMonths: !0, selectOtherMonths: !0, minDate: 0 }) },
        onAddToListLinkClicked: function(e) { var t = this.$(e.target),
                i = t.data("product-number"),
                a = document.getElementById("pageName").value,
                r = (t.data("manufacturer"), t.data("quantity"));
            window.location.href = "/lists?productid=" + i + "&pageName=" + a + "&tab=addtolist&qty=" + r },
        onDropDownSelection: function() { this.loadingSpinnerView.showSpinner(), this.ui.$cartForm.attr("action", "/cart/update"), this.submitCartForm() },
        onPlaceOrderLinkClick: function() { this.updateHiddenFormInput(), this.ui.$cartForm.attr("action", "cart/submit"), this.validateCart() ? (this.ui.$placeOrderLink.addClass("button-disabled"), this.loadingSpinnerView.showSpinner(), this.submitCartForm()) : this.ui.$placeOrderLink.removeClass("button-disabled") },
        onRecurringOrderLinkCreateClick: function() { this.hideRecurringLink(), this.showRecurringForm() },
        onRecurringOrderLinkHideClick: function() { this.changeRecurringLink(), this.hideRecurringForm() },
        onRecurringOrderLinkEditClick: function() { this.hideRecurringLink(), this.showRecurringForm() },
        onRecurringOrderSaveLinkClick: function() { this.validateForm() && (this.ui.listForm.hide(), this.ui.$savingList.show(), this.performSave()) },
        hideRecurringLink: function() { this.ui.$recurringOrderLinkCreate.removeClass("enabled"), this.ui.$recurringOrderLinkEdit.removeClass("enabled"), this.ui.$recurringOrderLinkHide.addClass("enabled") },
        showRecurringForm: function() { var e = this;
            e.ui.$recurringOrderFormContainer.animate({ "background-color": "#efefef" }, 100, function() { e.$el.find(".recurring-order-link").animate({ "margin-top": "7px" }), e.ui.$recurringOrderFormContainer.addClass("form-enabled"), e.ui.$recurringOrderForm.slideDown("slow", function() { e.$el.find(".recurring-order-save-button").fadeIn() }) }), e.ui.$recurringDisclaimer.fadeOut(), this.ui.$savingList.hide(), this.ui.$thankYouPara.hide(), this.ui.listForm.show() },
        changeRecurringLink: function() { this.ui.$recurringOrderLinkEdit.addClass("enabled"), this.ui.$recurringOrderLinkHide.removeClass("enabled") },
        hideRecurringForm: function() { var e = this;
            this.$el.find(".recurring-order-save-button").fadeOut(), this.ui.$recurringOrderForm.slideUp("slow", function() { e.$el.find(".recurring-order-link").animate({ "margin-top": 0 }), e.ui.$recurringOrderFormContainer.removeClass("form-enabled"), e.ui.$recurringOrderFormContainer.animate({ "background-color": "#ffffff" }, 100), e.ui.$recurringDisclaimer.fadeIn() }) },
        performSave: function() { "-1" == this.ui.listCode.val() ? this.createNewList() : this.editExistingList() },
        createNewList: function() { var e = this,
                i = this.ui.$createListFromOrderForm.serialize();
            t.ajax({ url: this.ui.$createListFromOrderForm.attr("action"), type: "post", data: i }).done(function(t) { null != t.data ? (e.ui.listCode.val(t.data), e.addProductsToList(), refreshListCount(), e.ui.$savingList.hide(), e.ui.$thankYouPara.height("300"), e.ui.$thankYouPara.show(), setTimeout(function() { e.changeRecurringLink(), e.hideRecurringForm(), e.$el.find("#listname-error").hide() }, 2e3)) : (e.ui.$savingList.hide(), e.ui.listForm.show(), e.$el.find("#listname-error").text(t.errorMessage), e.hideRecurringLink(), e.showRecurringForm()) }) },
        editExistingList: function() { var e = this,
                i = this.ui.$createListFromOrderForm.serialize();
            t.ajax({ url: "/lists/editList", type: "post", data: i + "&listCode=" + e.ui.listCode.val() }).done(function(t) { e.ui.listCode.val(t), e.ui.$savingList.hide(), e.ui.$thankYouPara.show(), setTimeout(function() { e.changeRecurringLink(), e.hideRecurringForm(), e.$el.find(".recurring-actions").show() }, 2e3) }) },
        addProductsToList: function() { var e = this.ui.orderItemsForm.serialize();
            t.ajax({ url: this.ui.orderItemsForm.attr("action"), type: "post", data: e }) },
        _getProductNumbersString: function() { var e = []; return this.$(".product-row").each(function() { e.push(t(this).data("product-number")) }), e.join(":") },
        onClickRejectLink: function() { return modalOpen("generic-modal", "approval-warning-modal"), !1 },
        updateHiddenFormInput: function() {
            var e, t, i = "";
            e = this.ui.nameInput && this.ui.nameInput.val() ? this.rightPadString(this.ui.nameInput.val(), " ", 30) : this.rightPadString("", " ", 30), this.ui.customerPhonePartOneInput && this.ui.customerPhonePartOneInput.val() && (i += this.ui.customerPhonePartOneInput.val()), this.ui.customerPhonePartTwoInput && this.ui.customerPhonePartTwoInput.val() && (i += this.ui.customerPhonePartTwoInput.val()), this.ui.customerPhonePartThreeInput && this.ui.customerPhonePartThreeInput.val() && (i += this.ui.customerPhonePartThreeInput.val()), i.replace(/_/gi, "").length < 10 && (i = ""), i = this.rightPadString(i, " ", 10), t = this.ui.commentInput && this.ui.commentInput.val() ? this.ui.commentInput.val() : "", this.ui.commentsHiddenFormInput.val(e + i + t), this.ui.phoneInput.val(i)
        },
        rightPadString: function(e, t, i) { for (var a = e; a.length < i;) a += t; return a },
        validateForm: function() { return this.validateOrderName() && this.validateStartDate() },
        validateOrderName: function() { var e = this.ui.$orderNameTextField.val().trim().split(" ").join(""),
                t = /^[a-zA-Z0-9' ']+$/,
                i = t.test(e); return i ? this.hideInvalidOrderNameError() : this.showInvalidOrderNameError(), i },
        hideInvalidOrderNameError: function() { this.ui.$orderNameTextField.removeClass("input-error"), this.ui.$orderNameError.hide() },
        showInvalidOrderNameError: function() { this.ui.$orderNameTextField.addClass("input-error"), this.ui.$orderNameError.show() },
        validateStartDate: function() { var e = this.ui.$orderStartDateDatePicker.val(),
                i = t.datepicker.formatDate("mm/dd/yy", new Date),
                a = Boolean(null != e && "" != e && e >= i); return a ? this.hideInvalidStartDateError() : this.showInvalidStartDateError(), a },
        hideInvalidStartDateError: function() { this.ui.$orderStartDateDatePicker.removeClass("input-error"), this.ui.$orderStartDateError.hide() },
        showInvalidStartDateError: function() { this.ui.$orderStartDateDatePicker.addClass("input-error"), this.ui.$orderStartDateError.show() },
        onRemoveRejectedProductRowLinkClick: function(e) { t(e.target).closest(".product-row").find(".input-qty input.qty").val(0), this.ui.$cartForm.attr("action", "/cart/update"), this.submitCartForm() },
        onClearAllModalConfirmLinkClick: function() { this.ui.$cartForm.attr("action", "/cart/clear-all"), this.submitCartForm() },
        onApproveOrderLinkClick: function() { this.updateHiddenFormInput(), this.ui.$cartForm.attr("action", "/cart/approve/" + this.model.get("primaryKey")), this.validateCart() && this.submitCartForm() },
        onDeleteOrderLinkClick: function() { this.ui.$cartForm.attr("action", this.model.get("deleteOrderUrl")), this.validateCart() && this.submitCartForm() },
        onSubmitOrderForApprovalLinkClick: function() { this.updateHiddenFormInput(), "false" === this.model.get("isStaticCart") && (this.ui.$cartForm.attr("action", this.model.get("submitOrderForApprovalUrl")), this.validateCart() && this.submitCartForm()) },
        onResubmitOrderForApprovalClick: function() { this.ui.$cartForm.attr("action", "/cart/resubmit-order-for-approval/" + this.model.get("primaryKey")), this.validateCart() && this.submitCartForm() },
        onRejectOrderLinkClick: function() { rejectOrder(this.model.get("primaryKey"), this.ui.commentsHiddenFormInput.val(), this.ui.customerPoInput.val(), this.ui.consumerEmailInput.val()) },
        onCancelOrderLinkClick: function() { modalOpen("clearall", "clearall-modal") },
        onGoBackToAllApprovalsLinkClick: function() { var e = "true" === this.model.get("isCartUpdated"),
                t = "true" === this.model.get("isValidApprovalCart");
            e && t ? modalOpen("generic-modal", "approval-warning-modal") : (this.loadingSpinnerView.showSpinner(), window.location = this.model.get("approvalsListUrl")) },
        onUpdateFields: function() { this.model.set("isCartUpdated", "true") },
        changeQuantity: function(e) { var i = e.target.id,
                a = i.replace("-qty", "-userRequest"),
                r = t(e.target).val();
            document.getElementById(a).value = r },
        submitCartForm: function() { this.loadingSpinnerView.showSpinner(), this.ui.$cartForm.submit() },
        validateCart: function() { var t = function(e) { return e }; return e.every([this.validateAgreementItem(this.ui.shippingChargeAgreementCheckbox, this.ui.shippingAgreementErrorLabel), this.validateAgreementItem(this.ui.backorderAgreementCheckbox, this.ui.backorderAgreementErrorLabel), this.validateAgreementItem(this.ui.discontinuedReplacedAgreementCheckbox, this.ui.discontinuedReplacedAgreementErrorLabel), this.validateAgreementItem(this.ui.returnDisclaimerAgreementCheckbox, this.ui.returnDisclaimerAgreementErrorLabel)], t, this) },
        validateAgreementItem: function(e, t) { return t.hide(), 0 == e.length || e.is(":checked") ? !0 : (t.show(), !1) },
        changeShowExpeditedFreight: function(e) { var i = e.target.id.split("-")[0],
                a = "." + i + "-expedited";
            t(a).val(e.target.checked), this.loadingSpinnerView.showSpinner(), this.ui.$cartForm.attr("action", "/cart/update"), this.submitCartForm() },
        onFocusPhonePartTwo: function() { this.validatePhonePart(this.ui.customerPhonePartOneInput, 3) },
        onFocusPhonePartThree: function() { this.validatePhonePart(this.ui.customerPhonePartOneInput, 3), this.validatePhonePart(this.ui.customerPhonePartTwoInput, 3) },
        onBlurPhonePartOne: function() { this.validatePhonePart(this.ui.customerPhonePartOneInput, 3) },
        onBlurPhonePartTwo: function() { this.validatePhonePart(this.ui.customerPhonePartTwoInput, 3) },
        onBlurPhonePartThree: function() { this.validatePhonePart(this.ui.customerPhonePartThreeInput, 4) },
        validatePhonePart: function(e, t) { var i = e.val().replace("_", "").replace("X", "");
            i.length < t ? e.addClass("input-error") : e.removeClass("input-error") }
    })
}), define("CategoryView", ["underscore", "marionette", "CategoryViewModel", "SearchResultsView", "ListModalMediator", "RefineSearchLeftNavigationView", "WheelSizeSearchView", "TireSizeSearchView"], function(e, t, i, a, r, o, n, s) { return t.LayoutView.extend({ el: "#content", model: i.getSharedInstance(), searchResultsView: null, regions: { refineSearchLeftNavigationRegion: "#left_nav" }, ui: { printLinkCat: "#global-search-print-link-cat", sortOrderDropdown: ".selectSortOption", frontWidth: "#front-width", rearWidth: "#rear-width", frontAspectRatio: "#front-aspect-ratio", rearAspectRatio: "#rear-aspect-ratio", frontDiameter: "#front-diameter", rearDiameter: "#rear-diameter", goLink: "#search-submit", removeRearSize: ".remove-rear-size", addRearSize: ".add-rear-size", tireSizeToogle: ".tire-size-span", tireSizeSearchDropdown: ".tire-search-dropdown", tireSizeSearchTextField: ".tire-size-search-text-field", wheelDiameter: "select.tire-wheel-diameter", wheelBoltPattern: "select.tire-wheel-bolt-pattern", wheelWidth: "select.tire-wheel-width", wheelOffset: "select.tire-wheel-offset" }, events: { "change @ui.sortOrderDropdown": "sortResults", "change @ui.frontWidth": "onFrontWidthChange", "change @ui.rearWidth": "onRearWidthChange", "change @ui.frontAspectRatio": "onFrontAspectRatioChange", "change @ui.rearAspectRatio": "onRearAspectRatioChange", "change @ui.frontDiameter": "onFrontDiameterChange", "change @ui.rearDiameter": "onRearDiameterChange", "click @ui.goLink": "onSearchSubmitClick", "click @ui.removeRearSize": "onRearSizeActionsClick", "click @ui.addRearSize": "onRearSizeActionsClick", "click @ui.tireSizeToogle": "onTireSizeToogle", "change @ui.wheelDiameter": "onWheelDiameterDropdownChange", "change @ui.wheelBoltPattern": "onWheelBoltPatternDropdownChange", "change @ui.wheelWidth": "onWheelWidthDropdownChange" }, categorySearchSizeUrl: "/category/searchsize", initialize: function(e) { e = e || {}, this.searchResultsView = new a, this.searchResultsView.render(), (new n).render(), (new s).render() }, onRender: function() { this.refineSearchLeftNavigationRegion.attachView((new o).render()), this.selectedFrontWidth = this.model.get("selectedFrontWidth"), this.selectedFrontAspectRatio = this.model.get("selectedFrontAspectRatio"), this.selectedFrontDiameter = this.model.get("selectedFrontDiameter"), this.selectedRearWidth = this.model.get("selectedRearWidth"), this.selectedRearAspectRatio = this.model.get("selectedRearAspectRatio"), this.selectedRearDiameter = this.model.get("selectedRearDiameter"), this.selectedFrontWidth ? this.selectedFrontAspectRatio || (this.disableDropdowns([this.ui.frontDiameter]), this.ui.frontDiameter.prop("selectedIndex", 0)) : (this.disableDropdowns([this.ui.frontAspectRatio, this.ui.frontDiameter]), this.ui.frontWidth.prop("selectedIndex", 0), this.ui.frontAspectRatio.prop("selectedIndex", 0)), this.isValidFrontWidth() && this.isValidFrontAspectRatio() && this.isValidFrontDiameter() && this.enableGo(), this.selectedRearWidth ? this.selectedFrontAspectRatio || (this.disableDropdowns([this.ui.frontDiameter]), this.ui.frontDiameter.prop("selectedIndex", 0)) : (this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.ui.rearWidth.prop("selectedIndex", 0), this.ui.frontAspectRatio.prop("selectedIndex", 0)), this.isValidRearWidth() && this.isValidRearAspectRatio() && this.isValidRearDiameter() && this.enableGo(), this.rearRowDetailsToggle() }, onPrintLinkClick: function() { var e;
            e = window.location.href.indexOf("searchsize") > -1 ? "/category/searchsize/print" + document.location.search : "/category/print" + document.location.search, window.open(e, "_blank") }, sortResults: function() { loading(); var e = this.ui.sortOrderDropdown.val();
            $.ajax({ url: "/ajax/sort-order-option/" + e, type: "get" }).done(function() { location.reload() }) }, rearRowDetailsToggle: function() { $(".remove-rear-button").removeClass("hidden"), $(".add-rear-button").addClass("hidden"), $(".add-rear-size").addClass("hidden") }, onRearSizeActionsClick: function() { $(".rear-details-row").hasClass("hidden") ? ($(".rear-details-row").removeClass("hidden"), $(".remove-rear-size").removeClass("hidden"), $(".remove-rear-button").removeClass("hidden"), $(".add-rear-button").addClass("hidden"), $(".add-rear-size").addClass("hidden")) : ($(".rear-details-row").addClass("hidden"), $(".remove-rear-size").addClass("hidden"), $(".add-rear-size").removeClass("hidden"), $(".add-rear-button").removeClass("hidden"), $(".remove-rear-button").addClass("hidden")) }, populateDropdown: function(e, t, i) { var a = this;
            $.get(e, i, function(e) { a.resetDropdown(t); var i = $("<select />");
                $(e).each(function(e, t) { var a = "------" === t ? "" : t,
                        r = $("<option />", { val: a, text: t });
                    i.append(r) }), t.append(i.children()), t.prop("selectedIndex", 0) }) }, resetDropdown: function(e) { e.children().slice(1).remove() }, enableDropdown: function(e) { e.removeClass(this.disabledSelectCssClass), e.removeAttr(this.disabledSelectCssClass) }, disableDropdowns: function(t) { e.each(t, function(e) { e.attr("disabled", this.disabledSelectCssClass), this.resetDropdown(e) }, this) }, enableGo: function() { this.ui.goLink.removeClass(this.disabledGoCssClass), this.ui.goLink.addClass(this.enabledGoCssClass), this.ui.goLink.off("click").on("click", e.bind(this.onGoLinkClick, this)) }, disableGo: function() { this.ui.goLink.removeClass(this.enabledGoCssClass), this.ui.goLink.addClass(this.disabledGoCssClass), this.ui.goLink.off("click") }, isValidFrontWidth: function() { return "" !== this.ui.frontWidth.val() }, isValidFrontAspectRatio: function() { return "" !== this.ui.frontAspectRatio.val() }, isValidFrontDiameter: function() { return "" !== this.ui.frontDiameter.val() }, isValidRearWidth: function() { return "" !== this.ui.rearWidth.val() }, isValidRearAspectRatio: function() { return "" !== this.ui.rearAspectRatio.val() }, isValidRearDiameter: function() { return "" !== this.ui.rearDiameter.val() }, isValidWheelDiameter: function() { return "" !== this.ui.wheelDiameter.val() }, isValidWheelWidth: function() { return "" !== this.ui.wheelWidth.val() }, isValidWheelBoltPattern: function() { return "" !== this.ui.wheelBoltPattern.val() }, isValidWheelOffset: function() { return "" !== this.ui.wheelOffset.val() }, onGoLinkClick: function() { this.isValidYear() && this.isValidMake() && this.isValidModel() ? this.ui.vehicleGuideForm.submit() : this.displayFitmentOptionsMessageModal() }, onSearchSubmitClick: function() { var e = $("#productwheel :selected").val().trim() + "" + $("#faspectratio :selected").val().trim() + $("#fdiameter :selected").val().trim(),
                t = $("#rproductwheel :selected").val().trim() + "" + $("#raspectratio :selected").val().trim() + $("#rdiameter :selected").val().trim(),
                i = $("._New_N").val(),
                a = $("._New_Ntk").val(),
                r = $("#isStaggeredSearch").val(),
                o = $("#productwheel :selected").val().trim() + "" + $("#faspectratio :selected").val().trim() + $("#fdiameter :selected").val().trim();
            $.ajax({ url: this.categorySearchSizeUrl, type: "GET", data: { N: i, Ntk: a, isStaggeredSearch: r, Ntt: o, searchTermOne: e, searchTermTwo: t }, success: function(e) { console.log("success" + e) }, error: function(e, t, i) { console.log("ERROR" + i) } }) }, onTireSizeToogle: function() { $(".tire-search-dropdown").toggle(), $(".tire-size-search-text-field").toggle() } }) }), define("CommunicationView", ["underscore", "jquery", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.LayoutView.extend({ el: "#myaccount-communications", loadingSpinnerView: a.getSharedInstance(), ui: { addNewContactButton: "#add-new-contact", saveContactButton: ".save-contact", deleteContactButton: ".delete-contact", editContactButton: ".edit-contact", addMoreContactButton: ".add-more-contact", cancelEditContactLink: ".cancel-edit", deleteContactPointButton: ".delete-contact-point", communicationTable: "#communication-table", buttonsSection: ".buttons", locationSettingTabs: "#location-settings-tabs", nameFieldValidationMessage: ".name-field-error", selectAllPhone: ".select-all-phone", selectAllEmail: ".select-all-email", deleteContactConfirm: "#delete-contact-modal", deleteContactPointConfirm: "#delete-contact-point-modal", phoneField1: ".phone-field1", phoneField2: ".phone-field2" }, events: { "click @ui.deleteContactButton": "deleteContactClick", "click @ui.editContactButton": "editContactClick", "click @ui.addMoreContactButton": "addMoreContactClick", "click @ui.deleteContactPointButton": "deleteContactPointClick", "click @ui.addNewContactButton": "addNewContactClick", "click @ui.cancelEditContactLink": "cancelEditContactClick", "click @ui.saveContactButton": "saveContact", "change @ui.selectAllPhone": "changeSelectAllPhone", "change @ui.selectAllEmail": "changeSelectAllEmail", "keyup @ui.phoneField1": "validateSignedNumericInput", "blur @ui.phoneField2": "formatPhoneNumber", "keyup @ui.phoneField2": "validateSignedNumericInput" }, onRender: function() { this.ui.nameFieldValidationMessage.hide(), this.ui.locationSettingTabs.find(t(".tab-1").addClass("ui-tabs-active")), this.ui.deleteContactButton.tooltip(), this.ui.editContactButton.tooltip(), this.ui.addMoreContactButton.tooltip() }, deleteContactClick: function(e) { var i = t(e.target).data("firstname"),
                a = t(e.target).data("lastname"),
                r = t(e.target).data("contact-pk");
            this.ui.deleteContactConfirm.dialog({ autoOpen: !1, resizable: !1, width: 380, minHeight: 190, show: "fade", hide: "fade", zIndex: 2e3, position: { my: "top", at: "top", offset: "0 52" }, modal: !0, stack: !1, closeOnEscape: !1, open: function() { t(".ui-dialog-titlebar").hide(), t(".ui-dialog-titlebar-close").hide(), t("#firstName").html(i), t("#lastName").html(a), t("#btn-delete-contact").prop("href", "/my-account/locations/communication/delete-contact/" + r) }, close: function() {} }), this.ui.deleteContactConfirm.dialog("open").height("auto") }, editContactClick: function(e) { self = this; var i = t(e.target).data("contact-pk");
            a.getSharedInstance().showSpinner(), t.ajax({ type: "GET", url: "/my-account/locations/communication/get-contact/" + i }).done(function(e, r) { if ("success" === r && -1 === JSON.stringify(e).indexOf("html")) { t("#edit-detail-row-id-" + i).html(e), self.ui.editContactButton.hide(), self.ui.deleteContactButton.hide(), self.ui.addMoreContactButton.hide(); var o = "/_ui/desktop/common/images/leftDownCaret.png";
                    t(".arrow-image-" + i).attr("src", o), a.getSharedInstance().hideSpinner() } else window.location.href = "/my-account/verify-password", location.reload() }) }, cancelEditContactClick: function() { a.getSharedInstance().showSpinner(), window.location.href = "/my-account/locations/communication" }, deleteContactPointClick: function(e) { var i = t(e.target).data("contact-point-pk");
            this.ui.deleteContactPointConfirm.dialog({ autoOpen: !1, resizable: !1, width: 380, minHeight: 190, show: "fade", hide: "fade", zIndex: 2e3, position: { my: "top", at: "top", offset: "0 52" }, modal: !0, stack: !1, closeOnEscape: !1, open: function() { t(".ui-dialog-titlebar").hide(), t(".ui-dialog-titlebar-close").hide(), t("#btn-delete-contact-point").prop("href", "/my-account/locations/communication/delete-contact-point/" + i) }, close: function() {} }), this.ui.deleteContactPointConfirm.dialog("open").height("auto") }, addNewContactClick: function() { a.getSharedInstance().showSpinner(), this.ui.buttonsSection.hide(), this.ui.communicationTable.hide(), t.ajax({ type: "GET", url: "/my-account/locations/communication/get-new-contact" }).done(function(e, i) { "success" === i && -1 === JSON.stringify(e).indexOf("html") ? (t("#new-contact-row").html(e), a.getSharedInstance().hideSpinner()) : (window.location.href = "/my-account/verify-password", location.reload()) }) }, addMoreContactClick: function(e) { self = this; var i = t(e.target).data("contact-pk");
            a.getSharedInstance().showSpinner(), t.ajax({ type: "GET", url: "/my-account/locations/communication/get-add-more-contact/" + i }).done(function(e, r) { if ("success" === r && -1 === JSON.stringify(e).indexOf("html")) { t("#edit-detail-row-id-" + i).html(e), self.ui.editContactButton.hide(), self.ui.deleteContactButton.hide(), self.ui.addMoreContactButton.hide(); var o = "/_ui/desktop/common/images/leftDownCaret.png";
                    t(".arrow-image-" + i).attr("src", o), a.getSharedInstance().hideSpinner() } else window.location.href = "/my-account/verify-password", location.reload() }) }, saveContact: function(e) { var i = !0,
                a = t(e.target).closest(".communication-form");
            a.find(".name-field-error").hide(), a.find(".firstName-field").removeClass("input-error"), a.find(".lastName-field").removeClass("input-error"), a.find(".email-field").removeClass("input-error"), a.find(".phone-field1").removeClass("input-error"), a.find(".phone-field2").removeClass("input-error"), a.find(".firstName-field").val() || (a.find(".firstName-field").addClass("input-error"), a.find(".name-field-error").addClass("verify-ex"), a.find(".name-field-error").show(), i = !1), a.find(".lastName-field").val() || (a.find(".lastName-field").addClass("input-error"), a.find(".name-field-error").addClass("verify-ex"), a.find(".name-field-error").show(), i = !1), a.find(".email-field").each(function(e, r) { var o = t(r),
                    n = o.data("index"); if (a.find(".email-required-error-" + n).hide(), a.find(".email-field-error-" + n).hide(), !o.val() && a.find(".email-notifications-" + n).find("input:checkbox:checked").length > 0) o.addClass("input-error"), a.find(".email-required-error-" + n).addClass("verify-ex"), a.find(".email-required-error-" + n).show(), i = !1;
                else { var s = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
                    s.test(o.val()) || (o.addClass("input-error"), a.find(".email-field-error-" + n).addClass("verify-ex"), a.find(".email-field-error-" + n).show(), i = !1) } }), a.find(".phone-field1").each(function(e, r) { var o = t(r),
                    n = o.data("index");
                a.find(".phone-required-error-" + n).hide(), a.find(".phone-field-error-" + n).hide(), o.parent().find(".phone-field2").val() && !o.val() ? (o.addClass("input-error"), a.find(".phone-required-error-" + n).addClass("verify-ex"), a.find(".phone-required-error-" + n).show(), i = !1) : !o.val() && a.find(".text-notifications-" + n).find("input:checkbox:checked").length > 0 ? (o.addClass("input-error"), a.find(".phone-required-error-" + n).addClass("verify-ex"), a.find(".phone-required-error-" + n).show(), i = !1) : o.val() && o.val().length < 3 && (o.addClass("input-error"), a.find(".phone-field-error-" + n).addClass("verify-ex"), a.find(".phone-field-error-" + n).show(), i = !1) }), a.find(".phone-field2").each(function(e, r) { var o = t(r),
                    n = o.data("index");
                o.parent().find(".phone-field1").val() && !o.val() ? (o.addClass("input-error"), a.find(".phone-required-error-" + n).addClass("verify-ex"), a.find(".phone-required-error-" + n).show(), i = !1) : !o.val() && a.find(".text-notifications-" + n).find("input:checkbox:checked").length > 0 ? (o.addClass("input-error"), a.find(".phone-required-error-" + n).addClass("verify-ex"), a.find(".phone-required-error-" + n).show(), i = !1) : o.val() && o.val().length < 8 && (o.addClass("input-error"), a.find(".phone-field-error-" + n).addClass("verify-ex"), a.find(".phone-field-error-" + n).show(), i = !1) }), i && a.submit() }, changeSelectAllPhone: function(e) { var i = t(e.target).data("index"),
                a = t(e.target).closest(".communication-form"),
                r = a.find(".text-notifications-" + i).find(":checkbox");
            t(e.target).prop("checked") ? r.prop("checked", !0) : r.prop("checked", !1) }, changeSelectAllEmail: function(e) { var i = t(e.target).data("index"),
                a = t(e.target).closest(".communication-form"),
                r = a.find(".email-notifications-" + i).find(":checkbox");
            t(e.target).prop("checked") ? r.prop("checked", !0) : r.prop("checked", !1) }, formatPhoneNumber: function(e) { if (!t(e.target).val()) return !1; var i = t(e.target).val();
            i = i.replace(/[^0-9]+/g, ""); var a = i.substring(0, 3),
                r = i.substring(3, 7);
            t(e.target).val(a + "-" + r) }, validateSignedNumericInput: function(e) { var i = /[^-0-9.]/g,
                a = t(e.target).val().replace(i, "");
            t(e.target).val(a) } }) }), define("DashboardView", ["jquery", "underscore", "marionette", "DashboardViewModel", "SelectLocationModalView", "ProgramStatusComponentView"], function(e, t, i, a, r, o) { return i.ItemView.extend({ DashboardViewModel: null, selectLocationModalView: null, el: "#content", ui: { dashboardContainer: ".accountType-container", accountInformationComponent: "#account-information-component", accountInfoComponentChangeStoreLink: ".open-select-location-modal", homepageListsContainer: "#rightpanel-MyList", homepageAddListToCart: ".homepage-add-list-to-cart", landedViaLogin: ".landedViaLogin-container", userIdContainer: ".userId-container" }, events: { "click @ui.accountInfoComponentChangeStoreLink": "onAccountInfoComponentChangeStoreLinkClick", "click @ui.homepageAddListToCart": "onAddListToCartLinkClick" }, initialize: function(e) { e = e || {}, this.DashboardViewModel = e.DashboardViewModel || a, this.model = e.model || this.DashboardViewModel.getSharedInstance(), this.selectLocationModalView = e.selectLocationModalView || r.getSharedInstance() }, onRender: function() { this.resizeStoreName(), this.configPromoComponent(), this.$(".processing-order-notice").fadeIn("slow"), e("#program-status-component")[0] && (this.ProgramStatusComponentView = new o, this.ProgramStatusComponentView.render()) }, onAddListToCartLinkClick: function(t) { var i = e(t.target).data().productIndex,
                a = this.ui.homepageListsContainer.find("#homepage-list-form" + i);
            a.submit() }, resizeStoreName: function() { var e = this.ui.dashboardContainer.find(".sm-container h2.customer-name"),
                t = 15,
                i = 25,
                a = 50;
            e.text().length > a ? e.addClass("micro") : e.text().length > i ? e.addClass("smallest") : e.text().length > t && e.addClass("smaller") }, configPromoComponent: function() { try { this.$(".scrollable").scrollable({ circular: !0 }).navigator(".navi").autoscroll({ autoplay: !0, interval: 5e3 }) } catch (e) {} }, onAccountInfoComponentChangeStoreLinkClick: function() { this.selectLocationModalView.displayModal() } }) }), define("ListView", ["jquery", "underscore", "marionette", "EditListModalBehavior", "LoadingSpinnerView", "ListViewModel"], function(e, t, i, a, r, o) { return i.ItemView.extend({ EditListModalBehavior: null, editListModalBehavior: null, recurringListModalBehavior: null, loadingSpinnerView: null, successfullySubmittedItemNumbers: [], el: "#content", model: o.getSharedInstance(), ui: { editListModal: "#edit-list-modal", addSelectedItemsToOrderLink: "#add-selected-items-to-order-link", addListToOrderLink: "#add-list-to-order-link", listViewCheckboxes: ".list-view-checkbox", noCheckboxSelectedError: "#no-checkbox-selected-error", editDetailParagraph: ".list-info-group", makeRecurringModal: "#make-recurring-modal", makeRecurringLink: ".make-recurring-link", stockOrderAddButtonLink: "#stock-order-add-button", stockOrderSupplierNumberInput: "#list-supp-no", stockOrderQuantityInput: "#list-qty", stockOrderErrorLabel: "#supplierid-field-error", stockOrderForm: "#list_top-inputs", updateQtyLink: ".update-qty-link", freightLink: ".freight-link", deleteItemLink: ".delete-item-link", errorMessageLabel: "#errorMessage" }, events: { "click @ui.addSelectedItemsToOrderLink": "onAddSelectedItemsToOrderLinkClick", "click @ui.addListToOrderLink": "onAddListToOrderLinkClick", "click @ui.makeRecurringLink": "onMakeRecurringLinkClick", "click @ui.stockOrderAddButtonLink": "onStockOrderAddButtonLinkClick", "keypress @ui.stockOrderQuantityInput": "onStockOrderInputKeypress", "keypress @ui.stockOrderQuantityInput, @ui.stockOrderSupplierNumberInput": "submitOnEnter", "click @ui.updateQtyLink": "onUpdateQtyLinkClick", "click @ui.freightLink": "onClickFreightLink" }, initialize: function(e) { e = e || {}, this.EditListModalBehavior = e.EditListModalBehavior || a, this.loadingSpinnerView = e.loadingSpinnerView || r.getSharedInstance() }, onRender: function() { this.initRecurringModalBehavior(), this.ui.makeRecurringModal.on(this.EditListModalBehavior.Event_FormDidSuccessfullyValidateOnSubmit, this.onFormDidSuccessfullyValidate), this.ui.stockOrderSupplierNumberInput.placeholder(), this.ui.stockOrderQuantityInput.placeholder() }, initRecurringModalBehavior: function() { this.recurringListModalBehavior = new this.EditListModalBehavior, this.recurringListModalBehavior.set$listModal(this.ui.makeRecurringModal), this.recurringListModalBehavior.init() }, onMakeRecurringLinkClick: function() { this.recurringListModalBehavior.openModal() }, onFormDidSuccessfullyValidate: function(t, i) { i.formData.description = i.formData.po, e.ajax({ url: "/lists/editList", type: "post", data: i.formData }).done(function() { var e = window.location.href.indexOf("updated") > -1;
                e ? location.reload() : window.location.href = window.location.href + "?updated=true" }).fail(function(e) { alert(e.responseText) }) }, onAddSelectedItemsToOrderLinkClick: function() { this.submitListToCart() }, onAddListToOrderLinkClick: function() { this.ui.noCheckboxSelectedError.hide(), this.ui.listViewCheckboxes.prop("checked", !0), this.submitListToCart() }, submitListToCart: function() { var i = this.ui.addListToOrderLink.data("list-number"),
                a = this.ui.listViewCheckboxes.filter(":checked"); if (a.length) { this.loadingSpinnerView.showSpinner(); var r = [];
                t.each(a, function(e) { var t = this.$(e).closest("tbody.product-row");
                    r.push(this.addProductToCartFromList(t)) }, this); var o = t.bind(function() { this.successfullySubmittedItemNumbers = [], this.loadingSpinnerView.hideSpinner(), window.location = "/cart" }, this),
                    n = t.bind(function() { this.successfullySubmittedItemNumbers = [], this.loadingSpinnerView.hideSpinner() }, this),
                    s = t.bind(function() { return this.updateListOccurrenceDate(i), e.ajax({ url: "/cart/ajax/calculate", type: "post" }) }, this);
                e.when.apply(this, r).then(s).then(o, n) } else this.ui.noCheckboxSelectedError.show() }, addProductToCartFromList: function(i) { var a = i.find("input.qty").val(),
                r = i.find(".add-to-cart-form"),
                o = i.find(".error-message-container"),
                n = i.find(".maximum-exceeded-alert"),
                s = i.find(".success-message"),
                l = (this.ui.addListToOrderLink.data("list-number"), i.data("product-number"));
            WebStore.Common.hideParentedMessage(o, n), WebStore.Common.hideMessage(s); var d = e.Deferred(); if (0 >= a) return WebStore.Common.showParentedMessage(o, n, "Quantity is required."), d.reject(); var c = t.bind(function(e) {
                    (0 == e.code || 2 == e.code) && this.successfullySubmittedItemNumbers.push(l) }, this),
                u = function() { return WebStore.Common.hideMessage(s), WebStore.Common.showParentedMessage(o, n, "Error adding to cart."), d.reject() }; return e.ajax({ type: "POST", url: r.attr("action"), data: r.formSerialize(), success: c, async: !1 }).fail(u) }, onStockOrderAddButtonLinkClick: function(e) { e.preventDefault(), this.submitStockOrderForm() }, onStockOrderInputKeypress: function(e) { 9 !== e.keyCode && validateNumericInput(e) }, submitOnEnter: function(e) { 13 === e.keyCode && (this.submitStockOrderForm(), e.preventDefault()) }, submitStockOrderForm: function() { this.validateSupplierNumberLength() && this.validateStockOrderQuantity() && this.validateSupplierNumber().then(t.bind(function() { this.ui.stockOrderForm.submit() }, this)) }, validateStockOrderQuantity: function() { var e = parseInt(this.ui.stockOrderQuantityInput.val(), 10); return e > 0 && 999 >= e ? !0 : (this.showStockOrderErrorLabel(this.model.get("invalidQtyText")), !1) }, validateSupplierNumberLength: function() { return this.ui.stockOrderSupplierNumberInput.val().length < 4 ? (this.showStockOrderErrorLabel(this.model.get("invalidSupplierNumberCharactersCountText")), !1) : !0 }, validateSupplierNumber: function() { var i = e.Deferred(); return e.ajax({ url: "/util/supplierNumberSearch", type: "get", data: { supplierNumber: this.ui.stockOrderSupplierNumberInput.val() }, context: this, success: t.bind(function(e) { t.isUndefined(e) || t.isUndefined(e.resultCount) || 0 === parseInt(e.resultCount, 10) ? (this.showStockOrderErrorLabel(this.model.get("invalidSupplierNumberText")), i.reject()) : i.resolve() }, this) }), i.promise() }, showStockOrderErrorLabel: function(e) { this.ui.stockOrderErrorLabel.html(e), this.ui.stockOrderErrorLabel.show() }, onUpdateQtyLinkClick: function(i) { this.ui.errorMessageLabel.text(""); var a = this.$(i.target),
                r = a.closest(".product-row"),
                o = r.find("input.qty");
            e.ajax({ url: "/lists/updateProductQuantity", type: "get", data: { productCode: a.data("product-code"), listCode: a.data("list-code"), desiredQuantity: o.val() }, success: t.bind(function(t) { var i = e.parseJSON(t);
                    0 == i.code ? o.val(i.data) : 1 == i.code ? console.log(i.errorMessage) : 4 == i.code && (o.val(i.data), this.ui.errorMessageLabel.text(i.message)), r.find(".added-check").fadeIn("fast").delay(2e3).fadeOut() }, this) }) }, onClickFreightLink: function(e) { var t = this.$(e.target),
                i = t.closest(".product-row"),
                a = t.data("product-code"),
                r = i.find("input.qty").val();
            WebStore.Product.showFreightModal(a, r) }, updateListOccurrenceDate: function(t) { e.ajax({ url: "/lists/updatePendingOccurrence", type: "get", data: "listCode=" + t }) } }) }), define("LoginView", ["jquery", "underscore", "marionette", "ForgotPasswordModalBehavior", "LoginViewModel", "SelectLocationModalView", "LoadingSpinnerView"], function(e, t, i, a, r, o, n) { return i.ItemView.extend({ selectLocationModalView: null, el: "body", model: r.getSharedInstance(), loadingSpinnerView: n.getSharedInstance(), ui: { $loginRegister: "#login_register", $loginForm: "#loginForm", $userIdInput: "#j_username", $userIdError: "#j_username-error", $passwordInput: "#j_password", $passwordError: "#j_password-error", $globalLoginError: "#global-loginError", $forgotPasswordLink: "#forgot-password", $loginButton: "#btn-login", $forgotPasswordModal: "#forgot-password-modal" }, events: { "click @ui.$forgotPasswordLink": "onForgotPasswordLinkClick", "keydown @ui.$userIdInput": "onInputKeyDown", "keydown @ui.$passwordInput": "onInputKeyDown", "click @ui.$loginButton": "onLoginLinkClick" }, forgotPasswordModalBehavior: null, initialize: function(e) { e = e || {}, this.selectLocationModalView = e.selectLocationModalView || o.getSharedInstance() }, onRender: function() { this.initForgotPasswordModalBehavior(), this.ui.$userIdInput.focus(), this.showStoreSelect(), this.listenTo(this.selectLocationModalView, o.Event_CancelLinkClick, this.onSelectLocationModalViewCancelLinkClick) }, initForgotPasswordModalBehavior: function() { this.forgotPasswordModalBehavior = new a, this.forgotPasswordModalBehavior.set$modal(this.ui.$forgotPasswordModal), this.forgotPasswordModalBehavior.init() }, showStoreSelect: function() { if ("true" === this.model.get("shouldShowStoreSelectModal")) { var e = "/login/storeSelect";
                window.location.href = e } }, onSelectLocationModalViewCancelLinkClick: function() { window.location.href = "/logout" }, onForgotPasswordLinkClick: function() { var e = "/login/forgotPassword";
            window.location.href = e }, onInputKeyDown: function(e) { this.isEnterKey(e.keyCode) && this.validateLogin() }, isEnterKey: function(e) { return Boolean(13 == e) }, onLoginLinkClick: function() { this.validateLogin() }, validateLogin: function() { this.ui.$globalLoginError.html(""); var e = this.validateInput(this.ui.$userIdInput, this.ui.$userIdError, this.model.get("invalidUserIdMessage")),
                t = this.validateInput(this.ui.$passwordInput, this.ui.$passwordError, this.model.get("invalidPasswordMessage"));
            e && t && (this.loadingSpinnerView.showSpinner(), this.ui.$loginForm.submit()) }, validateInput: function(e, t, i) { return this.isValidInput(e.val()) ? (this.displayValidInput(e, t), !0) : (this.displayInvalidInput(e, t, i), !1) }, isValidInput: function(e) { return Boolean("" !== e) }, displayInvalidInput: function(e, t, i) { e.addClass("input-error"), t.html(i) }, displayValidInput: function(e, t) { e.removeClass("input-error"), t.html("") } }) }), define("MyAccountPaymentsListView", ["jquery", "marionette", "LoadingSpinnerView", "EmailFileModalView"], function(e, t, i, a) {
    return t.ItemView.extend({
        el: "#content",
        model: null,
        loadingSpinnerView: i.getSharedInstance(),
        emailFileModalView: null,
        ui: { paymentReceivedForm: "#payments-received-form", emailMeLink: ".email-me", downloadMeLink: ".download-file", selectAllPaymentsCheckbox: "#select-all-payments", paymentReceivedCheckboxValue: "#payment-received-checkbox-value", paymentReceivedCheckboxForm: "#payment-received-checkbox-form", selectedPayments: "#selectedPaymentNumbers", printLinkUrl: "#printLinkUrl", paymentsReceived: ".payments-received-selected", paymentsReceivedDownloadErrMsg: "#paymentsReceivedDownloadErrMsg", paymentsReceivedEmailErrMsg: "#paymentsReceivedEmailErrMsg", paymentsReceivedPrintErrMsg: "#paymentsReceivedPrintErrMsg" },
        events: { "click @ui.emailMeLink": "onEmailLinkClick", "click @ui.downloadMeLink": "onDownloadLinkClick", "click @ui.selectAllPaymentsCheckbox": "onSelectAllPaymentsCheckboxClick", "click @ui.printLinkUrl": "onPrintLinkUrlClick", "click @ui.paymentsReceived": "onPaymentsReceivedCheck" },
        initialize: function() { e("#payments-received-table").tablesorter({ sortList: [
                    [1, 1]
                ], headers: { 0: { sorter: !1 }, 1: { sorter: "shortDate" }, 2: { sorter: "text" }, 3: { sorter: "text" }, 4: { sorter: "currency" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }) },
        onRender: function() {
            this.emailFileModalView = a.getSharedInstance()
        },
        onEmailLinkClick: function() { var e = this.ui.paymentReceivedForm.find(".payments-received-selected").serialize(); "" == e ? this.ui.paymentsReceivedEmailErrMsg.show() : (this.ui.paymentReceivedCheckboxValue.val(e), this.ui.paymentReceivedCheckboxForm.submit()) },
        onSelectAllPaymentsCheckboxClick: function() { e(".payments-received-selected").prop("checked", this.ui.selectAllPaymentsCheckbox.is(":checked")), this.ui.paymentsReceivedDownloadErrMsg.hide(), this.ui.paymentsReceivedEmailErrMsg.hide(), this.ui.paymentsReceivedPrintErrMsg.hide() },
        onPrintLinkUrlClick: function(e) { e.preventDefault(); var t = []; return _.each(this.ui.paymentsReceived.get(), function(e) { e.checked && t.push(e.value) }), t.length > 0 ? (this.ui.selectedPayments.val(t), this.ui.paymentReceivedForm.attr("action", this.ui.printLinkUrl.data("value")), this.ui.paymentReceivedForm.attr("target", "_blank"), this.ui.paymentReceivedForm.submit(), !1) : void this.ui.paymentsReceivedPrintErrMsg.show() },
        onPaymentsReceivedCheck: function() { var e = this.ui.paymentsReceivedDownloadErrMsg,
                t = this.ui.paymentsReceivedEmailErrMsg,
                i = this.ui.paymentsReceivedPrintErrMsg;
            _.find(this.ui.paymentsReceived.get(), function(e) { return e.checked }) && (e.hide(), t.hide(), i.hide()) },
        onDownloadLinkClick: function() { var e = this.ui.paymentReceivedForm.find(".payments-received-selected").serialize(); "" == e ? this.ui.paymentsReceivedDownloadErrMsg.show() : (this.ui.paymentReceivedForm.attr("action", "/my-account/accounting/payments/download"), this.ui.paymentReceivedForm.submit()) }
    })
}), define("MyAccountPaymentsDueView", ["jquery", "marionette", "LoadingSpinnerView", "EmailFileModalView"], function(e, t, i, a) { return t.ItemView.extend({ el: "#content", model: null, loadingSpinnerView: i.getSharedInstance(), emailFileModalView: null, ui: { paymentDueForm: "#payments-due-form", emailMeLink: ".email-me", downloadMeLink: ".download-file", selectAllPaymentsLink: "#select-all-payments", paymentDueCheckboxValue: "#payment-due-checkbox-value", paymentDueCheckboxForm: "#payment-due-checkbox-form", invoiceLink: ".invoice-link", printLinkUrl: "#printLinkUrl", selectedPaymentsDue: "#selectedPaymentsDue", paymentsDues: ".payments-due-selected", paymentsDueDownloadErrMsg: "#paymentsDueDownloadErrMsg", paymentsDueEmailErrMsg: "#paymentsDueEmailErrMsg", paymentsDuePrintErrMsg: "#paymentsDuePrintErrMsg" }, events: { "click @ui.emailMeLink": "onEmailLinkClick", "click @ui.downloadMeLink": "onDownloadLinkClick", "click @ui.selectAllPaymentsLink": "onSelectAllPaymentsLinkClick", "click @ui.invoiceLink": "viewInvoiceDetail", "click @ui.printLinkUrl": "onPrintLinkUrl", "click @ui.paymentsDues": "onpaymentsDuesCheck" }, initialize: function() { e("#payments-due-table").tablesorter({ sortList: [
                    [1, 0]
                ], headers: { 1: { sorter: "shortDate" }, 2: { sorter: "text" }, 3: { sorter: "shortDate" }, 4: { sorter: "currency" }, 5: { sorter: "currency" }, 6: { sorter: "text" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }) }, onRender: function() { this.emailFileModalView = a.getSharedInstance(), this.ui.paymentDueCheckboxValue.val("") }, onEmailLinkClick: function() { var e = this.ui.paymentDueForm.find(".payments-due-selected").serialize(); "" == e ? this.ui.paymentsDueEmailErrMsg.show() : (this.ui.paymentDueCheckboxValue.val(e), this.ui.paymentDueCheckboxForm.submit()) }, onDownloadLinkClick: function() { var e = this.ui.paymentDueForm.find(".payments-due-selected").serialize(); "" == e ? this.ui.paymentsDueDownloadErrMsg.show() : (this.ui.paymentDueForm.attr("action", "/my-account/accounting/payments-due/download"), this.ui.paymentDueForm.submit()) }, onSelectAllPaymentsLinkClick: function() { var e = this.ui.selectAllPaymentsLink.is(":checked");
            this.$(".payments-due-selected").prop("checked", e), this.ui.paymentsDueDownloadErrMsg.hide(), this.ui.paymentsDueEmailErrMsg.hide(), this.ui.paymentsDuePrintErrMsg.hide() }, onPrintLinkUrl: function(e) { e.preventDefault(); var t = []; return _.each(this.ui.paymentsDues.get(), function(e) { e.checked && t.push(e.value) }), t.length > 0 ? (this.ui.selectedPaymentsDue.val(t), this.ui.paymentDueForm.attr("action", this.ui.printLinkUrl.data("value")), this.ui.paymentDueForm.attr("target", "_blank"), this.ui.paymentDueForm.submit(), !1) : void this.ui.paymentsDuePrintErrMsg.show() }, onpaymentsDuesCheck: function() { var e = this.ui.paymentsDueDownloadErrMsg,
                t = this.ui.paymentsDueEmailErrMsg,
                i = this.ui.paymentsDuePrintErrMsg;
            _.find(this.ui.paymentsDues.get(), function(e) { return e.checked }) && (e.hide(), t.hide(), i.hide()) }, viewInvoiceDetail: function(t) { var i = e(t.target).data("invoice-number"),
                a = e(t.target).data("location-number"),
                r = "/my-account/accounting/invoices/details/" + i + "/" + a;
            window.location.href = r } }) }), define("MyAccountInvoicesListView", ["jquery", "marionette", "LoadingSpinnerView", "EmailFileModalView"], function(e, t, i, a) { return t.ItemView.extend({ el: "#content", model: null, loadingSpinnerView: i.getSharedInstance(), emailFileModalView: null, ui: { invoicesDataForm: "#invoices-form", emailInvoicesLink: ".email-me", downloadInvoicesLink: ".download-file", detailsModal: "#invoice-modal", searchStartDateDatePicker: "#start-date", searchEndDateDatePicker: "#end-date", searchByDateCheckbox: "#searchByDate", referenceNumberInput: "#referenceNumber", searchByRefNumCheckbox: "#searchByRefNum", searchByLocationCheckbox: "#searchByLocation", searchOpenInvoicesOnly: "#searchOpenInvoicesOnly", locationSelect: "#location", searchButton: "#search-button", emailMeLink: "#email-me-link", selectAllInvoicesCheckbox: "#select-all-invoices", dateError: "#dateError", selectedInvoiceNumbers: "#selectedInvoiceNumbers", printLinkUrl: "#printLinkUrl", invoices: ".invoices-selected", invoicesDownloadErrMsg: "#invoicesDownloadErrMsg", invoicesEmailErrMsg: "#invoicesEmailErrMsg", invoicesPrintErrMsg: "#invoicesPrintErrMsg" }, events: { "change @ui.searchStartDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchEndDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByDateCheckbox": function(e) { this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByRefNumCheckbox": "onSearchCriteriaChanged", "keyup @ui.referenceNumberInput": function(e) { this.onReferenceNumberChanged(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByLocationCheckbox": "onSearchCriteriaChanged", "change @ui.locationSelect": function(e) { this.onLocationSelect(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchOpenInvoicesOnly": "onSearchCriteriaChanged", "click @ui.emailInvoicesLink": "onEmailInvoicesLinkClick", "click @ui.searchButton": "onSearchButtonClick", "click @ui.selectAllInvoicesCheckbox": "onSelectAllInvoicesCheckboxClick", "click @ui.downloadInvoicesLink": "onDownloadLinkClick", "keyup @ui.searchStartDateDatePicker, @ui.searchEndDateDatePicker": "onDateSelectionBtnPress", "click .date-search-clear": "onDateRangeClearClick", "click @ui.printLinkUrl": "onPrintLinkUrlClick", "click @ui.invoices": "onInvoicesCheck" }, initialize: function() { e("#invoices-table").tablesorter({ sortList: [
                    [1, 1]
                ], headers: { 0: { sorter: !1 }, 1: { sorter: "shortDate" }, 2: { sorter: "text" }, 3: { sorter: "currency" }, 4: { sorter: "text" }, 5: { sorter: "text" }, 6: { sorter: "text" }, 7: { sorter: "text" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }) }, onRender: function() { this.emailFileModalView = a.getSharedInstance(), this.initSearchStartDatePicker(), this.initSearchEndDatePicker(), this.onSearchCriteriaChanged() }, initSearchStartDatePicker: function() { this.ui.searchStartDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, initSearchEndDatePicker: function() { this.ui.searchEndDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, onDateChanged: function() { this.ui.searchByDateCheckbox.prop("checked", !0) }, onValidateDate: function() { "" != this.ui.searchStartDateDatePicker.val() && "" != this.ui.searchEndDateDatePicker.val() && (new Date(this.ui.searchStartDateDatePicker.val()) > new Date(this.ui.searchEndDateDatePicker.val()) ? this.ui.dateError.removeClass("hidden-important") : this.ui.dateError.addClass("hidden-important")) }, onLocationSelect: function() { this.ui.searchByLocationCheckbox.prop("checked", !0), "0" == this.ui.locationSelect.val() ? this.ui.searchOpenInvoicesOnly.prop("checked", !0) : this.ui.searchOpenInvoicesOnly.prop("checked", !1) }, onReferenceNumberChanged: function() { isBlank(this.ui.referenceNumberInput.val()) ? this.ui.searchByRefNumCheckbox.prop("checked", !1) : this.ui.searchByRefNumCheckbox.prop("checked", !0) }, onSearchCriteriaChanged: function() { var e = this.ui.searchByDateCheckbox.is(":checked") && this.ui.searchStartDateDatePicker.val() && this.ui.searchEndDateDatePicker.val(),
                t = this.ui.searchOpenInvoicesOnly.is(":checked"),
                i = this.ui.searchByRefNumCheckbox.is(":checked") && !isBlank(this.ui.referenceNumberInput.val()),
                a = this.ui.searchByLocationCheckbox.is(":checked") && "0" !== this.ui.locationSelect.val();
            e || i || a || t ? (this.ui.searchButton.removeClass("button-disabled"), this.ui.searchButton.addClass("dark-grey"), this.searchEnabled = !0) : (this.ui.searchButton.removeClass("dark-grey"), this.ui.searchButton.addClass("button-disabled"), this.searchEnabled = !1) }, onEmailInvoicesLinkClick: function() { var t = this.emailFileModalView,
                i = this.ui.invoicesDataForm.find(".invoices-selected").serialize(); "" == i ? this.ui.invoicesEmailErrMsg.show() : e.ajax({ url: "/my-account/accounting/email-file/invoices", type: "get" }).done(function(i) { e("#email-file").html(i), modalOpen("email-file", "email-file"), t.render() }) }, onSearchButtonClick: function() { this.searchEnabled && (this.loadingSpinnerView.showSpinner(), this.ui.invoicesDataForm.attr("action", "/my-account/accounting/invoices/search"), this.ui.invoicesDataForm.submit()) }, onSelectAllInvoicesCheckboxClick: function() { e(".invoices-selected").prop("checked", this.ui.selectAllInvoicesCheckbox.is(":checked")), this.ui.invoicesDownloadErrMsg.hide(), this.ui.invoicesEmailErrMsg.hide(), this.ui.invoicesPrintErrMsg.hide() }, onPrintLinkUrlClick: function(e) { e.preventDefault(); var t = []; return _.each(this.ui.invoices.get(), function(e) { e.checked && t.push(e.value) }), t.length > 0 ? (this.ui.selectedInvoiceNumbers.val(t), this.ui.invoicesDataForm.attr("action", this.ui.printLinkUrl.data("value")), this.ui.invoicesDataForm.attr("target", "_blank"), this.ui.invoicesDataForm.submit(), !1) : void this.ui.invoicesPrintErrMsg.show() }, onInvoicesCheck: function() { var e = this.ui.invoicesDownloadErrMsg,
                t = this.ui.invoicesEmailErrMsg,
                i = this.ui.invoicesPrintErrMsg;
            _.find(this.ui.invoices.get(), function(e) { return e.checked }) && (e.hide(), t.hide(), i.hide()) }, onDateSelectionBtnPress: function(e) { var t = this.value + String.fromCharCode(e.keyCode); /[^A-Za-z0-9 ]/.test(t) || e.preventDefault() }, onDownloadLinkClick: function() { var e = this.ui.invoicesDataForm.find(".invoices-selected").serialize(); "" == e ? this.ui.invoicesDownloadErrMsg.show() : (this.ui.invoicesDataForm.attr("action", "/my-account/accounting/invoices/download"), this.ui.invoicesDataForm.submit()) }, onDateRangeClearClick: function(t) { this.ui.dateError.addClass("hidden-important"), -1 !== e(t.currentTarget).attr("id").indexOf("start") ? this.ui.searchStartDateDatePicker.val(null) : -1 !== e(t.currentTarget).attr("id").indexOf("end") && this.ui.searchEndDateDatePicker.val(null), this.onSearchCriteriaChanged() } }) }), define("MyAccountSecondarySupplierListView", ["jquery", "marionette", "LoadingSpinnerView"], function(e, t, i) { return t.ItemView.extend({ el: "#content", model: null, loadingSpinnerView: i.getSharedInstance(), ui: { invoicesDataForm: "#invoices-form", searchStartDateDatePicker: "#start-date", searchEndDateDatePicker: "#end-date", searchByDateCheckbox: "#searchByDate", referenceNumberInput: "#referenceNumber", searchByRefNumCheckbox: "#searchByRefNum", searchByLocationCheckbox: "#searchByLocation", locationSelect: "#location", searchButton: "#search-button", selectAllInvoicesCheckbox: "#select-all-invoices", dateError: "#dateError", selectedInvoiceNumbers: "#selectedInvoiceNumbers", printLinkUrl: "#printLinkUrl", invoices: ".invoices-selected", invoicesPrintErrMsg: "#invoicesPrintErrMsg", invoiceDetailLink: ".invoice-detail-link" }, events: { "change @ui.searchStartDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchEndDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByDateCheckbox": function(e) { this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByRefNumCheckbox": "onSearchCriteriaChanged", "keyup @ui.referenceNumberInput": function(e) { this.onReferenceNumberChanged(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByLocationCheckbox": "onSearchCriteriaChanged", "change @ui.locationSelect": function(e) { this.onLocationSelect(e), this.onSearchCriteriaChanged(e) }, "click @ui.searchButton": "onSearchButtonClick", "click @ui.selectAllInvoicesCheckbox": "onSelectAllInvoicesCheckboxClick", "keyup @ui.searchStartDateDatePicker, @ui.searchEndDateDatePicker": "onDateSelectionBtnPress", "click .date-search-clear": "onDateRangeClearClick", "click @ui.printLinkUrl": "onPrintLinkUrlClick", "click @ui.invoices": "onInvoicesCheck", "click @ui.invoiceDetailLink": "secondarySupplierInvoiceDetail" }, initialize: function() { e("#invoices-table").tablesorter({ sortList: [
                    [1, 1]
                ], headers: { 0: { sorter: !1 }, 1: { sorter: "shortDate" }, 2: { sorter: "text" }, 4: { sorter: "text" }, 5: { sorter: "text" }, 6: { sorter: "text" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }) }, onRender: function() { this.initSearchStartDatePicker(), this.initSearchEndDatePicker(), this.onSearchCriteriaChanged() }, initSearchStartDatePicker: function() { this.ui.searchStartDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, initSearchEndDatePicker: function() { this.ui.searchEndDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, onDateChanged: function() { this.ui.searchByDateCheckbox.prop("checked", !0) }, onValidateDate: function() { "" != this.ui.searchStartDateDatePicker.val() && "" != this.ui.searchEndDateDatePicker.val() && (new Date(this.ui.searchStartDateDatePicker.val()) > new Date(this.ui.searchEndDateDatePicker.val()) ? this.ui.dateError.removeClass("hidden-important") : this.ui.dateError.addClass("hidden-important")) }, onLocationSelect: function() { this.ui.searchByLocationCheckbox.prop("checked", !0) }, onReferenceNumberChanged: function() { isBlank(this.ui.referenceNumberInput.val()) ? this.ui.searchByRefNumCheckbox.prop("checked", !1) : this.ui.searchByRefNumCheckbox.prop("checked", !0) }, onSearchCriteriaChanged: function() { var e = this.ui.searchByDateCheckbox.is(":checked") && this.ui.searchStartDateDatePicker.val() && this.ui.searchEndDateDatePicker.val(),
                t = this.ui.searchByRefNumCheckbox.is(":checked") && !isBlank(this.ui.referenceNumberInput.val()),
                i = this.ui.searchByLocationCheckbox.is(":checked") && "0" !== this.ui.locationSelect.val();
            e || t || i ? (this.ui.searchButton.removeClass("button-disabled"), this.ui.searchButton.addClass("dark-grey"), this.searchEnabled = !0) : (this.ui.searchButton.removeClass("dark-grey"), this.ui.searchButton.addClass("button-disabled"), this.searchEnabled = !1) }, onSearchButtonClick: function() { this.searchEnabled && (this.loadingSpinnerView.showSpinner(), this.ui.invoicesDataForm.attr("action", "/my-account/accounting/secondary-supplier/search"), this.ui.invoicesDataForm.submit()) }, onSelectAllInvoicesCheckboxClick: function() { e(".invoices-selected").prop("checked", this.ui.selectAllInvoicesCheckbox.is(":checked")), this.ui.invoicesPrintErrMsg.hide() }, onPrintLinkUrlClick: function(e) { e.preventDefault(); var t = []; return _.each(this.ui.invoices.get(), function(e) { e.checked && t.push(e.value) }), t.length > 0 ? (this.ui.selectedInvoiceNumbers.val(t), this.ui.invoicesDataForm.attr("action", this.ui.printLinkUrl.data("value")), this.ui.invoicesDataForm.attr("target", "_blank"), this.ui.invoicesDataForm.submit(), !1) : void this.ui.invoicesPrintErrMsg.show() }, onInvoicesCheck: function() { var e = this.ui.invoicesPrintErrMsg;
            _.find(this.ui.invoices.get(), function(e) { return e.checked }) && e.hide() }, onDateSelectionBtnPress: function(e) { var t = this.value + String.fromCharCode(e.keyCode); /[^A-Za-z0-9 ]/.test(t) || e.preventDefault() }, onDateRangeClearClick: function(t) { this.ui.dateError.addClass("hidden-important"), -1 !== e(t.currentTarget).attr("id").indexOf("start") ? this.ui.searchStartDateDatePicker.val(null) : -1 !== e(t.currentTarget).attr("id").indexOf("end") && this.ui.searchEndDateDatePicker.val(null), this.onSearchCriteriaChanged() }, secondarySupplierInvoiceDetail: function(t) { var i = e(t.target).data("invoice-number"),
                a = e(t.target).data("location-number"),
                r = "/my-account/accounting/secondary-supplier/details/" + i + "/" + a;
            window.location.href = r } }) }), define("MyAccountMemosListView", ["jquery", "marionette", "LoadingSpinnerView", "EmailFileModalView"], function(e, t, i, a) { return t.ItemView.extend({ el: "#content", model: null, loadingSpinnerView: i.getSharedInstance(), emailFileModalView: null, ui: { memosDataForm: "#memos-form", emailMemosLink: ".email-me", downloadMemosLink: ".download-file", detailsModal: "#memo-modal", searchByDateCheckbox: "#search-date-range", searchStartDateDatePicker: "#start-date", searchEndDateDatePicker: "#end-date", searchByMemoAmountCheckbox: "#search-memo-amount", searchByLocationCheckbox: "#searchByLocation", locationSelect: "#location", memoAmountInput: "#input-memo-amount", memoAmountError: "#error-memo-amount", searchByReferenceNumberCheckbox: "#search-reference-number", referenceNumberInput: "#input-reference-number", searchButton: "#search-button", memoDetailsLink: ".memo-number-link", selectAllMemosCheckbox: "#select-all-memos", memoCheckboxValue: "#memo-checkbox-value", memoCheckboxForm: "#memo-checkbox-form", memosSelectedCheckbox: ".memos-selected", dateError: "#dateError", selectedMemoNumbers: "#selectedMemoNumbers", printLinkUrl: "#printLinkUrl", memos: ".memos-selected", memosDownloadErrMsg: "#memosDownloadErrMsg", memosEmailErrMsg: "#memosEmailErrMsg", memosPrintErrMsg: "#memosPrintErrMsg" }, events: { "change @ui.searchStartDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchEndDateDatePicker": function(e) { this.onDateChanged(e), this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByDateCheckbox": function(e) { this.onValidateDate(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByMemoAmountCheckbox": "onSearchCriteriaChanged", "keyup @ui.memoAmountInput": function(e) { this.onMemoAmountChanged(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByReferenceNumberCheckbox": "onSearchCriteriaChanged", "keyup @ui.referenceNumberInput": function(e) { this.onReferenceNumberChanged(e), this.onSearchCriteriaChanged(e) }, "change @ui.searchByLocationCheckbox": "onSearchCriteriaChanged", "change @ui.locationSelect": "onSearchCriteriaChanged", "click @ui.emailMemosLink": "onEmailMemosLinkClick", "click @ui.searchButton": "onSearchButtonClick", "click @ui.pageLink": "onPageLinkClick", "click @ui.memoDetailsLink": "onMemoDetailsLinkClick", "click @ui.downloadMemosLink": "onDownloadLinkClick", "click @ui.selectAllMemosCheckbox": "onSelectAllMemosCheckboxClick", "click .date-search-clear": "onDateRangeClearClick", "click @ui.printLinkUrl": "onPrintLinkUrlClick", "click @ui.memos": "onMemosCheck" }, initialize: function() { e("#memos-table").tablesorter({ sortList: [
                    [1, 1]
                ], headers: { 0: { sorter: !1 }, 1: { sorter: "shortDate" }, 2: { sorter: "text" }, 3: { sorter: "text" }, 4: { sorter: "currency" } }, cssAsc: "header-sort-up", cssDesc: "header-sort-down" }) }, onRender: function() { this.emailFileModalView = a.getSharedInstance(), this.initSearchStartDatePicker(), this.initSearchEndDatePicker(), this.onSearchCriteriaChanged(), this.ui.memoCheckboxValue.val(""), this.clearSelectedCheckboxes() }, clearSelectedCheckboxes: function() { this.ui.memosSelectedCheckbox.attr("checked", !1) }, initSearchStartDatePicker: function() { this.ui.searchStartDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, initSearchEndDatePicker: function() { this.ui.searchEndDateDatePicker.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: new Date }) }, onEmailMemosLinkClick: function() { var e = this.ui.memosDataForm.find(".memos-selected").serialize(); "" == e ? this.ui.memosEmailErrMsg.show() : (this.ui.memoCheckboxValue.val(e), this.ui.memoCheckboxForm.submit()) }, onSearchButtonClick: function() { this.loadingSpinnerView.showSpinner(); var e = this.ui.memosDataForm.validate({ rules: { memoAmount: { number: !0 } }, errorPlacement: function(e, t) { e.appendTo(t.parent("div").next("div")) }, messages: { memoAmount: { number: this.ui.memoAmountError.val() } } }); return e.form() && this.searchEnabled ? (this.ui.memosDataForm.attr("action", "/my-account/accounting/memos/search"), void this.ui.memosDataForm.submit()) : void this.loadingSpinnerView.hideSpinner() }, onMemoDetailsLinkClick: function(t) { me = this, this.loadingSpinnerView.showSpinner(); var i = e(t.target),
                a = i.data("memo-number"),
                r = "/my-account/accounting/memos/details/" + a;
            window.location.href = r }, onSelectAllMemosCheckboxClick: function() { var e = this.ui.selectAllMemosCheckbox.is(":checked");
            this.$(".memos-selected").prop("checked", e), this.ui.memosDownloadErrMsg.hide(), this.ui.memosEmailErrMsg.hide(), this.ui.memosPrintErrMsg.hide() }, onPrintLinkUrlClick: function(e) { e.preventDefault(); var t = []; return _.each(this.ui.memos.get(), function(e) { e.checked && t.push(e.value) }), t.length > 0 ? (this.ui.selectedMemoNumbers.val(t), this.ui.memosDataForm.attr("action", this.ui.printLinkUrl.data("value")), this.ui.memosDataForm.attr("target", "_blank"), this.ui.memosDataForm.submit(), !1) : void this.ui.memosPrintErrMsg.show() }, onMemosCheck: function() { var e = this.ui.memosDownloadErrMsg,
                t = this.ui.memosEmailErrMsg,
                i = this.ui.memosPrintErrMsg;
            _.find(this.ui.memos.get(), function(e) { return e.checked }) && (e.hide(), t.hide(), i.hide()) }, onDownloadLinkClick: function() { var e = this.ui.memosDataForm.find(".memos-selected").serialize(); "" == e ? this.ui.memosDownloadErrMsg.show() : (this.ui.memosDataForm.attr("action", "/my-account/accounting/memos/download"), this.ui.memosDataForm.submit()) }, onDateChanged: function() { this.ui.searchByDateCheckbox.prop("checked", !0) }, onValidateDate: function() { "" != this.ui.searchStartDateDatePicker.val() && "" != this.ui.searchEndDateDatePicker.val() && (new Date(this.ui.searchStartDateDatePicker.val()) > new Date(this.ui.searchEndDateDatePicker.val()) ? this.ui.dateError.removeClass("hidden-important") : this.ui.dateError.addClass("hidden-important")) }, onMemoAmountChanged: function() { null !== this.ui.memoAmountInput.val() && "" !== this.ui.memoAmountInput.val().trim() ? this.ui.searchByMemoAmountCheckbox.prop("checked", !0) : this.ui.searchByMemoAmountCheckbox.prop("checked", !1) }, onReferenceNumberChanged: function() { null !== this.ui.referenceNumberInput.val() && "" !== this.ui.referenceNumberInput.val().trim() ? this.ui.searchByReferenceNumberCheckbox.prop("checked", !0) : this.ui.searchByReferenceNumberCheckbox.prop("checked", !1) }, onSearchCriteriaChanged: function() { var e = this.ui.searchByDateCheckbox.is(":checked") && this.ui.searchStartDateDatePicker.val() && this.ui.searchEndDateDatePicker.val(),
                t = this.ui.searchByReferenceNumberCheckbox.is(":checked") && null !== this.ui.referenceNumberInput.val() && "" !== this.ui.referenceNumberInput.val().trim(),
                i = this.ui.searchByMemoAmountCheckbox.is(":checked") && null !== this.ui.memoAmountInput.val() && "" !== this.ui.memoAmountInput.val().trim(),
                a = this.ui.searchByLocationCheckbox.is(":checked") && "0" !== this.ui.locationSelect.val();
            e || t || i || a ? (this.ui.searchButton.prop("disabled", !1), this.ui.searchButton.removeClass("button-disabled"), this.searchEnabled = !0) : (this.ui.searchButton.prop("disabled", !0), this.ui.searchButton.addClass("button-disabled"), this.searchEnabled = !1) }, onDateRangeClearClick: function(t) { this.ui.dateError.addClass("hidden-important"), -1 !== e(t.currentTarget).attr("id").indexOf("start") ? this.ui.searchStartDateDatePicker.val(null) : -1 !== e(t.currentTarget).attr("id").indexOf("end") && this.ui.searchEndDateDatePicker.val(null), this.onSearchCriteriaChanged() } }) }), define("PrintView", ["jquery", "marionette"], function(e, t) { return t.ItemView.extend({ el: "#content", onRender: function() { window.print() } }) }), define("SearchResultsPrintView", ["jquery", "marionette", "SearchResultsView"], function(e, t, i) { return t.ItemView.extend({ el: "#content", searchResultsView: null, ui: { searchTabs: "#search-tabs" }, onRender: function() { this.searchResultsView = new i, this.searchResultsView.render(); var t = sessionStorage.getItem("selectedTab"),
                a = sessionStorage.getItem("selectedPage");
            t || (t = this.getSelectedTabNameById()), e(".list-view-div-" + t).each(function() { e(this).hide() }), e(".grid-view-div-" + t).each(function() { e(this).hide() }), e("#list-view-div-" + t + "-" + a).show(), e("#grid-view-div-" + t + "-" + a).show(), window.print() }, getSelectedTabNameById: function() { var t, i = e(this.ui.searchTabs).children().find("li.ui-state-active a").attr("href"); return i && (-1 !== i.indexOf("tires") ? t = "tires" : -1 !== i.indexOf("wheels") ? t = "wheels" : -1 !== i.indexOf("tubes") ? t = "tubes" : -1 !== i.indexOf("supplies") && (t = "supplies")), t } }) }), define("LocationDisplaySelectionView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "SelectLocationInputView", "LocationDisplaySelectionViewModel"], function(e, t, i, a, r, o) { var n = ".js-dc-picker"; return i.LayoutView.extend({ loadingSpinnerView: null, el: n, regions: { selectLocationInputRegion: n + " .js-select-locations-input-region" }, ui: { selectLocationDropdown: "#select-location-dropdown", selectLocationTextfield: "#select-new-location", goButton: "#btn-dc-select-go", invalidLocationLabel: "#dc-picker-input-error" }, events: { "click @ui.goButton": "onSelectGoButtonClick" }, initialize: function(e) { e = e || {}, this.model = e.model || o.getSharedInstance(), this.loadingSpinnerView = e.loadingSpinnerView || a.getSharedInstance() }, onRender: function() { this.ui.selectLocationTextfield.placeholder(), this.initSelectLocationInputRegion() }, initSelectLocationInputRegion: function() { var e = new r({ el: n + " .js-select-location-input-view", preselectedStore: this.model.get("currentStore"), autocompleteConfig: { minLength: 3, delay: 100 } });
            this.listenTo(e, r.Event_EnterKeyKeydown, this.submitNewLocation), this.listenTo(e, r.Event_DropdownChange, this.submitNewLocation), e.render(), this.selectLocationInputRegion.attachView(e) }, submitNewLocation: function() { var e = this.selectLocationInputRegion.currentView.getSelectedStoreNumber(); if (this.validateLocation(e)) { var i = window.location.href.indexOf("?"),
                    a = window.location.href.indexOf("#"),
                    r = 0 > a ? window.location.href : window.location.href.substring(0, a); if (0 > i) window.location = r + "?new-location=" + e;
                else { var o = r.substring(0, i),
                        n = r.substring(i + 1),
                        s = n.split("&"),
                        l = o + "?";
                    t.each(s, function(e, t) { var i = t.substring(0, t.indexOf("=")); "new-location" !== i && (l += t + "&") }), window.location = l + "new-location=" + e } this.loadingSpinnerView.showSpinner() } }, validateLocation: function(e) { return e ? !0 : (this.ui.invalidLocationLabel.html(this.model.get("invalidLocationMessage")), !1) }, onSelectGoButtonClick: function() { this.submitNewLocation() } }) }), define("QuoteSetupListView", ["jquery", "marionette", "underscore"], function(e, t) { return t.ItemView.extend({ el: "#content", ui: { headerMessageIndicatorLabel: ".header-message-indicator" }, onRender: function() { e(".header-message-indicator.added-check").data("profile-saved") && (e(".placeholder").hide(), e(".header-message-indicator.added-check").fadeIn("fast", function() { setTimeout(function() { e(".header-message-indicator").hide(), e(".placeholder").show() }, 5e3) })), e(".quote-added-check").data("profile-saved") && (e(".placeholder").hide(), e(".quote-added-check").fadeIn("fast", function() { setTimeout(function() { e(".quote-added-check").hide(), e(".placeholder").show() }, 5e3) })) } }) }), define("MyAccountLocationSettingsView", ["jquery", "underscore", "marionette", "QuotePreferencesView"], function(e, t, i, a) {
    return i.ItemView.extend({
        quotePreferencesView: null,
        el: "#myaccount-location-settings",
        ui: { selectLocation: "#selectLocation", uploadLogoButton: "#upload-logo-button", imageFileInput: "#file-input", myAccountLocationsForm: "#myAccountLocationsForm", locationSaveButton: "#location-settings-save", invalidFileUploadLabel: ".js-invalid-file-upload-label", invalidImageText: "#invalidImageText", invalidImageDimensions: "#invalidImageDimensions", invalidDimensionText: "#invalidDimensionText", invalidFileText: "#invalidDimensionText", leftPanelError: "#left-panel-settings-error", rightPanelError: "#right-panel-settings-error", addPopupLink: ".fa-plus", dropdownClick: ".dropdown", removeClick: ".fa-trash", editClick: ".fa-edit", deleteCobrandLogo: "#cobrand-logo-delete-link", upDownButton: ".up-btn , .down-btn", displayCobrandLogo: ".cobranding-margin", displayBrandLogoRadio: "#displayBrandLogo", cobrandLogoHomePageOption: "#cobrandLogo-homePage", cobrandLogoComparePageOption: "#cobrandLogo-comparePage", cobrandLogoRetailQuotePageOption: "#cobrandLogo-retailQuote", locationSettingTabs: "#location-settings-tabs" },
        events: { "change @ui.selectLocation": "onSelectLocationChanged", "click @ui.displayCobrandLogo": "onSelectDisplayCobrandLogo", "click @ui.uploadLogoButton": "onUploadLogoButtonClick", "click @ui.locationSaveButton": "onLocationSaveButtonClick", "click @ui.addPopupLink": "addPopupOpenLink", "click @ui.dropdownClick": "dropdownLinkClick", "click @ui.removeClick": "removeLinkClick", "click @ui.editClick": "editLinkClick", "click @ui.deleteCobrandLogo": "deleteCobrandLogoImage", "click @ui.upDownButton": "onUpDownClick" },
        initialize: function(e) { e = e || {}, this.quotePreferencesView = new a, this.quotePreferencesView.render() },
        onRender: function() { this.ui.locationSettingTabs.find(e(".tab-0").addClass("ui-tabs-active")), this.initializeErrorFields(), checkExpireDays(), e(".form-control").on("keypress", function(e) { 32 !== e.which || this.value.length || e.preventDefault() }), e(".form-control").on("keypup", function() { " " == e(this).val() && e(this).val("") }), e("#selectDialogbox").dialog({ autoOpen: !1, width: 600, modal: !0, buttons: [{ addClass: "btn", text: saveQuoteErrorMessages["text.myquote.location.settings.add"], id: "button", click: function() { e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide() } }, { addClass: "btn", text: saveQuoteErrorMessages["text.myquote.location.settings.cancel"], id: "cancelButton", click: function() { e(this).dialog("close"), e(".selectDropdownForm").validate().resetForm(), e(".textbox").removeClass("error") } }] }), e("#selectDropdown").keypress(function(e) { 13 == e.keyCode && e.preventDefault() }), e(document).on("click", ".btn-add", function(t) { if (e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDropdown").valid()) { t.preventDefault(); var i = e("#selectDropdown").val(); if ("" != i) { var a = e(".textbox-dropdown").children().length; if (5 > a) { var r = addQuoteStatus(a);
                            r > a && (e(".textbox-dropdown").append('<li><span class="listValue">' + i + '</span> <span class="fa fa-edit"></span><span class="fa fa-trash"></span></li>'), selectListValue(), e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDialogbox").dialog("close")) } var o = e(".textbox-dropdown").children().length;
                        5 == a ? e(".quoteStatusCountErrMsg").show() : a == o && e(".duplicateQuoteStatusErrMsg").show() } else e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").show() } }), e(document).on("click", ".btn-update", function(t) { if (t.preventDefault(), e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDropdown").valid()) { var i = e("#selectDropdown").val(); if ("" != i) { var a = e("#button").attr("rel"),
                            r = e(".textbox-dropdown li:eq(" + a + ")").find(".listValue").text();
                        editQuoteStatus(r, i), e(".textbox-dropdown li:eq(" + a + ")").find(".listValue").text(i), e("#selectDialogbox").dialog("close") } } var o = e("#selectDropdown").val(); "" == o && (e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").show()) }) },
        initializeErrorFields: function() { var e = this.ui.invalidImageDimensions.val(),
                t = this.ui.invalidImageText.val();
            t && "true" == t ? (this.ui.invalidFileUploadLabel.show(), this.ui.invalidFileUploadLabel.html(this.ui.invalidFileText.val())) : e && "true" == e && (this.ui.invalidFileUploadLabel.show(), this.ui.invalidFileUploadLabel.html(this.ui.invalidDimensionText.val())), this.isValidSearchSettings() ? this.ui.leftPanelError.hide() : this.ui.leftPanelError.show(), this.isValidRightPanelSettings() ? this.ui.rightPanelError.hide() : this.ui.rightPanelError.show() },
        onSelectLocationChanged: function(t) {
            console.log("/my-account/locations/" + e(t.target).val()), window.location = "/my-account/locations/" + e(t.target).val()
        },
        onSelectDisplayCobrandLogo: function() { var e = this.ui.displayBrandLogoRadio.is(":checked");
            e ? (this.ui.cobrandLogoHomePageOption.attr("disabled", !1), this.ui.cobrandLogoComparePageOption.attr("disabled", !1), this.ui.cobrandLogoRetailQuotePageOption.attr("disabled", !1)) : (this.ui.cobrandLogoHomePageOption.attr("disabled", !0).attr("checked", !1), this.ui.cobrandLogoComparePageOption.attr("disabled", !0).attr("checked", !1), this.ui.cobrandLogoRetailQuotePageOption.attr("disabled", !0).attr("checked", !1)) },
        onUploadLogoButtonClick: function(e) { e.preventDefault ? e.preventDefault() : e.returnValue = !1, this.ui.imageFileInput.click() },
        isKeyworkSearchDisplayOn: function() { return "0" !== e("input[name=keywordSearchDisplay]:checked").val() },
        isVehicleSearchDisplayOn: function() { return "0" !== e("input[name=vehicleSearchDisplay]:checked").val() },
        isRefineBySearchDisplayOn: function() { return "0" !== e("input[name=refineBySearchDisplay]:checked").val() },
        isProductTypeSearchDisplayOn: function() { return "0" !== e("input[name=productTypeSearchDisplay]:checked").val() },
        isVinSearchDisplayOn: function() { return "0" !== e("input[name=vinSearchDisplay]:checked").val() },
        isLicensePlateSearchDisplayOn: function() { return "0" !== e("input[name=licensePlateSearchDisplay]:checked").val() },
        isValidSearchSettings: function() { return this.isKeyworkSearchDisplayOn() || this.isVehicleSearchDisplayOn() || this.isProductTypeSearchDisplayOn() || this.isVinSearchDisplayOn() || this.isLicensePlateSearchDisplayOn() },
        isMyListDisplayOn: function() { return "0" !== e("input[name=myListDisplay]:checked").val() },
        isMyQuoteDisplayOn: function() { return "0" !== e("input[name=myQuoteDisplay]:checked").val() },
        isOrderHistoryDisplayOn: function() { return "0" !== e("input[name=orderHistoryDisplay]:checked").val() },
        isMyReturnsDisplayOn: function() { return "0" !== e("input[name=myReturnsDisplay]:checked").val() },
        isMyWarrantyDisplayOn: function() { return "0" !== e("input[name=myWarrantyDisplay]:checked").val() },
        isValidRightPanelSettings: function() { return this.isMyListDisplayOn() || this.isMyQuoteDisplayOn() || this.isOrderHistoryDisplayOn() || this.isMyReturnsDisplayOn() || this.isMyWarrantyDisplayOn() },
        onLocationSaveButtonClick: function(e) { e.preventDefault ? e.preventDefault() : e.returnValue = !1, this.isValidSearchSettings() ? this.ui.leftPanelError.hide() : this.ui.leftPanelError.show(), this.isValidRightPanelSettings() ? this.ui.rightPanelError.hide() : this.ui.rightPanelError.show(), this.ui.invalidFileUploadLabel.is(":visible") || this.ui.leftPanelError.is(":visible") || this.ui.rightPanelError.is(":visible") || this.ui.myAccountLocationsForm.submit() },
        addPopupOpenLink: function() { e(".ui-dialog-titlebar").addClass("ui-retail-quote-popup-header"); var t = saveQuoteErrorMessages["text.myquote.location.settings.add"];
            e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDialogbox").dialog("open"), e(".ui-dialog").addClass("js_ui-dialog-custom"), e("#selectDropdown").val(""), e("#button").html(t).addClass("btn-add").removeClass("btn-update"), e(".deleteQuoteTitle").text(saveQuoteErrorMessages["text.myaccount.location.deleteQuoteTitle"]), e(".ui-dialog-title").text(saveQuoteErrorMessages["text.myaccount.location.addQuoteStatus"]); var i = saveQuoteErrorMessages["text.myquote.location.settings.cancel"];
            e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDialogbox").dialog("open"), e(".ui-dialog").addClass("js_ui-dialog-custom"), e("#cancelButton").html(i) },
        dropdownLinkClick: function() { e(".textbox-dropdown").slideToggle() },
        removeLinkClick: function(t) { t.preventDefault(), e(t.currentTarget).parent("li").remove(); var i = e(".inputDropdown").val(),
                a = e(t.currentTarget).parent("li").find(".listValue").text();
            removeQuoteStatus(a), i == a && e(".inputDropdown").val("Select"); var r = e(".textbox-dropdown li").length;
            0 == r && e(".inputDropdown").val("Select") },
        editLinkClick: function(t) { t.preventDefault(), e(".ui-dialog-titlebar").addClass("ui-retail-quote-popup-header"); var i = e(t.currentTarget).parent("li").find(".listValue").text(),
                a = e(t.currentTarget).parent("li").index(),
                r = saveQuoteErrorMessages["text.myquote.location.settings.update"],
                o = saveQuoteErrorMessages["text.myquote.location.settings.cancel"];
            e(".quoteStatusCountErrMsg").hide(), e(".duplicateQuoteStatusErrMsg").hide(), e(".quoteStatusBlankErrMsg").hide(), e("#selectDialogbox").dialog("open"), e("#selectDropdown").val(i), e("li:eq(" + a + ")").find(".listValue").text(i), e("#button").attr("rel", a), e("#button").html(r).addClass("btn-update").removeClass("btn-add"), e(".ui-dialog").addClass("js_ui-dialog-custom"), e("#cancelButton").html(o), e(".deleteQuoteTitle").text(saveQuoteErrorMessages["text.myquote.location.deleteQuoteUpdate"]), e(".ui-dialog-title").text(saveQuoteErrorMessages["text.myaccount.location.updateQuoteStatus"]) },
        deleteCobrandLogoImage: function() { var t = e("#locationNumber").val(),
                i = "/my-account/locations/delete-cobrand-logo/" + t;
            e.ajax({ url: i, success: function(t) { "success" === t && (e("#cobrand-logo-image").attr("src", ""), e("#cobrand-logo-image").hide(), e(".delete-link").hide()) } }) },
        onUpDownClick: function(t) { t.preventDefault(), t.stopPropagation(); var i = e(t.currentTarget).parents("table"),
                a = e(i).find("tr"),
                r = parseInt(e(a[a.length - 1]).attr("index"), 10),
                o = e(t.currentTarget).parents("tr"),
                n = parseInt(o.attr("index"));
            e(t.currentTarget).hasClass("up-btn") ? n > 1 && o.prev().before(o) : r > n && o.next().after(o), a = e(i).find("tr"), e.each(a, function(t, i) { e(i).attr("index", t + 1); var a = e(i).find('input[type="hidden"]');
                a.val(e(i).attr("index")) }); var s = i.find(".up-btn");
            s.removeClass("disabled"), s.prop("disabled", !1), e(s[0]).addClass("disabled"), e(s[0]).prop("disabled", !0); var l = i.find(".down-btn");
            l.removeClass("disabled"), l.prop("disabled", !1), e(l[l.length - 1]).addClass("disabled"), e(l[l.length - 1]).prop("disabled", !0) }
    })
}), define("MyAccountLocationSettingBrandsView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#location-brands-setup", ui: { brandsForm: "#locationPreferredBrandsForm", brandsSaveButton: "#brands-save", brandsclearlink: "#brands-clear", preferredBrandsCheckboxes: "input[name=preferredBrands]", privateBrandsCheckboxes: "input[name=privateBrands]", flagBrandsCheckboxes: "input[name=flagBrands]", brandsTab: "#listTabs", activeTab: "#active-tab" }, events: { "click @ui.brandsSaveButton": "onClickSaveBrands", "click @ui.brandsclearlink": "onClickClearBands", "click @ui.preferredBrandsCheckboxes": "onClickPreferredCheckboxes", "click @ui.privateBrandsCheckboxes": "onClickPrivateCheckboxes", "click @ui.flagBrandsCheckboxes": "onClickFlagCheckboxes" }, maximumAllowedBrands: 15, initialize: function() {}, onRender: function() { var t = this.ui.activeTab.text();
            e("#listTabs").tabs("" != t && "flag" === t ? { active: 2 } : "" != t && "private" === t ? { active: 1 } : { active: 0 }) }, onClickSaveBrands: function() { this.ui.brandsForm.submit() }, onClickClearBands: function() { "true" == e('[aria-controls="preferred-brands-tab"]').attr("aria-selected") ? e("#listTabs").find("input[name='preferredBrands']:checked").removeAttr("checked") : "true" == e('[aria-controls="private-brands-tab"]').attr("aria-selected") ? e("#listTabs").find("input[name='privateBrands']:checked").removeAttr("checked") : e("#listTabs").find("input[name='flagBrands']:checked").removeAttr("checked") }, onClickPreferredCheckboxes: function() { var t = e("input[name='preferredBrands']:checked").length; return t > this.maximumAllowedBrands ? this.showAlert() : void 0 }, onClickPrivateCheckboxes: function() { var t = e("input[name='privateBrands']:checked").length; return t > this.maximumAllowedBrands ? this.showAlert() : void 0 }, onClickFlagCheckboxes: function() { var t = e("input[name='flagBrands']:checked").length; return t > this.maximumAllowedBrands ? this.showAlert() : void 0 }, showAlert: function() { return e(".user-account-management .header-message-indicator").slideDown(function() { setTimeout(function() { e(".user-account-management .header-message-indicator").slideUp() }, 2e3) }), !1 } }) }), define("MyAccountMainView", ["jquery", "marionette", "underscore", "RadioButtonBehavior", "TextboxBehavior"], function(e, t, i, a) { return t.ItemView.extend({ el: ".left-rounded-border.tabs-content", radioButtonBehavior: null, emailRadioBehavior: null, faxRadioBehavior: null, ui: { headerMessageIndicatorLabel: ".header-message-indicator.added-check", placeholder: ".placeholder", emailRadio: "#email", faxRadio: "#fax", bothRadio: "#both", emailText: "#commEmail", faxText: "#commFax", bothText: "#commBoth", faxTexthidden: "#commFaxHidden" }, events: { "click @ui.emailRadio": "onRadioButtonSelected", "click @ui.faxRadio": "onRadioButtonSelected", "click @ui.bothRadio": "onRadioButtonSelected", "keyup @ui.faxText": "onEnterFaxNumber" }, onRender: function() { if (this.radioButtonBehavior = new a, this.emailRadioBehavior = this.radioButtonBehavior.radioButton({ text: e("#commEmail") }, !0), this.faxRadioBehavior = this.radioButtonBehavior.radioButton({ text: e("#commFax") }, !0), "none" === this.ui.headerMessageIndicatorLabel.css("display")) { var t = this;
                this.ui.placeholder.hide(), this.ui.headerMessageIndicatorLabel.fadeIn("fast", function() { setTimeout(function() { t.ui.headerMessageIndicatorLabel.hide(), t.ui.placeholder.show() }, 2e3) }) } this.activateCommFields() }, onRadioButtonSelected: function(t) { var i = e(t.target)[0];
            i == this.ui.emailRadio[0] ? (this.emailRadioBehavior.activate(), this.faxRadioBehavior.deactivate()) : i == this.ui.faxRadio[0] ? (this.emailRadioBehavior.deactivate(), this.faxRadioBehavior.activate()) : (this.emailRadioBehavior.activate(), this.faxRadioBehavior.activate()) }, onEnterFaxNumber: function() { this.ui.faxTexthidden.val(this.ui.faxText.val()) }, activateCommFields: function() { "checked" === this.ui.emailRadio.attr("checked") ? this.emailRadioBehavior.activate() : "checked" === this.ui.faxRadio.attr("checked") && this.faxRadioBehavior.activate() } }) }), define("MyAccountUpdateContactView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#contactForm", ui: { $btnSave: "#btn-save", globalErrorMessage: "#globalErrorMessage", contactNameError: "#contactNameError", contactEmailError: "#contactEmailError", contactPhoneError: "#contactPhoneError", contactFaxError: "#contactFaxError", updateContactForm: "#updateContactForm", contactName: "#contactName", contactEmail: "#contactEmail", contactPhone: "#contactPhone", contactFax: "#contactFax" }, events: { "click @ui.$btnSave": "validateContactInformation" }, validateContactInformation: function() { var e = !0,
                t = this.ui.contactName.val(),
                i = this.ui.contactEmail.val(),
                a = this.ui.contactPhone.val(),
                r = this.ui.contactFax.val(),
                o = "\\b[A-Za-z0-9._%+'-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b",
                n = "^\\(?([2-9][0-9]{2})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$";
            this.ui.contactNameError.addClass("hidden-important"), this.ui.contactEmailError.addClass("hidden-important"), this.ui.contactPhoneError.addClass("hidden-important"), this.ui.contactFaxError.addClass("hidden-important"), t.length < 4 && (this.ui.globalErrorMessage.removeClass("hidden-important"), this.ui.contactNameError.removeClass("hidden-important"), e = !1), i.match(o) || (this.ui.globalErrorMessage.removeClass("hidden-important"), this.ui.contactEmailError.removeClass("hidden-important"), e = !1), a.trim().length > 0 && (a.match(n) || (this.ui.globalErrorMessage.removeClass("hidden-important"), this.ui.contactPhoneError.removeClass("hidden-important"), e = !1)), r.trim().length > 0 && (r.match(n) || (this.ui.globalErrorMessage.removeClass("hidden-important"), this.ui.contactFaxError.removeClass("hidden-important"), e = !1)), 1 == e && (this.ui.globalErrorMessage.addClass("hidden-important"), this.ui.updateContactForm.submit()) } }) }), define("SelectLocationModalView", ["jquery", "underscore", "marionette", "LoadingSpinnerView", "GlobalContentMessagesModel", "SelectLocationInputView"], function(e, t, i, a, r, o) { return i.LayoutView.extend({ loadingSpinnerView: null, globalContentMessagesModel: null, preselectedStore: null, el: "body", ui: { selectLocationForm: "#selectLocationForm", hiddenLocationField: ".select-location-hidden", invalidLocationLabel: "#loc-input-error", continueLink: "#btn-continue", cancelLink: "#btn-cancel", languageList: ".languageList", languageChange: ".language-change-dropdown" }, events: { "click @ui.continueLink": "onContinueLinkClick", "click @ui.cancelLink": "onCancelLinkClick", "click @ui.languageChange": "languageChangeInSelectLoc" }, regions: { selectLocationInputRegion: ".js-select-location-modal-view .js-select-locations-input-region" }, initialize: function(e) { e = e || {}, this.loadingSpinnerView = e.loadingSpinnerView || a.getSharedInstance(), this.globalContentMessagesModel = e.globalContentMessagesModel || r.getSharedInstance(), this.preselectedStore = e.preselectedStore || this.preselectedStore }, onRender: function() { this.initSelectLocationInputRegion() }, initSelectLocationInputRegion: function() { var e = this.constructor.prototype.el + " " + o.prototype.el,
                t = new o({ el: e, preselectedStore: this.preselectedStore });
            this.listenTo(t, o.Event_EnterKeyKeydown, this.onLocationInputSelectEnterKeyKeydown), this.selectLocationInputRegion.attachView(t.render()) }, onLocationInputSelectEnterKeyKeydown: function() { this.submitSelectLocationForm() }, submitSelectLocationForm: function() { var e = this.selectLocationInputRegion.currentView.getSelectedStoreNumber();
            e ? (this.loadingSpinnerView.showSpinner(), this.ui.hiddenLocationField.val(e), this.ui.selectLocationForm.submit(), WebStore.Cart.refreshNavBarComponent("lists")) : this.displayInvalidLocationLabel() }, displayInvalidLocationLabel: function() { this.ui.invalidLocationLabel.html(this.globalContentMessagesModel.get("selectLocationInvalidMessage")), this.ui.invalidLocationLabel.addClass("error") }, onContinueLinkClick: function() { this.submitSelectLocationForm() }, displayModal: function() { this.$el.dialog("open") }, onCancelLinkClick: function() { this.$el.one("dialogclose", t.bind(function() { this.trigger(this.constructor.Event_CancelLinkClick) }, this)), this.$el.dialog("close") }, selectStore: function(e) { this.selectLocationInputRegion.currentView.selectStore(e) }, languageChangeInSelectLoc: function(e) { this.ui.languageList.is(":hidden") ? this.ui.languageList.show() : this.ui.languageList.hide(), e.stopPropagation() } }, { _sharedInstance: null, getSharedInstance: function() { return (!this._sharedInstance || this._sharedInstance.isDestroyed) && (this._sharedInstance = new this, this._sharedInstance.render()), this._sharedInstance }, Event_CancelLinkClick: "cancel:link:click" }) }), define("SelectLocationInputView", ["jquery", "underscore", "marionette", "SelectLocationInputViewModel"], function(e, t, i, a) { return i.ItemView.extend({ preselectedStore: null, autocompleteConfig: null, el: ".js-select-location-input-view", model: null, ui: { locationInputAutocomplete: ".js-location-input-autocomplete", locationInputDropdown: ".js-location-input-dropdown" }, triggers: { "change .js-location-input-dropdown": "dropdown:change" }, events: { "keydown @ui.locationInputAutocomplete": "onLocationInputAutocompleteKeydown" }, initialize: function(e) { e = e || {}, this.model = e.model || this.model || a.getSharedInstance(), this.preselectedStore = e.preselectedStore || null, this.autocompleteConfig = e.autocompleteConfig || {} }, onRender: function() { this.initSelectLocationUiElement() }, initSelectLocationUiElement: function() { this.model.get("storeLocations").length > 0 && (this.isLocationInputDropdown() ? this.initSelectLocationInputDropdown() : this.initSelectLocationInputAutocomplete()) }, isLocationInputDropdown: function() { return this.model.get("storeLocations").length <= parseInt(this.model.get("maxStoreLocationsForDropdown")) }, initSelectLocationInputAutocomplete: function() { t.extend(this.autocompleteConfig, { source: this.generateAutocompleteSource() }), this.ui.locationInputAutocomplete.autocomplete(this.autocompleteConfig) }, initSelectLocationInputDropdown: function() { var e = [];
            this.ui.locationInputDropdown.empty(), t.each(this.generateAutocompleteSource(), function(t) { var i = '<option value="' + t.value + '">' + t.label + "</option>";
                e.push(i) }), this.ui.locationInputDropdown.append(e.join("")), this.ui.locationInputDropdown.val(this.preselectedStore) }, selectStore: function(e) { this.ui.locationInputDropdown.val(e) }, generateAutocompleteSource: function() { var e = []; return this.model.get("storeLocations").sort(function(e, t) { if (null == e.storeDisplayName || null == t.storeDisplayName) return 0; var i = e.storeDisplayName.toLowerCase(),
                    a = t.storeDisplayName.toLowerCase(); return a > i ? -1 : i > a ? 1 : 0 }), t.each(this.model.get("storeLocations"), function(t) { var i = t.storeDisplayName ? t.storeDisplayName : t.store + " - " + t.storeName + " - " + t.number;
                e.push({ label: i, value: t.number }) }, this), e }, getSelectedStore: function() { return this.isLocationInputDropdown() ? this.ui.locationInputDropdown.find(":selected").val() : this.ui.locationInputAutocomplete.val() }, getSelectedStoreNumber: function() { var e = this.getSelectedStore(),
                i = t.find(this.model.get("storeLocations"), function(t) { return t.store === e || t.number === e }, this); return t.isUndefined(i) ? null : i.number }, onLocationInputAutocompleteKeydown: function(e) { return 13 == e.which ? (this.trigger(this.constructor.Event_EnterKeyKeydown), !1) : !0 } }, { Event_EnterKeyKeydown: "enter:key:keydown", Event_DropdownChange: "dropdown:change" }) }), define("EmailFileModalView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#content", loadingSpinnerView: a.getSharedInstance(), ui: { emailButton: "#btn-email-file", requiredMessage: "#error-email-address-required", invalidMessage: "#error-email-address-invalid", formName: "#form-name", emailUrl: "#email-url", emailAddress: "#email", successMessage: "#email-success-label", errorMessage: "#email-error-label", paymentDueCheckboxValue: "#paymentDueCheckboxValue" }, events: { "click @ui.emailButton": "onEmailButtonClick", "keypress @ui.emailAddress": "onEmailInputKeypress" }, onEmailButtonClick: function() { var t = e("#email-file-modal").validate({ errorPlacement: function(e, t) { e.appendTo(t.prev("div.field-label")), e.addClass("stacked-label") }, messages: { email: { required: this.ui.requiredMessage.val(), email: this.ui.invalidMessage.val() } } });
            1 == t.form() && this.sendEmail() }, sendEmail: function() { var i = this,
                r = (this.ui.formName.val(), this.ui.paymentDueCheckboxValue.val());
            a.getSharedInstance().showSpinner(), e.ajax({ url: this.ui.emailUrl.val() + "/" + this.ui.emailAddress.val() + "/", type: "post", data: r, success: function(e) { a.getSharedInstance().hideSpinner(), "success" == e ? i.ui.successMessage.fadeIn("fast", t.bind(function() { setTimeout(t.bind(function() { i.ui.successMessage.fadeOut(), modalClose("email-file") }, this), 2e3) }, this)) : i.ui.errorMessage.fadeIn("fast", t.bind(function() { setTimeout(t.bind(function() { i.ui.errorMessage.fadeOut() }, this), 2e3) }, this)) } }) }, onEmailInputKeypress: function(e) { 13 == e.which && (e.preventDefault(), this.onEmailButtonClick()) } }, { _sharedInstance: null, getSharedInstance: function() { return (!this._sharedInstance || this._sharedInstance.isDestroyed) && (this._sharedInstance = new this, this._sharedInstance.render()), this._sharedInstance } }) }), define("ResourceCenterProductImagesView", ["jquery", "marionette", "LoadingSpinnerView"], function(e, t, i) { return t.ItemView.extend({ el: "#content", model: null, loadingSpinnerView: i.getSharedInstance(), ui: { productImagesForm: "#product-images-search-form", brandSelect: "#wheels-select-brand", brandName: "#wheels-brand-name", styleSelect: "#wheels-select-style", styleName: "#style-brand-name", diameterInput: "#wheel-diameter", goButton: "#btn-go-search-image", downloadSelectedButton: "#btn-download-selected", locationNumber: "#location-number", selectedStyle: "#selected-style", goButtonError: "#gobutton-error" }, events: { "change @ui.brandSelect": "onBrandChange", "change @ui.styleSelect": "onSelectChange", "click @ui.goButton": "onGoButtonClick", "click @ui.downloadSelectedButton": "onDownloadSelectedClick" }, onRender: function() { this.onBrandChange(), e(".product-image").each(function() { var t = e(this).attr("id").substring(6);
                this.naturalWidth && this.naturalHeight && e("#image-size-" + t).text("(" + this.naturalWidth + "x" + this.naturalHeight + " px)") }) }, onBrandChange: function() { this.resetErrorMessage(); var t = this,
                i = { locationNumber: this.ui.locationNumber.val(), productGroup: "0", brands: this.ui.brandSelect.val(), type: "wheels" };
            e.ajax({ url: "/ajax/brands/styles", type: "post", data: i }).done(function(i) { t.ui.styleSelect.empty(), e.each(i.options, function(e, i) { var a = t.ui.selectedStyle.val(); if (i.value == a) { var r = '<option value="' + i.value + '" selected="selected">' + i.text + "</option>";
                        t.ui.styleSelect.append(r) } else { var r = '<option value="' + i.value + '">' + i.text + "</option>";
                        t.ui.styleSelect.append(r) } }); var a = t.ui.brandSelect.find("option:selected").text();
                t.ui.brandName.val("..." == a ? "" : t.ui.brandSelect.find("option:selected").text()) }) }, onSelectChange: function() { this.resetErrorMessage(); var e = this.ui.styleSelect.find("option:selected").text();
            this.ui.styleName.val("..." == e ? "" : this.ui.styleSelect.find("option:selected").text()) }, onGoButtonClick: function() { var e = this.ui.brandSelect.find("option:selected").text(),
                t = this.ui.styleSelect.find("option:selected").text(); if ("..." != e || "..." != t || this.ui.diameterInput && "" != this.ui.diameterInput.val()) this.ui.productImagesForm.attr("action", "/resource-center/product-images/search"), this.ui.productImagesForm.submit();
            else { var i = this.ui.goButton.data("go-message");
                this.ui.goButtonError.html(i), this.ui.goButtonError.show() } }, onDownloadSelectedClick: function() { var t = e("input[name=selectedProducts]:checked").length,
                i = this.ui.downloadSelectedButton.data("download-message"); if (t > 10) alert(i);
            else { var a = this.ui.productImagesForm.find(".download-select").serialize(); "" == a ? alert(i) : (this.ui.productImagesForm.attr("action", "/resource-center/product-images/search/download-multiple-images"), this.ui.productImagesForm.submit()) } }, resetErrorMessage: function() { this.ui.goButtonError.html("") } }) }), define("QuoteSetupProductProfilesView", ["jquery", "underscore", "marionette", "QuoteSetupProductProfilesViewModel", "epoxy", "accounting", "LoadingSpinnerView"], function(e, t, i, a, r, o, n) {
    var s = i.ItemView.extend({
        loadingSpinnerView: null,
        template: !1,
        el: ".js-rq-setup-select-product-type-component",
        ui: { costRangeMinCostInput: ".js-cost-range-min-cost-input", costRangeMinCostInputFr: ".js-cost-range-min-cost-input-fr", costRangeMaxCostInput: ".js-cost-range-max-cost-input", costRangeMaxCostInputFr: ".js-cost-range-max-cost-input-fr", markupGrossProfitMinimumInput: ".js-gross-profit-minimum-input", markupGrossProfitMinimumInputFr: ".js-gross-profit-minimum-input-fr", markupMarkupByMinimumInput: ".js-markup-by-minimum-input", markupMarkupByMinimumInputFr: ".js-markup-by-minimum-input-fr", markupFlatPriceInput: ".js-markup-flat-price-input", markupFlatPriceInputFr: ".js-markup-flat-price-input-fr", roundingFixedCentsInput: ".js-rounding-fixed-cents-input", roundingFixedCentsInputFr: ".js-rounding-fixed-cents-input-fr", profileNameInput: ".js-profile-name-input", invalidProfileNameLabel: ".js-invalid-profile-name-label", groupOfItemsSection: ".js-apply-to-group-of-items-section", applyToGroupGroupDropdown: ".js-apply-to-group-group", applyToGroupBrandDropdown: ".js-apply-to-group-brand", applyToSingleItemSection: ".js-apply-to-single-item-section", singleItemProductNumberInput: ".js-single-item-product-number", productNumberAlternativeRadio: ".js-product-number-alternative-radio", invalidCostRangeLabel: ".js-invalid-cost-range-label", markupGrossProfitPercentInput: ".js-gross-profit-percent-input", markupMarkupByPercentInput: ".js-markup-by-percent-input", applyTaxesSectionContent: ".js-apply-taxes-section-content", applyTaxesCheckbox: ".js-taxes-addon-checkbox", applyTaxesAddonItems: ".js-apply-taxes-section-content .js-addon-item", applyFeesSectionContent: ".js-apply-fees-section-content", applyFeesCheckbox: ".js-fees-addon-checkbox", applyFeesAddonItems: ".js-apply-fees-section-content .js-addon-item", applyServicesSectionContent: ".js-apply-services-section-content", applyServicesCheckbox: ".js-services-addon-checkbox", applyServicesAddonItems: ".js-apply-services-section-content .js-addon-item", cancelLink: ".js-cancel-link", saveLink: ".js-save-link", invalidProfileLabel: ".js-invalid-profile-label" },
        events: { "blur @ui.costRangeMinCostInput": "onCurrencyInputBlur", "blur @ui.costRangeMinCostInputFr": "onCurrencyInputBlurFr", "blur @ui.costRangeMaxCostInput": "onCurrencyInputBlur", "blur @ui.costRangeMaxCostInputFr": "onCurrencyInputBlurFr", "blur @ui.markupGrossProfitMinimumInput": "onCurrencyInputBlur", "blur @ui.markupGrossProfitMinimumInputFr": "onCurrencyInputBlurFr", "blur @ui.markupMarkupByMinimumInput": "onCurrencyInputBlur", "blur @ui.markupFlatPriceInput": "onCurrencyInputBlur", "blur @ui.roundingFixedCentsInput": "onRoundingFixedCentsInputBlur", "change @ui.applyToGroupGroupDropdown": "onApplyToGroupGroupDropdownChange", "change @ui.applyToGroupBrandDropdown": "onApplyToGroupBrandDropdownChange", "blur @ui.singleItemProductNumberInput": "onSingleItemProductNumberInputBlur", "change @ui.productNumberAlternativeRadio": "onProductNumberAlternativeRadioChange", "blur @ui.markupGrossProfitPercentInput": "onPercentInputBlur", "blur @ui.markupMarkupByPercentInput": "onPercentInputBlur", "click @ui.applyTaxesCheckbox": "onApplyTaxesCheckboxClick", "click @ui.applyFeesCheckbox": "onApplyFeesCheckboxClick", "click @ui.applyServicesCheckbox": "onApplyServicesCheckboxClick", "click @ui.applyTaxesAddonItems": "onApplyTaxesAddonItemClick", "click @ui.applyFeesAddonItems": "onApplyFeesAddonItemClick", "click @ui.applyServicesAddonItems": "onApplyServicesAddonItemClick", "click @ui.cancelLink": "onCancelLinkClick", "click @ui.saveLink": "onSaveLinkClick" },
        modelEvents: { "post:save:success": "onPostSaveSuccess", "change:shouldReloadPage": "onShouldReloadPageChange" },
        bindings: { ".js-markup-preview-price": "text:formatMoney(markupPreviewPrice)", "@ui.costRangeMinCostInput": "enabled:isCostRangeChoiceRange, classes:{disabled:not(isCostRangeChoiceRange)}, value:formatMoney(costRangeMinCost)", "@ui.costRangeMaxCostInput": "enabled:isCostRangeChoiceRange, classes:{disabled:not(isCostRangeChoiceRange)}, value:formatMoney(costRangeMaxCost)", "@ui.markupGrossProfitMinimumInput": "enabled:isMarkupChoiceGross, classes:{disabled:not(isMarkupChoiceGross)}, value:formatMoney(markupGrossProfitMinimum)", "@ui.markupMarkupByMinimumInput": "enabled:isMarkupChoiceMarkup, classes:{disabled:not(isMarkupChoiceMarkup)}, value:formatMoney(markupMarkupByMinimum)", "@ui.markupFlatPriceInput": "enabled:isMarkupChoiceFlat, classes:{disabled:not(isMarkupChoiceFlat)}, value:formatMoney(markupFlatPrice)", "@ui.roundingFixedCentsInput": "enabled:isRoundingChoiceFixed, classes:{disabled:not(isRoundingChoiceFixed)}, value:formatMoney(roundingFixedCents)", ".js-markup-preview-price-fr": "text:formatMoneyFr(markupPreviewPrice)", "@ui.costRangeMinCostInputFr": "enabled:isCostRangeChoiceRange, classes:{disabled:not(isCostRangeChoiceRange)}, value:formatMoneyFr(costRangeMinCost)", "@ui.costRangeMaxCostInputFr": "enabled:isCostRangeChoiceRange, classes:{disabled:not(isCostRangeChoiceRange)}, value:formatMoneyFr(costRangeMaxCost)", "@ui.markupGrossProfitMinimumInputFr": "enabled:isMarkupChoiceGross, classes:{disabled:not(isMarkupChoiceGross)}, value:formatMoneyFr(markupGrossProfitMinimum)", "@ui.markupMarkupByMinimumInputFr": "enabled:isMarkupChoiceMarkup, classes:{disabled:not(isMarkupChoiceMarkup)}, value:formatMoneyFr(markupMarkupByMinimum)", "@ui.markupFlatPriceInputFr": "enabled:isMarkupChoiceFlat, classes:{disabled:not(isMarkupChoiceFlat)}, value:formatMoneyFr(markupFlatPrice)", "@ui.roundingFixedCentsInputFr": "enabled:isRoundingChoiceFixed, classes:{disabled:not(isRoundingChoiceFixed)}, value:formatMoneyFr(roundingFixedCents)", "@ui.profileNameInput": "value:profileName,events:['keyup']", "@ui.invalidProfileNameLabel": "toggle:not(isProfileNameValid)", ".js-apply-to-all-items-radio": "checked:applyToTypeChoice", "@ui.groupOfItemsSection": "toggle:shouldShowGroupOfItemsSection", ".js-apply-to-group-of-items-radio": "checked:applyToTypeChoice", ".js-invalid-apply-to-group-label": "toggle:not(isApplyToGroupValid)", "@ui.applyToGroupGroupDropdown": "enabled:isApplyToTypeChoiceGroup, options:applyToGroupList, value:applyToGroupSelection", "@ui.applyToGroupBrandDropdown": "enabled:isApplyToGroupBrandEnabled, options:applyToBrandList, value:applyToBrandSelection", ".js-apply-to-group-style": "enabled:isApplyToGroupStyleEnabled, options:applyToStylesList, value:applyToStyleSelection", "@ui.applyToSingleItemSection": "toggle:shouldShowSingleItemSection", ".js-apply-to-single-item-radio": "checked:applyToTypeChoice", ".js-invalid-apply-to-single-item-label": "toggle:not(isSingleItemItemNumberValid)", "@ui.singleItemProductNumberInput": "value:applyToSingleItemItemNumber, events:['keyup'], enabled:isApplyToTypeChoiceSingle, classes:{disabled:not(isApplyToTypeChoiceSingle)}", ".js-product-number-alternatives-section": "template:['productsDataList'], toggle:shouldShowProductsDataList", ".js-cost-range-section": "toggle:not(isApplyToTypeChoiceSingle)", ".js-no-cost-range-radio": "checked:costRangeChoice", ".js-cost-range-radio": "checked:costRangeChoice", "@ui.invalidCostRangeLabel": "toggle:not(isCostRangesValid)", ".js-invalid-gross-profit-percent-label": "toggle:not(isMarkupGrossProfitPercentValid)", ".js-gross-profit-radio": "checked:markupChoice", "@ui.markupGrossProfitPercentInput": "enabled:isMarkupChoiceGross, classes:{disabled:not(isMarkupChoiceGross)}, value:formatNumber(computedMarkupGrossProfitPercent)", ".js-gross-profit-base-dropdown": "enabled:isMarkupChoiceGross, options:markupGrossProfitBaseList, value:markupGrossProfitBaseSelection", ".js-invalid-markup-by-percent-label": "toggle:not(isMarkupMarkupByProfitPercent)", ".js-markup-by-radio": "checked:markupChoice", "@ui.markupMarkupByPercentInput": "enabled:isMarkupChoiceMarkup, classes:{disabled:not(isMarkupChoiceMarkup)}, value:formatNumber(computedMarkupMarkupByProfitPercent)", ".js-markup-by-base-dropdown": "enabled:isMarkupChoiceMarkup, options:markupMarkupByBaseList, value:markupMarkupByBaseSelection", ".js-markup-flat-price-radio": "checked:markupChoice", ".js-rounding-none-radio": "checked:roundingChoice", ".js-rounding-fixed-cents-radio": "checked:roundingChoice", ".js-rounding-nearest-dollar-radio": "checked:roundingChoice", "@ui.applyTaxesSectionContent": "template:['taxesList']", "@ui.applyFeesSectionContent": "template:['feesList']", "@ui.applyServicesSectionContent": "template:['servicesList']", "@ui.invalidProfileLabel": "toggle:not(isProfileValid)" },
        computeds: { shouldShowSingleItemSection: { deps: ["profileType"], get: function(e) { return "ALL" !== e } }, shouldShowGroupOfItemsSection: { deps: ["profileType"], get: function(e) { return "ALL" !== e && "SUPPLIES" !== e } }, shouldShowProductsDataList: { deps: ["productsDataList"], get: function(e) { return e.length > 1 } } },
        bindingFilters: { formatMoneyFr: { get: function(e) { return o.formatMoney(e, { symbol: "$", format: "%v %s", decimal: ",", thousand: ".", precision: 2 }) }, set: function(e) { var t = e.split(".").join(" "),
                        i = t.replace(/,/g, "."); return o.unformat(i) } }, formatMoney: { get: function(e) { return o.formatMoney(e, { symbol: "$", format: "%s %v", decimal: ".", thousand: ",", precision: 2 }) }, set: function(e) { return o.unformat(e, ".") } }, formatNumber: { get: function(e) { return o.formatNumber(e, 2) }, set: function(e) { return o.unformat(e) } }, formatExtractDecimalOmitZeroFr: { get: function(e) { return o.formatMoney(e, { symbol: "$", format: "%v %s" }, 2, ".", ",") }, set: function(e) { var t = e.split(".").join(" "),
                        i = t.replace(/,/g, "."),
                        a = o.unformat(i),
                        r = a % 1; return r > 0 ? r : 0 } }, formatExtractDecimalOmitZero: { get: function(e) { return o.formatMoney(e, { symbol: "$", format: "%s %v" }, 2, ",", ".") }, set: function(e) { var t = o.unformat(e),
                        i = t % 1; return i > 0 ? i : 0 } } },
        bindingHandlers: { options: { set: function(e, i) { var a = [];
                    t.each(i, function(e) { a.push("<option value='" + e.key + "'>" + e.value + "</option>") }), e.empty(), e.append(a.join("")) } } },
        initialize: function(e) { e = e || {}, this.loadingSpinnerView = this.loadingSpinnerView || e.loadingSpinnerView || n.getSharedInstance(), this.model = e.model || a.getSharedInstance(), this.normalizeMarionetteBindingsUiKeys() },
        onRender: function() { this.applyBindings(), this.selectTaxCheckboxes(), this.selectFeeCheckboxes(), this.selectServiceCheckboxes() },
        onApplyToGroupGroupDropdownChange: function() { this.model.fetchProductBrandsJson() },
        onApplyToGroupBrandDropdownChange: function() { this.model.fetchProductStylesJson() },
        onSingleItemProductNumberInputBlur: function() { this.model.fetchProductsDataList() },
        onProductNumberAlternativeRadioChange: function(t) { this.model.set("applyToSingleItemItemNumber", e(t.target).val()) },
        onPercentInputBlur: function(t) {
            var i = e(t.target),
                a = i.val(),
                r = o.unformat(a);
            i.val(o.formatNumber(r, 2))
        },
        onCurrencyInputBlur: function(t) { var i = e(t.target),
                a = i.val(),
                r = o.unformat(a);
            i.val(o.formatMoney(r, { symbol: "$", format: "%s %v", decimal: ".", thousand: ",", precision: 2 })) },
        onCurrencyInputBlurFr: function(t) { var i = e(t.target),
                a = i.val(),
                r = a.split(".").join(" "),
                n = r.replace(/,/g, "."),
                s = o.unformat(n);
            i.val(o.formatMoney(s, { symbol: "$", format: "%v %s", decimal: ",", thousand: ".", precision: 2 })) },
        onRoundingFixedCentsInputBlur: function(i) { var a = e(i.target),
                r = a.val(),
                n = o.unformat(r),
                s = 1 > n && n > 0 && t.isNumber(n) ? n : "0";
            a.val(o.formatNumber(s, 2)) },
        onApplyTaxesCheckboxClick: function(e) { this.onTaxesAndAddonsCheckboxClick("taxesSelected", e) },
        onApplyFeesCheckboxClick: function(e) { this.onTaxesAndAddonsCheckboxClick("feesSelected", e) },
        onApplyServicesCheckboxClick: function(e) { this.onTaxesAndAddonsCheckboxClick("servicesSelected", e) },
        onTaxesAndAddonsCheckboxClick: function(t, i) { var a = e(i.target),
                r = a.prop("checked"),
                o = a.val();
            r ? this.model.addItemToSelectedAddons(t, o) : this.model.removeItemFromSelectedAddons(t, o) },
        onCancelLinkClick: function() { this.loadingSpinnerView.showSpinner(), window.location.href = this.model.get("cancelUrl") },
        onSaveLinkClick: function() { this.model.postSave() },
        onPostSaveSuccess: function() { window.location = "/quote-setup/" },
        onShouldReloadPageChange: function(e, t) { t === !0 && window.location.reload(!0) },
        selectTaxCheckboxes: function() { this.ui.applyTaxesCheckbox = this.$(".js-taxes-addon-checkbox"), this.selectTaxesAndAddonsCheckboxes("taxesSelected", this.ui.applyTaxesCheckbox) },
        selectFeeCheckboxes: function() { this.ui.applyFeesCheckbox = this.$(".js-fees-addon-checkbox"), this.selectTaxesAndAddonsCheckboxes("feesSelected", this.ui.applyFeesCheckbox) },
        selectServiceCheckboxes: function() { this.ui.applyServicesCheckbox = this.$(".js-services-addon-checkbox"), this.selectTaxesAndAddonsCheckboxes("servicesSelected", this.ui.applyServicesCheckbox) },
        selectTaxesAndAddonsCheckboxes: function(i, a) { t.each(this.model.get(i), t.bind(function(t) { a.each(function(i, a) { var r = e(a); return t === r.val() ? (r.prop("checked", !0), !1) : void 0 }) }, this)) }
    });
    return r.View.mixin(s.prototype), s
}), define("QuoteSetupAddonsView", ["jquery", "underscore", "marionette", "RadioButtonBehavior", "TextboxBehavior"], function(e, t, i, a, r) { return i.ItemView.extend({ percentItemTextboxBehavior: null, dollarItemTextboxBehavior: null, dollarQuoteTextboxBehavior: null, percentSubtotalTextboxBehavior: null, dollarSubtotalTextboxBehavior: null, quantityTextboxBehavior: null, percentItemRadioButtonBehavior: null, dollarItemRadioButtonBehavior: null, dollarQuoteRadioButtonBehavior: null, percentSubtotalRadioButtonBehavior: null, dollarSubtotalRadioButtonBehavior: null, el: "#addons-tab", ui: { rqForm: "#rqForm", addonType: "#addonType", amount: "#amount", addOnAmount: "#addOnAmount", rqFormAmountType: "#rqForm #amountType", aspectFormAmountType: "#aspectRatio #amountType", rqFormApplyPerType: "#rqForm #applyPerType", aspectFormApplyPerType: "#aspectRatio #applyPerType", percentItemSpan: "#percent-label-product", dollarItemSpan: "#dollar-label-product", dollarQuoteSpan: "#dollar-label-quote", percentSubtotalSpan: "#percent-label-subtotal", dollarSubtotalSpan: "#dollar-label-subtotal", selectionsContainerInputs: ".selections-container input", descriptionInput: ".input.name", percentItemTextbox: "#percent-amount-product", percentItemRadio: "#percent-radio-product", dollarItemTextbox: "#dollar-amount-product", dollarItemRadio: "#dollar-radio-product", dollarQuoteTextbox: "#dollar-amount-quote", dollarQuoteRadio: "#dollar-radio-quote", percentSubtotalTextbox: "#percent-amount-subtotal", percentSubtotalRadio: "#percent-radio-subtotal", dollarSubtotalTextbox: "#dollar-amount-subtotal", dollarSubtotalRadio: "#dollar-radio-subtotal", rqValidateAmountMessage: ".rqValidateAmountMessage", rqValidateDescriptionMessage: ".rqValidateDescriptionMessage", rqValidateQtyMessage: ".rqValidateQtyMessage", quantity: ".input.quantity", addButton: ".add-button", saveButton: ".save-button", cancelButton: ".button.cancel" }, events: { "keyup @ui.selectionsContainerInputs": "onKeyupAmount", "click @ui.selectionsContainerInputs": "onAmountRadioChecked", "click @ui.saveButton": "saveFeeService", "click @ui.addButton": "saveFeeService", "click @ui.cancelButton": "onCancel" }, onRender: function() { e(".profile-tabs").tabs(), this.getAmountCalculationSection(), e(".header-message-indicator.saved-check").fadeIn("fast", function() { setTimeout(function() { e(".header-message-indicator.saved-check").fadeOut() }, 2e3) }) }, getAmountCalculationSection: function() { this.percentItemTextboxBehavior = (new r).init({ textbox: this.ui.percentItemTextbox, validateNumeric: !0, formatPercent: !0 }), this.dollarItemTextboxBehavior = (new r).init({ textbox: this.ui.dollarItemTextbox, validateSignedNumeric: !0, formatCurrency: !0 }), this.dollarQuoteTextboxBehavior = (new r).init({ textbox: this.ui.dollarQuoteTextbox, validateSignedNumeric: !0, formatCurrency: !0 }), this.percentSubtotalTextboxBehavior = (new r).init({ textbox: this.ui.percentSubtotalTextbox, validateNumeric: !0, formatPercent: !0 }), this.dollarSubtotalTextboxBehavior = (new r).init({ textbox: this.ui.dollarSubtotalTextbox, validateSignedNumeric: !0, formatCurrency: !0 }), this.quantityTextboxBehavior = (new r).init({ textbox: this.ui.quantity, validateNumeric: !0 }), this.percentItemRadioButtonBehavior = (new a).radioButton(this.getRadioButtonToggleFields(this.ui.percentItemSpan)), this.dollarItemRadioButtonBehavior = (new a).radioButton(this.getRadioButtonToggleFields(this.ui.dollarItemSpan)), this.dollarQuoteRadioButtonBehavior = (new a).radioButton(this.getRadioButtonToggleFields(this.ui.dollarQuoteSpan)), this.percentSubtotalRadioButtonBehavior = (new a).radioButton(this.getRadioButtonToggleFields(this.ui.percentSubtotalSpan)), this.dollarSubtotalRadioButtonBehavior = (new a).radioButton(this.getRadioButtonToggleFields(this.ui.dollarSubtotalSpan)) }, onKeyupAmount: function(t) { this.ui.amount.val(e(t.target).val()), this.ui.addOnAmount.val(e(t.target).val()) }, onAmountRadioChecked: function(t) { var i = e(t.target).val(); switch (i) {
                case "percent-item":
                    this.ui.rqFormApplyPerType.val("ITEM"), this.ui.rqFormAmountType.val("PERCENTAGE"), this.ui.aspectFormApplyPerType.val("ITEM"), this.ui.aspectFormAmountType.val("PERCENTAGE"); break;
                case "dollar-item":
                    this.ui.rqFormApplyPerType.val("ITEM"), this.ui.rqFormAmountType.val("DOLLAR"), this.ui.aspectFormApplyPerType.val("ITEM"), this.ui.aspectFormAmountType.val("DOLLAR"); break;
                case "dollar-quote":
                    this.ui.rqFormApplyPerType.val("QUOTE"), this.ui.rqFormAmountType.val("DOLLAR"), this.ui.aspectFormApplyPerType.val("QUOTE"), this.ui.aspectFormAmountType.val("DOLLAR"); break;
                case "percent-subtotal":
                    this.ui.rqFormApplyPerType.val("SUBTOTAL"), this.ui.rqFormAmountType.val("PERCENTAGE"), this.ui.aspectFormApplyPerType.val("SUBTOTAL"), this.ui.aspectFormAmountType.val("PERCENTAGE"); break;
                case "dollar-subtotal":
                    this.ui.rqFormApplyPerType.val("SUBTOTAL"), this.ui.rqFormAmountType.val("DOLLAR"), this.ui.aspectFormApplyPerType.val("SUBTOTAL"), this.ui.aspectFormAmountType.val("DOLLAR") } this.activateAmountFields(t.target) }, activateAmountFields: function(t) {-1 !== e(t).prop("id").indexOf("percent-radio-product") ? (this.percentItemRadioButtonBehavior.activate(), this.dollarItemRadioButtonBehavior.deactivate(), this.dollarQuoteRadioButtonBehavior.deactivate(), this.percentSubtotalRadioButtonBehavior.deactivate(), this.dollarSubtotalRadioButtonBehavior.deactivate()) : -1 !== e(t).prop("id").indexOf("dollar-radio-product") ? (this.percentItemRadioButtonBehavior.deactivate(), this.dollarItemRadioButtonBehavior.activate(), this.dollarQuoteRadioButtonBehavior.deactivate(), this.percentSubtotalRadioButtonBehavior.deactivate(), this.dollarSubtotalRadioButtonBehavior.deactivate()) : -1 !== e(t).prop("id").indexOf("dollar-radio-quote") ? (this.percentItemRadioButtonBehavior.deactivate(), this.dollarItemRadioButtonBehavior.deactivate(), this.dollarQuoteRadioButtonBehavior.activate(), this.percentSubtotalRadioButtonBehavior.deactivate(), this.dollarSubtotalRadioButtonBehavior.deactivate()) : -1 !== e(t).prop("id").indexOf("percent-radio-subtotal") ? (this.percentItemRadioButtonBehavior.deactivate(), this.dollarItemRadioButtonBehavior.deactivate(), this.dollarQuoteRadioButtonBehavior.deactivate(), this.percentSubtotalRadioButtonBehavior.activate(), this.dollarSubtotalRadioButtonBehavior.deactivate()) : -1 !== e(t).prop("id").indexOf("dollar-radio-subtotal") && (this.percentItemRadioButtonBehavior.deactivate(), this.dollarItemRadioButtonBehavior.deactivate(), this.dollarQuoteRadioButtonBehavior.deactivate(), this.percentSubtotalRadioButtonBehavior.deactivate(), this.dollarSubtotalRadioButtonBehavior.activate()) }, getRadioButtonToggleFields: function(e) { return { label: e.find(".radio-label"), text: e.find(".amount") } }, validateForm: function() { this.resetErrorMessages(); var e = !0; return this.ui.descriptionInput.val().length < 1 && (this.ui.descriptionInput.addClass("input-error"), this.ui.rqValidateDescriptionMessage.removeClass("retail-quote"), e = !1), this.ui.percentItemRadio.prop("checked") ? t.isEmpty(this.ui.percentItemTextbox) ? (this.ui.percentItemTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : (this.ui.percentItemTextbox.val().length <= 0 || this.ui.percentItemTextbox.val() <= 0) && (this.ui.percentItemTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : this.ui.dollarItemRadio.prop("checked") ? t.isEmpty(this.ui.dollarItemTextbox) && (this.ui.dollarItemTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : this.ui.dollarQuoteRadio.prop("checked") ? t.isEmpty(this.ui.dollarQuoteTextbox) && (this.ui.dollarQuoteTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : this.ui.percentSubtotalRadio.prop("checked") ? t.isEmpty(this.ui.percentSubtotalTextbox) ? (this.ui.percentSubtotalTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : (this.ui.percentSubtotalTextbox.val().length <= 0 || parseFloat(this.ui.percentSubtotalTextbox.val()) <= 0) && (this.ui.percentSubtotalTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1) : this.ui.dollarSubtotalRadio.prop("checked") && t.isEmpty(this.ui.dollarSubtotalTextbox) && (this.ui.dollarSubtotalTextbox.addClass("input-error"), this.ui.rqValidateAmountMessage.removeClass("retail-quote"), e = !1), this.ui.quantity.val().length <= 0 && (this.ui.quantity.addClass("input-error"), this.ui.rqValidateQtyMessage.removeClass("retail-quote"), e = !1), e }, resetErrorMessages: function() { this.ui.descriptionInput.removeClass("input-error"), this.ui.rqValidateDescriptionMessage.addClass("retail-quote"), this.ui.percentItemTextbox.removeClass("input-error"), this.ui.dollarItemTextbox.removeClass("input-error"), this.ui.dollarQuoteTextbox.removeClass("input-error"), this.ui.percentSubtotalTextbox.removeClass("input-error"), this.ui.dollarSubtotalTextbox.removeClass("input-error"), this.ui.rqValidateAmountMessage.addClass("retail-quote"), this.ui.quantity.removeClass("input-error"), this.ui.rqValidateQtyMessage.addClass("retail-quote") }, saveFeeService: function() { if (!this.validateForm()) return !1; if ("DOLLAR" === this.ui.rqFormAmountType.val()) { var e = this.ui.addOnAmount.val(); switch ("" == e && (e = 0), this.ui.rqFormApplyPerType.val()) {
                    case "ITEM":
                        this.ui.dollarItemTextbox.val(e); break;
                    case "QUOTE":
                        this.ui.dollarQuoteTextbox.val(e); break;
                    case "SUBTOTAL":
                        this.ui.dollarSubtotalTextbox.val(e) } } "Fee" === this.ui.addonType.val() ? this.ui.rqForm.attr("action", "/quote-setup/fees/saveNewFees") : "Service" === this.ui.addonType.val() && this.ui.rqForm.attr("action", "/quote-setup/services/saveNewServices"), this.ui.rqForm.submit() }, onCancel: function() { "Fee" === this.ui.addonType.val() ? window.location = "/quote-setup/fees/" : "Service" === this.ui.addonType.val() && (window.location = "/quote-setup/services/") } }) }), define("QuoteSetupTaxesView", ["jquery", "underscore", "marionette", "RadioButtonBehavior", "TextboxBehavior"], function(e, t, i, a, r) { return i.ItemView.extend({ percentTextboxBehavior: null, capTextboxBehavior: null, el: "#tax-tab", ui: { taxForm: "#taxRQForm", descriptionInput: ".input.name", rqValidateTaxNameMessage: ".rqValidateTaxNameMessage", taxPercentInput: "#tax-percent", rqValidateTaxPercentMessage: ".rqValidateTaxPercentMessage", percentInput: "#tax-percent", capAmountInput: "#taxCapAmount", addButton: ".tax-add-button", saveButton: ".tax-save-button", cancelButton: ".js-cancel-tax-link" }, events: { "click @ui.saveButton": "saveTax", "click @ui.addButton": "saveTax", "click @ui.cancelButton": "onCancel" }, onRender: function() { e(".profile-tabs").tabs(), this.percentTextboxBehavior = (new r).init({ textbox: this.ui.percentInput, validateNumeric: !0, formatPercent: !0 }), this.capTextboxBehavior = (new r).init({ textbox: this.ui.capAmountInput, validateNumeric: !0, formatCurrency: !0 }) }, validateForm: function() { var e = !0; return this.ui.descriptionInput.val().length < 1 ? (this.ui.descriptionInput.addClass("input-error"), this.ui.rqValidateTaxNameMessage.removeClass("retail-quote"), e = !1) : (this.ui.descriptionInput.removeClass("input-error"), this.ui.rqValidateTaxNameMessage.addClass("retail-quote")), this.ui.taxPercentInput.val().length <= 0 || parseFloat(this.ui.taxPercentInput.val()) <= 0 ? (this.ui.taxPercentInput.addClass("input-error"), this.ui.rqValidateTaxPercentMessage.removeClass("retail-quote"), e = !1) : (this.ui.taxPercentInput.removeClass("input-error"), this.ui.rqValidateTaxPercentMessage.addClass("retail-quote")), e }, saveTax: function() { var e = "/quote-setup/taxes/saveNewTax"; return this.ui.taxForm.attr("action", e), this.validateForm() ? void this.ui.taxForm.submit() : !1 }, onCancel: function() { return window.location = "/quote-setup/taxes/", !1 } }) }), define("QuoteSetupProfileListView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#product-profile-list", ui: { topTabs: "#top-tabs" }, onRender: function() { this.ui.topTabs.tabs({ activate: function(t, i) { var a = i.newTab.index();
                    e("a.print-link").attr("href", "/quote-setup/product-profiles/list/print/" + a) } }) } }) }), define("PromotionalLandingPageView", ["underscore", "marionette", "PromotionalLandingPageViewModel", "SearchResultsView"], function(e, t, i, a) { return t.LayoutView.extend({ el: "#content", model: i.getSharedInstance(), searchResultsView: null, initialize: function() { this.searchResultsView = new a, this.searchResultsView.render() } }) }), define("SearchResultsView", ["underscore", "marionette", "CompareProductsBehavior", "ListModalMediator", "RefineSearchLeftNavigationView", "CategoryViewModel", "LoadingSpinnerView", "GlobalContentMessagesModel"], function(e, t, i, a, r, o, n, s) {
    return t.LayoutView.extend({
        CompareProductsBehavior: null,
        ListModalMediator: null,
        LoadingSpinnerView: null,
        globalContentMessagesModel: null,
        compareProductsBehavior: null,
        listModalMediator: null,
        pageName: "search-results",
        loadingSpinnerView: null,
        qtyBehavior: null,
        el: "#content",
        model: o.getSharedInstance(),
        regions: { refineSearchLeftNavigationRegion: "#left_nav" },
        ui: { $addToListModal: "#add-to-list-id", $createListModal: "#create-list-modal", searchForm: "#_tireSizeSearchForm", searchInput: "#searchTerm", staggeredSearchInputOne: "#searchTermOne", staggeredSearchInputTwo: "#searchTermTwo", ntt: "#Ntt", isStaggeredSearch: "#isStaggeredSearch", searchSubmitLink: ".search-submit", staggeredSearchSubmitLink: ".staggered-search-submit", searchProductAction: ".product-action-id", quoteLink: ".quote-link", marketingFilterRadioOption: ".marketing-filter-radio-option", searchTermOne: "#searchTermOne", searchTermTwo: "#searchTermTwo", searchTerm: "#searchTerm", gridListViewIcon: ".grid-list-view-icon", selectSortOption: ".selectSortOption", selectDefaultView: "#selectDefaultView", paginationPerPageDropdown: ".pagination-per-page-dropdown", frontTirePackage: "#front-tire-package", frontWheelPackage: "#front-wheel-package", frontTpmsPackage: "#front-tpms-package", rearTirePackage: "#rear-tire-package", rearWheelPackage: "#rear-wheel-package", rearTpmsPackage: "#rear-tpms-package", frontTireSelectLink: "#front-tire-select-link", frontWheelSelectLink: "#front-wheel-select-link", rearTireSelectLink: "#rear-tire-select-link", rearWheelSelectLink: "#rear-wheel-select-link", frontTpmsSelectLink: "#front-tpms-select-link", rearTpmsSelectLink: "#rear-tpms-select-link", crossImage: ".cross-image", deletePackage: ".delete-package", clearAll: ".clear-all", addPackageToCart: ".add-package-to-cart", addPackageToQuote: ".add-package-to-quote", keywordSelectLink: ".keyword-select-link", searchTabs: "#search-tabs", searchTabList: "#search-tabs ul.ui-tabs-nav li", rebateFinderSearchInput: "#rebateFinderSearchTerm", rebateFinderSearchTerm: "#rebateFinderSearchTerm", rebateFinderSearchButton: ".rebate-search-button", rebateFinderStaggeredSearchButton: ".rebate-staggered-search-button", printLinkKeyword: ".global-search-print-link-cat", marketingFilterCheckbox: ".marketing-filter-checkbox", refinementMenuFormMktProgram: "#refinementMenu-form-mkt-program", marketingProgramCheckbox: ".marketing-programs", productListDescriptionForSupplies: "#product-list-description-supplies", gridViewContentForSupplies: "#gridViewContentSupplies", suppliesTabGridHeader: "div#search-supplies-tab .grid-header", lessTextError: ".less-text-error", listToDelete: "#listToDelete", listDeleteConfirmation: "#listDeleteConfirmation", listDeleteUndoLink: "#listDeleteUndoLink", listDeleteCircle: ".fa-times-circle", goodBetterBestLink: "#goodBetterBestLink", disableFrontTireImage: "#disableFrontTireImage", enableFrontTireImage: "#enableFrontTireImage", enableFrontTireCloseImage: "#enableFrontTireCloseImage", disableFrontTireCloseImage: "#disableFrontTireCloseImage", disableFrontWheelImage: "#disableFrontWheelImage", enableFrontWheelImage: "#enableFrontWheelImage", enableFrontWheelCloseImage: "#enableFrontWheelCloseImage", disableFrontWheelCloseImage: "#disableFrontWheelCloseImage", disableFrontTpmsImage: "#disableFrontTpmsImage", enableFrontTpmsImage: "#enableFrontTpmsImage", disableFrontTpmsCloseImage: "#disableFrontTpmsCloseImage", enableFrontTpmsCloseImage: "#enableFrontTpmsCloseImage", disableRearTireImage: "#disableRearTireImage", enableRearTireImage: "#enableRearTireImage", enableRearTireCloseImage: "#enableRearTireCloseImage", disableRearTireCloseImage: "#disableRearTireCloseImage", disableRearWheelImage: "#disableRearWheelImage", enableRearWheelImage: "#enableRearWheelImage", disableRearWheelCloseImage: "#disableRearWheelCloseImage", enableRearWheelCloseImage: "#enableRearWheelCloseImage", disableRearTpmsImage: "#disableRearTpmsImage", enableRearTpmsImage: "#enableRearTpmsImage", disableRearTpmsCloseImage: "#disableRearTpmsCloseImage", enableRearTpmsCloseImage: "#enableRearTpmsCloseImage", myListTabAnchor: "#listTabs > div.tabs > ul > li >a", listPagePrintIconDiv: "#print-icon-div", inputQuantityText: ".inputQuantity", dollarIcon: ".dollar-image", closeBtn: ".close-btn-left" },
        events: { "keypress @ui.rebateFinderSearchInput": "onRebateFinderSearchInputKeypress", "input @ui.rebateFinderSearchInput": "onRebateFinderSearchInputChange", "keypress @ui.searchInput": "onSearchInputKeypress", "input @ui.searchInput": "onSearchInputChange", "keyup @ui.staggeredSearchInputOne": "onStaggeredSearchInputKeypress", "keyup @ui.staggeredSearchInputTwo": "onStaggeredSearchInputKeypress", "input @ui.staggeredSearchInputOne": "onStaggeredSearchInputChange", "input @ui.staggeredSearchInputTwo": "onStaggeredSearchInputChange", "change @ui.searchProductAction": "onSearchProductActionChange", "click @ui.quoteLink": "onQuoteLinkClick", "click @ui.marketingFilterRadioOption": "onMarketingFilterRadioOptionClick", "click @ui.gridListViewIcon": "onGridListViewIconClick", "change @ui.selectSortOption": "onSelectSortOption", "change @ui.paginationPerPageDropdown": "onPaginationPerPageDropdownChange", "click @ui.crossImage": "onCrossImageTilesClick", "click @ui.deletePackage": "onDeletePackage", "click @ui.clearAll": "onClearAllPackage", "click @ui.keywordSelectLink": "onKeywordSelectLink", "mouseover @ui.rebateFinderSearchButton": "onMouseOverSearchButton", "mouseout  @ui.rebateFinderSearchButton": "onMouseLeaveSearchButton", "mouseover @ui.rebateFinderStaggeredSearchButton": "onMouseOverStaggeredSearchButton", "mouseout  @ui.rebateFinderStaggeredSearchButton": "onMouseLeaveStaggeredSearchButton", "click @ui.printLinkKeyword": "onPrintLinkClick", "change @ui.marketingFilterCheckbox": "onMarketingFilterCheckboxChange", "click @ui.searchTabList": "onSearchTabsClick", "click @ui.goodBetterBestLink": "onGoodBetterBestLinkClick", "click @ui.myListTabAnchor": "myListTabClick", "input @ui.inputQuantityText": "inputQuantityInput", "click @ui.dollarIcon": "dollarIconClick", "click @ui.closeBtn": "closeBtnClick" },
        initialize: function(e) { e = e || {}, this.CompareProductsBehavior = e.CompareProductsBehavior || i, this.ListModalMediator = e.ListModalMediator || a, this.LoadingSpinnerView = e.LoadingSpinnerView || n, this.compareProductsBehavior = e.compareProductsBehavior || null, this.listModalMediator = e.listModalMediator || null, this.loadingSpinnerView = e.loadingSpinnerView || this.LoadingSpinnerView.getSharedInstance(), this.globalContentMessagesModel = e.globalContentMessagesModel || s.getSharedInstance(), this.packageDivInitialize(), $("#top-tabs").tabs(), this.loadSearchViewDefault() },
        onRender: function() { this.deleteProductList(), this.initRebateSearchButton(), this.ui.searchInput.placeholder(), this.ui.rebateFinderSearchInput.placeholder(), this.disableSearchSubmitLink(), this.disableStaggeredSearchSubmitLink(), this.refineSearchLeftNavigationRegion.attachView((new r).render()), this.initCompareProductsBehavior(), this.renderListPagePrintIconDiv(), this.initListModalMediator(), this.restoreLastResultViewStatus(), this.initRebateStaggeredSearchButton(), this.renderGridViewForSupplies() },
        initRebateSearchButton: function() { var e = $(".tire-size").attr("data-rebate-tool-tip-text");
            $(".rebate-search-button").tooltip({ content: e, items: ".rebate-search-button", tooltipClass: "rebate-search-tooltip" }) },
        hideListAndShowUndo: function(e) { $("#" + e).hide(), this.ui.listDeleteCircle.click(function() { return !1 }), this.ui.listDeleteConfirmation.show(), this.ui.listDeleteConfirmation.delay(5e3).fadeOut("slow") },
        deleteProductList: function() { var e = this.ui.listToDelete.val(); if (e) { this.hideListAndShowUndo(e); var t = setTimeout(function() { $.ajax({ url: "/lists/deleteListAjax/" + e, type: "get" }).done(function() { console.log("list has been deleted successfully."), $(".fa-times-circle").unbind("click") }) }, 5e3);
                this.ui.listDeleteUndoLink.on("click", function() { $("#" + e).show(), clearTimeout(t), $(".fa-times-circle").unbind("click") }), window.history.replaceState(null, null, window.location.pathname) } },
        initRebateStaggeredSearchButton: function() { var e = $(".tire-size-text-field").attr("data-rebate-staggered-tool-tip-text");
            $(".rebate-staggered-search-button").tooltip({ content: e, items: ".rebate-staggered-search-button", tooltipClass: "rebate-search-tooltip" }) },
        renderGridViewForSupplies: function() { $(this.ui.productListDescriptionForSupplies).show(), $(this.ui.gridViewContentForSupplies).hide(), $(this.ui.suppliesTabGridHeader).hide(); var e = this.getSelectedTabNameById(); "supplies" === e && ($("div#search-" + e + "-tab .grid-view").attr("src", "/_ui/desktop/common/images/grid_view_active.png"), $("div#search-" + e + "-tab .list-view").attr("src", "/_ui/desktop/common/images/list_view.png")) },
        onMouseOverSearchButton: function() { $(".rebate-search-button").tooltip(this.ui.rebateFinderSearchInput.val().length > 3 ? "close" : "open") },
        onMouseLeaveSearchButton: function() { $(".rebate-search-button").tooltip("close") },
        onMouseOverStaggeredSearchButton: function() { $(".rebate-staggered-search-button").tooltip(this.ui.staggeredSearchInputOne.val().length > 3 && this.ui.staggeredSearchInputTwo.val().length > 3 ? "close" : "open") },
        onMouseLeaveStaggeredSearchButton: function() { $(".rebate-staggered-search-button").tooltip("close") },
        onSelectSortOption: function(e) { loading(); var t = $(e.target).val(),
                i = this.ui.selectDefaultView.val();
            $.ajax({ data: { selectedTab: i }, url: "/ajax/sort-order-option/" + t, type: "get" }).done(function() { window.location = window.location }) },
        onPrintLinkClick: function() { var e = (window.location.pathname, window.location.pathname);
            printUrl = e + "/print" + document.location.search, window.open(printUrl, "_blank") },
        onPaginationPerPageDropdownChange: function(e) { var t = $(e.target).val(),
                i = "resultsPerPage",
                a = window.location.pathname + window.location.search;
            a = this.removeParam(i, a); var r = window.location.pathname,
                o = a + this.getUrlNextParameterSeparator(a) + i + "=" + t;
            a = a + "&" + i + "=" + t, -1 !== r.indexOf("/product-type-search") && $("#productTypeSearchFormSearchResults").length > 0 ? ($("#productTypeSearchFormSearchResults").attr("action", a), $("#productTypeSearchFormSearchResults").submit()) : -1 !== r.indexOf("category/tiresizes") ? ($("#tireSizeSearchForm").attr("action", a), $("#tireSizeSearchForm").submit()) : -1 !== r.indexOf("category/wheelsizes") ? ($("#wheelSizeSearchForm").attr("action", a), $("#wheelSizeSearchForm").submit()) : window.location.href = -1 !== r.indexOf("search/valuebuys") ? o : a },
        removeParam: function(e, t) { var i, a = t.split("?")[0],
                r = [],
                o = -1 !== t.indexOf("?") ? t.split("?")[1] : ""; if ("" !== o) { r = o.split("&"); for (var n = r.length - 1; n >= 0; n -= 1) i = r[n].split("=")[0], i === e && r.splice(n, 1);
                a = a + "?" + r.join("&") } return a },
        getUrlNextParameterSeparator: function(e) { var t = "?"; return -1 !== e.indexOf("?") && (t = e.length !== e.indexOf("?") + 1 ? "&" : ""), t },
        initCompareProductsBehavior: function() { this.compareProductsBehavior = new this.CompareProductsBehavior, this.compareProductsBehavior.set$eventDelegate(this.$el), this.compareProductsBehavior.init() },
        renderListPagePrintIconDiv: function() {-1 !== window.location.pathname.indexOf("/lists") && -1 === window.location.search.indexOf("tab=createlist") && -1 === window.location.search.indexOf("tab=addtolist") ? $(this.ui.listPagePrintIconDiv).show() : $(this.ui.listPagePrintIconDiv).hide() },
        initListModalMediator: function() { this.listModalMediator = new this.ListModalMediator({ $eventDelegate: this.$el, getProductsAndQtyFunction: function(e) { return { product: e.data("product-number"), quantity: e.closest(".product-row").find(".qty").val() } }, $addToListModal: this.ui.$addToListModal, $createNewListModal: this.ui.$createListModal }) },
        onSearchInputKeypress: function(e) { if (13 === e.which) { if (!this.validateSearchInput()) return e.preventDefault(), !1;
                this.submitSearchForm() } },
        onRebateFinderSearchInputKeypress: function(e) { if (13 === e.which) { if (!this.validateRebateFinderSearchInput()) return e.preventDefault(), !1;
                this.submitRebateFinderSearchForm() } },
        onStaggeredSearchInputKeypress: function(e) { this.validateStaggeredSearchInput(), 13 === e.which && (e.preventDefault(), this.validateStaggeredSearchInput() && this.submitStaggeredSearchForm()) },
        onSearchInputChange: function() { this.validateSearchInput() },
        onRebateFinderSearchInputChange: function() { this.validateRebateFinderSearchInput() },
        onStaggeredSearchInputChange: function() { this.validateStaggeredSearchInput() },
        validateSearchInput: function() { return -1 !== window.location.search.indexOf("Tubes") && this.ui.searchInput.val().length >= 1 ? (this.ui.lessTextError.hide(), this.enableSearchSubmitLink(), !0) : this.ui.searchInput.val().length > 3 ? (this.ui.lessTextError.hide(), this.enableSearchSubmitLink(), !0) : (this.ui.lessTextError.show(), this.disableSearchSubmitLink(), !1) },
        validateRebateFinderSearchInput: function() { return this.ui.rebateFinderSearchInput.val().length > 3 ? (this.ui.lessTextError.hide(), this.enableSearchSubmitLink(), !0) : (this.ui.lessTextError.show(), this.disableSearchSubmitLink(), !1) },
        validateStaggeredSearchInput: function() { return this.ui.staggeredSearchInputOne.val().length > 3 && this.ui.staggeredSearchInputTwo.val().length > 3 ? ($(".less-text-error").hide(), this.enableStaggeredSearchSubmitLink(), !0) : ($(".less-text-error").show(), this.disableStaggeredSearchSubmitLink(), !1) },
        enableSearchSubmitLink: function() { $(".rebate-search-button").hide(), $(".rebate-search-button").tooltip("close"), this.ui.searchSubmitLink.off("click"), this.ui.searchSubmitLink.prop("disabled", !1), this.ui.searchSubmitLink.on("click", e.bind(this.onSearchSubmitLinkClick, this)), this.ui.searchSubmitLink.addClass("theme-color"), this.ui.searchSubmitLink.removeClass("grey") },
        enableStaggeredSearchSubmitLink: function() { $(".rebate-staggered-search-button").hide(), $(".rebate-staggered-search-button").tooltip("close"), this.ui.staggeredSearchSubmitLink.off("click"), this.ui.staggeredSearchSubmitLink.prop("disabled", !1), this.ui.staggeredSearchSubmitLink.on("click", e.bind(this.onStaggeredSearchSubmitLinkClick, this)), this.ui.staggeredSearchSubmitLink.addClass("theme-color"), this.ui.staggeredSearchSubmitLink.removeClass("grey") },
        disableSearchSubmitLink: function() { $(".rebate-search-button").show(), this.ui.searchSubmitLink.off("click"), this.ui.searchSubmitLink.prop("disabled", !0), this.ui.searchSubmitLink.addClass("grey"), this.ui.searchSubmitLink.removeClass("theme-color") },
        disableStaggeredSearchSubmitLink: function() { $(".rebate-staggered-search-button").show(), this.ui.staggeredSearchSubmitLink.off("click"), this.ui.staggeredSearchSubmitLink.prop("disabled", !0), this.ui.staggeredSearchSubmitLink.addClass("grey"), this.ui.staggeredSearchSubmitLink.removeClass("theme-color") },
        onSearchSubmitLinkClick: function() { this.submitSearchForm() },
        onStaggeredSearchSubmitLinkClick: function() { this.submitStaggeredSearchForm() },
        submitSearchForm: function() { this.ui.searchInput.val(this.ui.searchInput.val().trim()), this.loadingSpinnerView.showSpinner(), this.ui.searchForm.submit() },
        submitRebateFinderSearchForm: function() { this.ui.rebateFinderSearchInput.val(this.ui.rebateFinderSearchInput.val().trim()), this.loadingSpinnerView.showSpinner(), this.ui.searchForm.submit() },
        submitStaggeredSearchForm: function() { this.ui.staggeredSearchInputOne.val(this.ui.staggeredSearchInputOne.val().trim()), this.ui.staggeredSearchInputTwo.val(this.ui.staggeredSearchInputTwo.val().trim()), "" != this.ui.staggeredSearchInputOne.val() && "" != this.ui.staggeredSearchInputTwo.val() ? this.ui.staggeredSearchInputOne.val() != this.ui.staggeredSearchInputTwo.val() ? (this.ui.ntt.val(this.ui.staggeredSearchInputOne.val() + " " + this.ui.staggeredSearchInputTwo.val()), this.ui.isStaggeredSearch.val("Y")) : (this.ui.ntt.val(this.ui.staggeredSearchInputOne.val()), this.ui.isStaggeredSearch.val("N")) : "" != this.ui.staggeredSearchInputOne.val() ? (this.ui.ntt.val(this.ui.staggeredSearchInputOne.val()), this.ui.isStaggeredSearch.val("N")) : "" != this.ui.staggeredSearchInputTwo.val() ? (this.ui.ntt.val(this.ui.staggeredSearchInputTwo.val()), this.ui.isStaggeredSearch.val("N")) : (this.ui.ntt.val(), this.ui.isStaggeredSearch.val("N")), this.loadingSpinnerView.showSpinner(), this.ui.searchForm.submit() },
        onSearchProductActionChange: function(e) { var t = $(e.target).data(),
                i = t.productNumber,
                a = (t.supplierNumber, t.inventory),
                r = t.index,
                o = t.retailPrice,
                n = "" !== o ? !0 : !1,
                s = $("#selectDefaultView").val(),
                l = $(".qty-" + a + "-" + r + "-" + s).val();
            l = l == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : l; var d = $(".qty-" + a + "-" + r + "-" + s).val();
            d = d == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : d; var c = $(".qty-" + a + "-" + r + "-" + s).val();
            c = c == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : c; var u, h = e.target.value,
                p = t.tab,
                m = t.frontrear,
                g = !1,
                f = t.staggered;
            u = f ? "2" : "4", "" === l && (l = 1), "" === c && (c = 0); var v = $(e.target).prop("selectedIndex");
            this.ui.searchProductAction.prop("selectedIndex", 0); var C = escapeSelector(i);
            $(".product-action-dropdown-" + C).prop("selectedIndex", v), this.loadingSpinnerView.showSpinner(), "Add to List" === h ? window.location.href = "/lists?productid=" + i + "&tab=addtolist&qty=" + l : "Create List" === h ? window.location.href = "/lists?productid=" + i + "&tab=createlist&qty=" + l : "Quote" === h ? $.ajax({ url: "/retail-quote/" + i + "/" + c, type: "GET", success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), loadingSpinnerView.hideSpinner() } }) : "Create Package" === h ? this.addProductToPackage(p, i, m, u, g, n, !0) : "Add to Package" === h ? this.addProductToPackage(p, i, m, u, g, n, !1) : "Freight Cost" === h ? this.onFreightCostLinkClick(i, d) : this.loadingSpinnerView.hideSpinner() },
        onQuoteLinkClick: function(e) { var t = $(e.target),
                i = t.data().productNumber,
                a = t.data().inventory,
                r = t.data().index,
                o = this.ui.selectDefaultView.val(),
                n = $(".qty-" + a + "-" + r + "-" + o).val();
            n = n == saveQuoteErrorMessages["product.list.header.Qty"] ? "" : n, "" === n && (n = 0), this.loadingSpinnerView.showSpinner(), $.ajax({ url: "/retail-quote/" + i + "/" + n, type: "GET", success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), loadingSpinnerView.hideSpinner() } }) },
        inputQuantityInput: function(e) {
            var t = e.target.id,
                i = $(e.target).val(),
                a = t.substring(0, t.indexOf("-qty")),
                r = this.$(e.target).closest("div").find("#add-to-cart-button-" + a);
            i > 0 && r.hasClass("button-disabled") ? r.removeClass("button-disabled") : 0 != i && i && 0 !== i.length || r.hasClass("button-disabled") || r.addClass("button-disabled")
        },
        onMarketingFilterRadioOptionClick: function(e) { window.location.href = $(e.target).data().url },
        onFreightCostLinkClick: function(e, t) { WebStore.Product.showFreightModal(e, t) },
        onSearchTabsClick: function(e) { var t = this.getSelectedTabNameById($(e.target).attr("href"));
            this.updateSelectedNavbarTab(t), this.saveCurrentResultViewStatus(t), this.compareProductsBehavior.uncheckAllCheckboxes(), "supplies" === t && this.renderGridViewForSupplies() },
        updateSelectedNavbarTab: function(e) { "keyword" !== $("#search-results-page-type").val() || $("#categoryPage").val() || ($(".nav-tabs li").removeClass("active"), "tires" == e ? $("#navtab-tiresLink").addClass("active") : "wheels" == e ? $("#navtab-wheelsLink").addClass("active") : "supplies" == e ? $("#navtab-suppliesLink").addClass("active") : "tubes" == e && $("#navtab-tubesLink").addClass("active")) },
        saveCurrentResultViewStatus: function(e) { sessionStorage.setItem("selectedTab", e) },
        getSelectedTabNameById: function(e) { var t; return e || (e = $(this.ui.searchTabs).children().find("li.ui-state-active a").attr("href")), e && (-1 !== e.indexOf("tires") ? t = "tires" : -1 !== e.indexOf("wheels") ? t = "wheels" : -1 !== e.indexOf("tubes") ? t = "tubes" : -1 !== e.indexOf("supplies") && (t = "supplies")), t },
        restoreLastResultViewStatus: function() { var e = this.getSelectedTabNameById(),
                t = $(this.ui.selectDefaultView).val(),
                i = sessionStorage.getItem("selectedTab") || e,
                a = "/_ui/desktop/common/images/list_view.png",
                r = "/_ui/desktop/common/images/list_view_active.png",
                o = "/_ui/desktop/common/images/grid_view.png",
                n = "/_ui/desktop/common/images/grid_view_active.png";
            $(".grid-view").attr("src", o), $(".list-view").attr("src", a), "listView" === t ? $(".list-view").attr("src", r) : $(".grid-view").attr("src", n), t && this.ui.selectDefaultView.val(t), this.updateSelectedNavbarTab(e), i && ("listView" === t ? ($("div#search-" + i + "-tab .list-view").attr("src", r), $("div#search-" + i + "-tab .grid-view").attr("src", o)) : ($("div#search-" + i + "-tab .grid-view").attr("src", n), $("div#search-" + i + "-tab .list-view").attr("src", a))); var s = JSON.parse(sessionStorage.getItem("selectedCheckbox")); if (s && s.length > 0)
                for (var l = 0; l < s.length; l++) this.ui.marketingFilterCheckbox.each(function() { $(this).attr("id") == s[l] && $(this).prop("checked", !0) }) },
        onGridListViewIconClick: function(e) { var t = $(e.target).data().selectedView,
                i = $(e.target).data().selectedTab;
            this.saveCurrentResultViewStatus(i), this.ui.selectDefaultView.val(t), this.compareProductsBehavior.uncheckAllCheckboxes(), "supplies" != i && this.setViewInSession(t) },
        setViewInSession: function(e) { loading(), $.ajax({ data: { view: e }, url: "/search/setGridOrListView", type: "get" }).done(function() { location.reload() }) },
        addProductToPackage: function(e, t, i, a, r, o, n) { var s = this;
            $("#top-tabs").find($("#search-tabs")).addClass("vehicle-search-tabs"), $.ajax({ url: "/search/addToPackage/" + e + "/" + t + "/" + i + "/" + a + "?createPackage=" + n + "&isQuoteAllowed=" + o, type: "get" }).done(function(e) { var t = !0,
                    i = !0,
                    a = !0,
                    r = !0,
                    o = !0,
                    n = !0,
                    l = e["product-tires"],
                    d = e["product-wheels"],
                    c = e["product-tpms"],
                    u = e["rearProduct-tires"],
                    h = e["rearProduct-wheels"],
                    p = e["rearProduct-tpms"],
                    m = e.packageQuantity;
                $("#package-text").html(m), l ? (s.ui.frontTirePackage.removeClass("disable-div"), s.ui.frontTirePackage.find($("#front-tire-size")).html(l.size), s.ui.frontTirePackage.find($("#front-tire-style")).html(l.style.brand.code + " " + l.style.name), s.ui.frontTirePackage.find($("#front-tire-number")).html(l.supplierNumber), l.images && s.ui.frontTirePackage.find($("#front-tire-image")).attr("src", l.images[0].thumbnail.url), t = l.quoteAllowed, s.ui.disableFrontTireImage.hide(), s.ui.enableFrontTireImage.show(), s.ui.enableFrontTireCloseImage.show(), s.ui.disableFrontTireCloseImage.hide(), s.ui.frontTireSelectLink.hide(), $("#tires-product-number-front").val(l.productNumber)) : (s.ui.disableFrontTireImage.show(), s.ui.enableFrontTireImage.hide(), s.ui.enableFrontTireCloseImage.hide(), s.ui.disableFrontTireCloseImage.show()), d ? (s.ui.frontWheelPackage.removeClass("disable-div"), s.ui.frontWheelPackage.find($("#front-wheel-size")).html(d.size), s.ui.frontWheelPackage.find($("#front-wheel-style")).html(d.style.brand.code + " " + d.style.name), s.ui.frontWheelPackage.find($("#front-wheel-number")).html(d.supplierNumber), d.images && s.ui.frontWheelPackage.find($("#front-wheel-image")).attr("src", d.images[0].thumbnail.url), i = d.quoteAllowed, s.ui.disableFrontWheelImage.hide(), s.ui.enableFrontWheelImage.show(), s.ui.enableFrontWheelCloseImage.show(), s.ui.disableFrontWheelCloseImage.hide(), s.ui.frontWheelSelectLink.hide(), $("#wheels-product-number-front").val(d.productNumber)) : (s.ui.disableFrontWheelImage.show(), s.ui.enableFrontWheelImage.hide(), s.ui.enableFrontWheelCloseImage.hide(), s.ui.disableFrontWheelCloseImage.show()), u ? (s.ui.rearTirePackage.removeClass("disable-div"), s.ui.rearTirePackage.find($("#rear-tire-size")).html(u.size), s.ui.rearTirePackage.find($("#rear-tire-style")).html(u.style.brand.code + " " + u.style.name), s.ui.rearTirePackage.find($("#rear-tire-number")).html(u.supplierNumber), u.images && s.ui.rearTirePackage.find($("#rear-tire-image")).attr("src", u.images[0].thumbnail.url), r = u.quoteAllowed, s.ui.disableRearTireImage.hide(), s.ui.enableRearTireImage.show(), s.ui.enableRearTireCloseImage.show(), s.ui.disableRearTireCloseImage.hide(), s.ui.rearTireSelectLink.hide(), $("#tires-product-number-rear").val(u.productNumber)) : (s.ui.disableRearTireImage.show(), s.ui.enableRearTireImage.hide(), s.ui.enableRearTireCloseImage.hide(), s.ui.disableRearTireCloseImage.show()), h ? (s.ui.rearWheelPackage.removeClass("disable-div"), s.ui.rearWheelPackage.find($("#rear-wheel-size")).html(h.size), s.ui.rearWheelPackage.find($("#rear-wheel-style")).html(h.style.brand.code + " " + h.style.name), s.ui.rearWheelPackage.find($("#rear-wheel-number")).html(h.supplierNumber), h.images && s.ui.rearWheelPackage.find($("#rear-wheel-image")).attr("src", h.images[0].thumbnail.url), o = h.quoteAllowed, s.ui.disableRearWheelImage.hide(), s.ui.enableRearWheelImage.show(), s.ui.disableRearWheelCloseImage.hide(), s.ui.enableRearWheelCloseImage.show(), s.ui.rearWheelSelectLink.hide(), $("#wheels-product-number-rear").val(h.productNumber)) : (s.ui.disableRearWheelImage.show(), s.ui.enableRearWheelImage.hide(), s.ui.enableRearWheelCloseImage.hide(), s.ui.disableRearWheelCloseImage.show()), (l && d || u && h) && (s.ui.addPackageToCart.prop("disabled", !1), s.ui.addPackageToCart.removeClass("button-disabled"), s.ui.addPackageToQuote.prop("disabled", !1), s.ui.addPackageToQuote.removeClass("button-disabled")), c ? (s.ui.frontTpmsPackage.removeClass("disable-div"), s.ui.frontTpmsPackage.find($("#front-tpms-size")).html(c.size), s.ui.frontTpmsPackage.find($("#front-tpms-style")).html(c.style.brand.code + " " + c.style.name), s.ui.frontTpmsPackage.find($("#front-tpms-number")).html(c.supplierNumber), c.images && s.ui.frontTpmsPackage.find($("#front-tpms-image")).attr("src", c.images[0].thumbnail.url), a = c.quoteAllowed, s.ui.disableFrontTpmsImage.hide(), s.ui.enableFrontTpmsImage.show(), s.ui.disableFrontTpmsCloseImage.hide(), s.ui.enableFrontTpmsCloseImage.show(), s.ui.frontTpmsSelectLink.hide(), $("#tpms-product-number-front").val(c.productNumber)) : (s.ui.disableFrontTpmsImage.show(), s.ui.enableFrontTpmsImage.hide(), s.ui.enableFrontTpmsCloseImage.hide(), s.ui.disableFrontTpmsCloseImage.show()), p ? (s.ui.rearTpmsPackage.removeClass("disable-div"), s.ui.rearTpmsPackage.find($("#rear-tpms-size")).html(p.size), s.ui.rearTpmsPackage.find($("#rear-tpms-style")).html(p.style.brand.code + " " + p.style.name), s.ui.rearTpmsPackage.find($("#rear-tpms-number")).html(p.supplierNumber), p.images && s.ui.rearTpmsPackage.find($("#rear-tpms-image")).attr("src", p.images[0].thumbnail.url), n = p.quoteAllowed, s.ui.disableRearTpmsImage.hide(), s.ui.enableRearTpmsImage.show(), s.ui.disableRearTpmsCloseImage.hide(), s.ui.enableRearTpmsCloseImage.show(), s.ui.rearTpmsSelectLink.hide(), $("#tpms-product-number-rear").val(p.productNumber)) : (s.ui.disableRearTpmsImage.show(), s.ui.enableRearTpmsImage.hide(), s.ui.enableRearTpmsCloseImage.hide(), s.ui.disableRearTpmsCloseImage.show()), $("#package-div").show(), u || h || p ? ($("#rear-section").show(), $("#front-action-div").hide()) : ($("#rear-section").hide(), $("#front-action-div").show()), $("#createPackage").hide(), $("#addPackage").show(), t && i && a && r && o && n ? $(".add-package-to-quote").removeClass("hideVisibility") : $(".add-package-to-quote").addClass("hideVisibility"), s.updatePackageDropdownText(!0), s.loadingSpinnerView.hideSpinner() }) },
        onCrossImageTilesClick: function(e) { var t = this,
                i = e.target.id,
                a = $(e.target).data().rear;
            a || (a = "front"); var r = $("#" + i + "-product-number-" + a).val(),
                o = escapeSelector(r);
            i && $.ajax({ url: "/search/deleteFromPackage/" + i + "/" + a, type: "get" }).done(function(e) { $(".product-action-dropdown-" + o).prop("selectedIndex", 0); var i = !0,
                    a = !0,
                    r = !0,
                    n = !0,
                    s = !0,
                    l = !0,
                    d = e["product-tires"],
                    c = e["product-wheels"],
                    u = e["product-tpms"],
                    h = e["rearProduct-tires"],
                    p = e["rearProduct-wheels"],
                    m = e["rearProduct-tpms"];
                d ? (t.ui.disableFrontTireImage.hide(), t.ui.enableFrontTireImage.show(), t.ui.enableFrontTireCloseImage.show(), t.ui.disableFrontTireCloseImage.hide(), i = d.quoteAllowed) : (t.ui.frontTirePackage.addClass("disable-div"), t.ui.frontTirePackage.find($("#front-tire-size")).html(""), t.ui.frontTirePackage.find($("#front-tire-style")).html(""), t.ui.frontTirePackage.find($("#front-tire-number")).html(""), t.ui.frontTirePackage.find($("#front-tire-image")).attr("src", ""), t.ui.frontTireSelectLink.show(), t.ui.disableFrontTireImage.show(), t.ui.enableFrontTireImage.hide(), t.ui.enableFrontTireCloseImage.hide(), t.ui.disableFrontTireCloseImage.show()), c ? (t.ui.disableFrontWheelImage.hide(), t.ui.enableFrontWheelImage.show(), t.ui.enableFrontWheelCloseImage.show(), t.ui.disableFrontWheelCloseImage.hide(), a = c.quoteAllowed) : (t.ui.frontWheelPackage.addClass("disable-div"), t.ui.frontWheelPackage.find($("#front-wheel-size")).html(""), t.ui.frontWheelPackage.find($("#front-wheel-style")).html(""), t.ui.frontWheelPackage.find($("#front-wheel-number")).html(""), t.ui.frontWheelPackage.find($("#front-wheel-image")).attr("src", ""), t.ui.frontWheelSelectLink.show(), t.ui.disableFrontWheelImage.show(), t.ui.enableFrontWheelImage.hide(), t.ui.enableFrontWheelCloseImage.hide(), t.ui.disableFrontWheelCloseImage.show()), u ? (t.ui.disableFrontTpmsImage.hide(), t.ui.enableFrontTpmsImage.show(), t.ui.disableFrontTpmsCloseImage.hide(), t.ui.enableFrontTpmsCloseImage.show(), r = u.quoteAllowed) : (t.ui.frontTpmsPackage.addClass("disable-div"), t.ui.frontTpmsPackage.find($("#front-tpms-size")).html(""), t.ui.frontTpmsPackage.find($("#front-tpms-style")).html(""), t.ui.frontTpmsPackage.find($("#front-tpms-number")).html(""), t.ui.frontTpmsPackage.find($("#front-tpms-image")).attr("src", ""), t.ui.frontTpmsSelectLink.show(), t.ui.disableFrontTpmsImage.show(), t.ui.enableFrontTpmsImage.hide(), t.ui.disableFrontTpmsCloseImage.show(), t.ui.enableFrontTpmsCloseImage.hide()), h ? (t.ui.disableRearTireImage.hide(), t.ui.enableRearTireImage.show(), t.ui.enableRearTireCloseImage.show(), t.ui.disableRearTireCloseImage.hide(), n = h.quoteAllowed) : (t.ui.rearTirePackage.addClass("disable-div"), t.ui.rearTirePackage.find($("#rear-tire-size")).html(""), t.ui.rearTirePackage.find($("#rear-tire-style")).html(""), t.ui.rearTirePackage.find($("#rear-tire-number")).html(""), t.ui.rearTirePackage.find($("#rear-tire-image")).attr("src", ""), t.ui.rearTireSelectLink.show(), t.ui.disableRearTireImage.show(), t.ui.enableRearTireImage.hide(), t.ui.enableRearTireCloseImage.hide(), t.ui.disableRearTireCloseImage.show()), p ? (t.ui.disableRearWheelImage.hide(), t.ui.enableRearWheelImage.show(), t.ui.disableRearWheelCloseImage.hide(), t.ui.enableRearWheelCloseImage.show(), s = p.quoteAllowed) : (t.ui.rearWheelPackage.addClass("disable-div"), t.ui.rearWheelPackage.find($("#rear-wheel-size")).html(""), t.ui.rearWheelPackage.find($("#rear-wheel-style")).html(""), t.ui.rearWheelPackage.find($("#rear-wheel-number")).html(""), t.ui.rearWheelPackage.find($("#rear-wheel-image")).attr("src", ""), t.ui.rearWheelSelectLink.show(), t.ui.disableRearWheelImage.show(), t.ui.enableRearWheelImage.hide(), t.ui.disableRearWheelCloseImage.show(), t.ui.enableRearWheelCloseImage.hide()), m ? (t.ui.disableRearTpmsImage.hide(), t.ui.enableRearTpmsImage.show(), t.ui.disableRearTpmsCloseImage.hide(), t.ui.enableRearTpmsCloseImage.show(), l = m.quoteAllowed) : (t.ui.rearTpmsPackage.addClass("disable-div"), t.ui.rearTpmsPackage.find($("#rear-tpms-size")).html(""), t.ui.rearTpmsPackage.find($("#rear-tpms-style")).html(""), t.ui.rearTpmsPackage.find($("#rear-tpms-number")).html(""), t.ui.rearTpmsPackage.find($("#rear-tpms-image")).attr("src", ""), t.ui.rearTpmsSelectLink.show(), t.ui.disableRearTpmsImage.show(), t.ui.enableRearTpmsImage.hide(), t.ui.disableRearTpmsCloseImage.show(), t.ui.enableRearTpmsCloseImage.hide()), d && c || h && p ? (t.ui.addPackageToCart.prop("disabled", !1), t.ui.addPackageToCart.removeClass("button-disabled"), t.ui.addPackageToQuote.prop("disabled", !1), t.ui.addPackageToQuote.removeClass("button-disabled")) : (t.ui.addPackageToCart.prop("disabled", !0), t.ui.addPackageToCart.addClass("button-disabled"), t.ui.addPackageToQuote.prop("disabled", !0), t.ui.addPackageToQuote.addClass("button-disabled")), i && a && r && n && s && l ? $(".add-package-to-quote").removeClass("hideVisibility") : $(".add-package-to-quote").addClass("hideVisibility"), d || c || h || p || u || m || ($("#package-div").hide(), t.updatePackageDropdownText(!1), $("#top-tabs").find($("#search-tabs")).removeClass("vehicle-search-tabs")) }) },
        onDeletePackage: function() { var e = this;
            $.ajax({ url: "/search/deletePackage", type: "get" }).done(function() { e.clearAllPackageFields(), $("#package-div").hide(), $("#top-tabs").find($("#search-tabs")).removeClass("vehicle-search-tabs") }) },
        onClearAllPackage: function() { var e = this;
            e.ui.searchProductAction.prop("selectedIndex", 0), e.ui.addPackageToCart.prop("disabled", !0), e.ui.addPackageToCart.addClass("button-disabled"), e.ui.addPackageToQuote.prop("disabled", !0), e.ui.addPackageToQuote.addClass("button-disabled"), $.ajax({ url: "/search/clearAllFromPackage", type: "get" }).done(function() { e.clearAllPackageFields(), e.ui.disableFrontTireImage.show(), e.ui.enableFrontTireImage.hide(), e.ui.enableFrontTireCloseImage.hide(), e.ui.disableFrontTireCloseImage.show(), e.ui.disableFrontWheelImage.show(), e.ui.enableFrontWheelImage.hide(), e.ui.enableFrontWheelCloseImage.hide(), e.ui.disableFrontWheelCloseImage.show(), e.ui.disableFrontTpmsImage.show(), e.ui.enableFrontTpmsImage.hide(), e.ui.disableFrontTpmsCloseImage.show(), e.ui.enableFrontTpmsCloseImage.hide(), e.ui.disableRearTireImage.show(), e.ui.enableRearTireImage.hide(), e.ui.enableRearTireCloseImage.hide(), e.ui.disableRearTireCloseImage.show(), e.ui.disableRearWheelImage.show(), e.ui.enableRearWheelImage.hide(), e.ui.disableRearWheelCloseImage.show(), e.ui.enableRearWheelCloseImage.hide(), e.ui.disableRearTpmsImage.show(), e.ui.enableRearTpmsImage.hide(), e.ui.disableRearTpmsCloseImage.show(), e.ui.enableRearTpmsCloseImage.hide() }) },
        clearAllPackageFields: function() { var e = this;
            e.ui.searchProductAction.prop("selectedIndex", 0), e.updatePackageDropdownText(!1), e.ui.frontTirePackage.addClass("disable-div"), e.ui.frontTirePackage.find($("#front-tire-size")).html(""), e.ui.frontTirePackage.find($("#front-tire-style")).html(""), e.ui.frontTirePackage.find($("#front-tire-number")).html(""), e.ui.frontTirePackage.find($("#front-tire-image")).attr("src", ""), e.ui.frontTireSelectLink.show(), e.ui.frontWheelPackage.addClass("disable-div"), e.ui.frontWheelPackage.find($("#front-wheel-size")).html(""), e.ui.frontWheelPackage.find($("#front-wheel-style")).html(""), e.ui.frontWheelPackage.find($("#front-wheel-number")).html(""), e.ui.frontWheelPackage.find($("#front-wheel-image")).attr("src", ""), e.ui.frontWheelSelectLink.show(), e.ui.frontTpmsPackage.addClass("disable-div"), e.ui.frontTpmsPackage.find($("#front-tpms-size")).html(""), e.ui.frontTpmsPackage.find($("#front-tpms-style")).html(""), e.ui.frontTpmsPackage.find($("#front-tpms-number")).html(""), e.ui.frontTpmsPackage.find($("#front-tpms-image")).attr("src", ""), e.ui.frontTpmsSelectLink.show(), e.ui.rearTirePackage.addClass("disable-div"), e.ui.rearTirePackage.find($("#rear-tire-size")).html(""), e.ui.rearTirePackage.find($("#rear-tire-style")).html(""), e.ui.rearTirePackage.find($("#rear-tire-number")).html(""), e.ui.rearTirePackage.find($("#rear-tire-image")).attr("src", ""), e.ui.rearTireSelectLink.show(), e.ui.rearWheelPackage.addClass("disable-div"), e.ui.rearWheelPackage.find($("#rear-wheel-size")).html(""), e.ui.rearWheelPackage.find($("#rear-wheel-style")).html(""), e.ui.rearWheelPackage.find($("#rear-wheel-number")).html(""), e.ui.rearWheelPackage.find($("#rear-wheel-image")).attr("src", ""), e.ui.rearWheelSelectLink.show(), e.ui.rearTpmsPackage.addClass("disable-div"), e.ui.rearTpmsPackage.find($("#rear-tpms-size")).html(""), e.ui.rearTpmsPackage.find($("#rear-tpms-style")).html(""), e.ui.rearTpmsPackage.find($("#rear-tpms-number")).html(""), e.ui.rearTpmsPackage.find($("#rear-tpms-image")).attr("src", ""), e.ui.rearTpmsSelectLink.show() },
        updatePackageDropdownText: function(e) { var t = this,
                i = this.ui.searchProductAction; "string" == typeof this.ui.searchProductAction && (i = $(this.ui.searchProductAction)); var a = i.find("option[value='Create Package'], option[value='Add to Package']");
            a.each(function() { $(this).text(e ? t.globalContentMessagesModel.get("productActionAddToPackage") : t.globalContentMessagesModel.get("productActionCreatePackage")) }) },
        packageDivInitialize: function() { var e = this;
            $("#showVehiclePackage").val() ? ("true" === $("#package-hide").val() ? $("#package-div").hide() : ($("#front-action-div").show(), $("#top-tabs").find($("#search-tabs")).addClass("vehicle-search-tabs"), $("#package-text").html($("#package-quantity").val()), $("#package-div").show(), $("#rear-tire-select").val() || $("#rear-wheel-select").val() || $("#rear-tpms-select").val() ? ($("#rear-section").show(), $("#front-action-div").hide()) : ($("#rear-section").hide(), $("#front-action-div").show())), $("#tire-select").val() ? ($(e.ui.frontTirePackage).removeClass("disable-div"), $(e.ui.frontTireSelectLink).hide(), $(e.ui.enableFrontTireImage).show(), $(e.ui.disableFrontTireImage).hide(), $(e.ui.enableFrontTireCloseImage).show(), $(e.ui.disableFrontTireCloseImage).hide()) : ($(e.ui.frontTirePackage).addClass("disable-div"), $(e.ui.frontTireSelectLink).show(), $(e.ui.enableFrontTireCloseImage).hide(), $(e.ui.disableFrontTireCloseImage).show(), $(e.ui.enableFrontTireImage).hide(), $(e.ui.disableFrontTireImage).show()), $("#wheel-select").val() ? ($(e.ui.frontWheelPackage).removeClass("disable-div"), $(e.ui.frontWheelSelectLink).hide(), $(e.ui.disableFrontWheelImage).hide(), $(e.ui.enableFrontWheelImage).show(), $(e.ui.enableFrontWheelCloseImage).show(), $(e.ui.disableFrontWheelCloseImage).hide()) : ($(e.ui.frontWheelPackage).addClass("disable-div"), $(e.ui.frontWheelSelectLink).show(), $(e.ui.disableFrontWheelImage).show(), $(e.ui.enableFrontWheelImage).hide(), $(e.ui.enableFrontWheelCloseImage).hide(), $(e.ui.disableFrontWheelCloseImage).show()), $("#tpms-select").val() ? ($(e.ui.frontTpmsPackage).removeClass("disable-div"), $(e.ui.frontTpmsSelectLink).hide(), $(e.ui.disableFrontTpmsImage).hide(), $(e.ui.enableFrontTpmsImage).show(), $(e.ui.disableFrontTpmsCloseImage).hide(), $(e.ui.enableFrontTpmsCloseImage).show()) : ($(e.ui.frontTpmsPackage).addClass("disable-div"), $(e.ui.frontTpmsSelectLink).show(), $(e.ui.disableFrontTpmsImage).show(), $(e.ui.enableFrontTpmsImage).hide(), $(e.ui.disableFrontTpmsCloseImage).show(), $(e.ui.enableFrontTpmsCloseImage).hide()), $("#rear-tire-select").val() ? ($(e.ui.rearTirePackage).removeClass("disable-div"), $(e.ui.rearTireSelectLink).hide(), $(e.ui.enableRearTireCloseImage).show(), $(e.ui.disableRearTireCloseImage).hide(), $(e.ui.enableRearTireImage).show(), $(e.ui.disableRearTireImage).hide()) : ($(e.ui.rearTirePackage).addClass("disable-div"), $(e.ui.rearTireSelectLink).show(), $(e.ui.enableRearTireCloseImage).hide(), $(e.ui.disableRearTireCloseImage).show(), $(e.ui.enableRearTireImage).hide(), $(e.ui.disableRearTireImage).show()), $("#rear-wheel-select").val() ? ($(e.ui.rearWheelPackage).removeClass("disable-div"), $(e.ui.rearWheelSelectLink).hide(), $(e.ui.disableRearWheelImage).hide(), $(e.ui.enableRearWheelImage).show(), $(e.ui.disableRearWheelCloseImage).hide(), $(e.ui.enableRearWheelCloseImage).show()) : ($(e.ui.rearWheelPackage).addClass("disable-div"), $(e.ui.rearWheelSelectLink).show(), $(e.ui.disableRearWheelImage).show(), $(e.ui.enableRearWheelImage).hide(), $(e.ui.disableRearWheelCloseImage).show(), $(e.ui.enableRearWheelCloseImage).hide()), $(e.ui.rearTpmsPackage).val() ? ($(e.ui.rearTpmsPackage).removeClass("disable-div"), $(e.ui.rearTpmsSelectLink).hide(), $(e.ui.disableRearTpmsImage).hide(), $(e.ui.enableRearTpmsImage).show(), $(e.ui.disableRearTpmsCloseImage).hide(), $(e.ui.enableRearTpmsCloseImage).show()) : ($(e.ui.rearTpmsPackage).addClass("disable-div"), $(e.ui.rearTpmsSelectLink).show(), $(e.ui.disableRearTpmsImage).show(), $(e.ui.enableRearTpmsImage).hide(), $(e.ui.disableRearTpmsCloseImage).show(), $(e.ui.enableRearTpmsCloseImage).hide()), $("#tire-select").val() && $("#wheel-select").val() || $("#rear-tire-select").val() && $("#rear-wheel-select").val() ? ($(this.ui.addPackageToCart).prop("disabled", !1), $(this.ui.addPackageToCart).removeClass("button-disabled"), $(this.ui.addPackageToQuote).prop("disabled", !1), $(this.ui.addPackageToQuote).removeClass("button-disabled")) : ($(this.ui.addPackageToCart).prop("disabled", !0), $(this.ui.addPackageToCart).addClass("button-disabled"), $(this.ui.addPackageToQuote).prop("disabled", !0), $(this.ui.addPackageToQuote).addClass("button-disabled")), $("#tire-select").val() || $("#rear-tire-select").val() || $("#wheel-select").val() || $("#rear-wheel-select").val() || $("#tpms-select").val() || $("#rear-tpms-select").val() || ($("#package-div").hide(), this.updatePackageDropdownText(!1))) : $("#package-div").hide() },
        onMarketingFilterCheckboxChange: function(e) { var t = $(e.target).data().selectedTab,
                i = "all-products-" + t,
                a = "all-programs-" + t,
                r = e.target.id; - 1 !== r.indexOf("all-programs") ? (this.ui.marketingProgramCheckbox.each(function() { $(this).prop("checked", !0) }), $(i).prop("checked", !1), $(i).val("")) : -1 !== r.indexOf("all-products") ? (this.ui.marketingProgramCheckbox.each(function() { var e = $(this).prop("id").split("-"),
                    t = e[0];
                1 == $("#" + t + "-check").prop("checked") && $("#" + t + "-value").val(t), $(this).prop("checked", !1), $(this).val("") }), $(a).prop("checked", !1), $(a).val("")) : ($(a).prop("checked", !1), $(i).prop("checked", !1), $(a).val(""), $(i).val("")); var o = e.target.id.split("-"),
                n = o[0];
            $("#" + n + "-value").val(0 == $("#" + n + "-check").prop("checked") ? n : ""), this.loadingSpinnerView.showSpinner(), $("#marketing-program-refinement-form-" + t).submit() },
        onKeywordSelectLink: function(e) { var t = $(e.target).data().tab; "tires" === t ? $(this.ui.searchTabs).children().find('a[href="#search-tires-tab"]').length > 0 ? this.ui.searchTabs.tabs({ active: 0 }) : window.location.href = $("#pltTiresURL").val() : "wheels" === t && ($(this.ui.searchTabs).children().find('a[href="#search-wheels-tab"]').length > 0 ? this.ui.searchTabs.tabs({ active: 1 }) : window.location.href = $("#customWheelsURL").val()) },
        loadSearchViewDefault: function() { var e = $(this.ui.selectDefaultView).val(); "listView" == e || "" == e || void 0 == e ? $(".list-view").attr("src", "/_ui/desktop/common/images/list_view_active.png") : $(".grid-view").attr("src", "/_ui/desktop/common/images/grid_view_active.png") },
        onGoodBetterBestLinkClick: function(e) { e.preventDefault(), this.loadingSpinnerView.showSpinner(), $("#compareProductsForm").attr("action", "/compare/getCompareProducts"), $("#compareProductsForm").submit() },
        escapeSpecialChar: function(e) { return e.replace(/(:|\.|\]|\[)/g, "\\$1") },
        dollarIconClick: function(e) { e.stopPropagation(), e.preventDefault(); var t = e.target.id.split("-")[3],
                i = e.target.id.split("-")[4];
            this.getDiscounts(t, i), $(".dollar-icon-" + this.escapeSpecialChar(t) + "-popup").css("display", "block") },
        closeBtnClick: function(e) { e.stopPropagation(), e.preventDefault(); var t = e.target.id.split("-")[2];
            $(".dollar-icon-" + this.escapeSpecialChar(t) + "-popup").css("display", "none") },
        getDiscounts: function(e, t) { var i = this;
            $.ajax({ url: "/search/displayMarketingDetails", type: "get", data: { productCode: e }, pCode: e, iIndex: t }).done(function(e) { $("#dollar-icon-" + i.escapeSpecialChar(this.pCode) + "-" + this.iIndex).html(e) }) },
        myListTabClick: function(e) {-1 !== e.target.href.indexOf("#mylist-tab") ? $(this.ui.listPagePrintIconDiv).show() : $(this.ui.listPagePrintIconDiv).hide() }
    })
}), define("OrderHistoryAccordionView", ["underscore", "jquery", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#rightpanel-OrderHistory", ui: { orderHeader: "#order-history-heading" }, events: { "click @ui.orderHeader": "clickOrderHistory" }, onRender: function() { this.restoreAccordionVisibilityStatus() }, clickOrderHistory: function(e) { t(e.currentTarget).hasClass("collapse") || this.getOrderHistory() }, restoreAccordionVisibilityStatus: function() { var e = "order-history-heading",
                i = sessionStorage.getItem(e); if ("off" == i) { var a = "/_ui/desktop/common/images/ArrowRt_GreyAcc.png";
                t("#" + e).parent().find("div.accordion-container").hide(), t("#" + e).find("img.arrow-image").attr("src", a) } else if ("on" == i) { var r = "/_ui/desktop/common/images/leftDownCaret.png";
                t("#" + e).parent().find("div.accordion-container").show(), t("#" + e).find("img.arrow-image").attr("src", r), this.getOrderHistory() } }, getOrderHistory: function() { t.ajax({ url: "/my-account/order-history/get-order-history-widget", type: "get" }).done(function(e) { t("#order-history-heading-container").html(e) }) } }) }), define("MyWarrantyAccordionView", ["underscore", "jquery", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#rightpanel-MyWarranty", ui: { mywarrantyHeader: "#mywarranty-heading", mywarrantyAccordionId: "#mywarranty-heading", manageWarrantyButton: "#manageWarrantyButton" }, events: { "click @ui.mywarrantyHeader": "clickMyWarranty", "click @ui.manageWarrantyButton": "clickManageWarranty" }, onRender: function() { this.restoreAccordionVisibilityStatus() }, clickMyWarranty: function(e) { t(e.currentTarget).hasClass("collapse") || this.getMyWarranty() }, clickManageWarranty: function() { window.location.href = "/my-warranty" }, restoreAccordionVisibilityStatus: function() { var e = sessionStorage.getItem(this.ui.mywarrantyAccordionId); if ("off" == e) { var i = "/_ui/desktop/" + WebStore.Common.siteUrl() + "/images/ArrowRt_GreyAcc.png";
                t(this.ui.mywarrantyAccordionId).parent().find("div.accordion-container").hide(), t(this.ui.mywarrantyAccordionId).find("img.arrow-image").attr("src", i) } else if ("on" == e) { var a = "/_ui/desktop/common/images/leftDownCaret.png";
                t(this.ui.mywarrantyAccordionId).parent().find("div.accordion-container").show(), t(this.ui.mywarrantyAccordionId).find("img.arrow-image").attr("src", a), this.getMyWarranty() } }, getMyWarranty: function() { t.ajax({ url: "/my-warranty/getWarranty", type: "get" }).done(function(e) { t("#mywarranty-heading-container").html(e) }) } }) }), define("ReturnHistoryAccordionView", ["underscore", "jquery", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#rightpanel-MyReturns", ui: { returnHeader: "#return-order-heading" }, events: { "click @ui.returnHeader": "clickReturnHistory" }, onRender: function() { this.restoreAccordionVisibilityStatus() }, clickReturnHistory: function(e) { t(e.currentTarget).hasClass("collapse") || this.getReturnHistory() }, restoreAccordionVisibilityStatus: function() { var e = "return-order-heading",
                i = sessionStorage.getItem(e); if ("off" == i) { var a = "/_ui/desktop/common/images/ArrowRt_GreyAcc.png";
                t("#" + e).parent().find("div.accordion-container").hide(), t("#" + e).find("img.arrow-image").attr("src", a) } else if ("on" == i) { var r = "/_ui/desktop/common/images/leftDownCaret.png";
                t("#" + e).parent().find("div.accordion-container").show(), t("#" + e).find("img.arrow-image").attr("src", r), this.getReturnHistory() } }, getReturnHistory: function() { t.ajax({ url: "/my-account/order-history/get-returns-history-widget", type: "get" }).done(function(e) { t("#return-order-heading-container").html(e) }) } }) }), define("ProgramStatusComponentView", ["jquery", "underscore", "backbone", "marionette", "epoxy", "ProgramStatusComponentViewModel"], function(e, t, i, a, r, o) { var n = a.ItemView.extend({ el: "#program-status-component", model: null, statusBubbleOffset: 11, ui: { programSelect: "#sel_program", prgSrt: "#prgstart", prgEnd: "#prgend", payoutPeriod: "#payoutPeriod", purchased: "#purchased", remaining: "#lefttobuy", statusBar: ".program-status-bar", statusBubble: ".program-status-bubble", statusBarProgress: ".program-status-bar-progress", progStatusRewardPara: "#pgmrightdivTxt", tierLable: "#tier-label", tierBottom: ".tier-bottom", tierLbl: "#tierLbl", ofLbl: "#ofLbl", widgetTotal: ".widget-total" }, events: { "change @ui.programSelect": "onProgramSelectChange" }, bindings: { "#prgstart": "text:formatNumber(startGraph, dataType, isGoalType)", "#prgend": "text:formatNumber(endGraph, dataType, isGoalType)", "#payoutPeriod": "text:payoutPeriod", "#purchased": 'text:formatNumber(mainPurchases, dataType, "")', "#lefttobuy": 'text:formatNumber(leftToBuy, dataType, "")', "#daysRemaining": "text:daysRemaining", "#flag-purchases": 'text:formatNumber(flagPurchases, dataType, "")', ".widget-target-total": 'text:formatNumber(goalFlag, dataType, "")', "#pgmrightdivTxt": "html:progStatusRewardPara" }, bindingFilters: { formatNumber: { get: function(e, t, i) { return i || "Monetary" !== t ? e : "$" + e } } }, onRender: function() { this.onProgramSelectChange() }, initialize: function() { this.model = new o, this.applyBindings() }, onProgramSelectChange: function() { this.model.set({ _id: this.ui.programSelect.val() }), this.model.fetch({ success: t.bind(this.updateStatusBubble, this) }) }, updateStatusBubble: function() { var e = this.ui.statusBar.css("width");
            e = parseInt(e.substring(0, e.length - 2)); var t = e * this.model.get("mainPurchasePercent");
            t > e && (t = e), this.ui.statusBarProgress.css("width", t); var i = this.model.get("flagPurchasePercent"),
                a = Math.floor(e * i);
            a > e && (a = e), a -= this.statusBubbleOffset, this.ui.statusBubble.css("left", a), this.model.get("isGoalType") ? this.ui.tierLable.hide() : (this.ui.tierLable.text(this.ui.tierLbl.val() + " " + this.model.get("currentTier") + " " + this.ui.ofLbl.val() + " " + this.model.get("numberOfTiers")), this.ui.tierLable.show()), this.model.get("flagPurchases") && this.model.get("flagPurchasePercent") ? (this.ui.tierBottom.show(), this.ui.statusBar.css("margin-top", "-58px"), this.ui.statusBar.css("white-space", "nowrap")) : (this.ui.tierBottom.hide(), this.ui.statusBar.css("margin-top", "-2px")), this.model.get("goalFlag") ? this.ui.widgetTotal.show() : this.ui.widgetTotal.hide() } }); return r.View.mixin(n.prototype), n }), define("GlobalSearchPageViewMediator", ["marionette", "GlobalSearchPageController", "CompareProductsPageController"], function(e, t, i) { return e.Object.extend({ initialize: function() { var e = window.location.search,
                a = -1 === e.indexOf("gbbSearchFlag=true") ? new t : new i;
            a.init() } }) }), define("QuotePreferencesView", ["jquery", "underscore", "epoxy", "backbone.marionette", "TextboxBehavior", "QuotePreferencesViewModel"], function(e, t, i, a, r, o) {
    var n = a.ItemView.extend({
        el: "#content",
        ui: { companyInfoForm: "#companyInfo", logoImage: ".js-logo-image", deleteImageLink: ".js-delete-image-link", invalidFileUploadLabel: ".js-invalid-file-upload-label", imageFileInput: "#file-input", infoSaveLink: "#btn-submit", settingsForm: "#settings", settingsSaveLink: "#btn-submit2", defaultTireWheelQtyInput: "#defaultTireWheelQuantity", invalidDefaultTireWheelQtyLabel: ".rqValidateDefaultQtyMessage", phoneInput: "#phone", faxInput: "#fax", emailInput: "#email", editLink: "#edit-company-info", activeTab: "#active-tab", errorSavingCompanyInfo: "#errorSavingCompanyInfo", saveSuccess: "#saveSuccess" },
        events: { "change @ui.imageFileInput": "onImageFileInputChange", "click @ui.infoSaveLink": "onInfoSaveLinkClick", "click @ui.settingsSaveLink": "onSettingsSaveLinkClick", "click @ui.okLink": "onOkLinkClick", "click @ui.editLink": "rqPreferencesEditCompanyInfo" },
        bindings: { "@ui.logoImage": "toggle:logoImageUrl, attr:{src:logoImageUrl}", "@ui.deleteImageLink": "toggle:logoImageUrl", "@ui.invalidFileUploadLabel": "text:invalidImageText, toggle:not(isImageValid)", "@ui.infoSaveLink": "toggle:isImageValid", "@ui.defaultTireWheelQtyInput": "value:defaultTireWheelQty, classes:{'input-error': not(isDefaultTireWheelQtyValid)}", "@ui.invalidDefaultTireWheelQtyLabel": "classes:{'retail-quote':isDefaultTireWheelQtyValid}" },
        initialize: function(e) {
            e = e || {}, this.model = e.model || this.model || o.getSharedInstance(), this.normalizeMarionetteBindingsUiKeys()
        },
        onRender: function() { this.applyBindings(), this.initPhoneInput(), this.initFaxInput(), this.initEmailInput(), this.ui.defaultTireWheelQtyInput.inputmask("Regex", { regex: "[0-9]|([1-9][0-9]{2})" }), this.initUpdateAllModal(), e("#tabs").tabs({ active: this.ui.activeTab.val() }), this.ui.saveSuccess.val() && e(".rq-preferences .header-message-indicator").slideDown(function() { setTimeout(function() { e(".rq-preferences .header-message-indicator").slideUp() }, 2e3) }), this.ui.errorSavingCompanyInfo.val() && this.rqPreferencesEditCompanyInfo() },
        initPhoneInput: function() { var e = new r;
            e.createPhoneTextbox(this.ui.phoneInput) },
        initFaxInput: function() { var e = new r;
            e.createPhoneTextbox(this.ui.faxInput) },
        initEmailInput: function() { var e = new r;
            e.createEmailTextbox(this.ui.emailInput) },
        initUpdateAllModal: function() { var i = e("#update-all-modal");
            i.on("click", "#cancel-modal-user-delete-link", t.bind(this.onModalCancelLinkClick, this)), i.on("click", "#btn-ok", t.bind(this.onModalOkLinkClick, this)) },
        onSettingsSaveLinkClick: function() { this.model.get("isDefaultTireWheelQtyValid") && (this.model.get("isLocationNumberAll") ? modalOpen("cancel", "update-all-modal") : this.ui.settingsForm.submit()) },
        onImageFileInputChange: function(e) { this.model.loadLogoImage(e.target.files[0]) },
        onInfoSaveLinkClick: function() { this.ui.companyInfoForm.submit() },
        onModalCancelLinkClick: function() { modalClose("update-all-modal") },
        onModalOkLinkClick: function() { this.ui.settingsForm.submit() },
        rqPreferencesEditCompanyInfo: function() { e(".company-info-container .contact-info").fadeOut("fast", function() { e(".company-info-container .contact-info-form").fadeIn() }) }
    });
    return i.View.mixin(n.prototype), n
}), define("BetaOptOutInterstitialComponentView", ["marionette", "epoxy", "BetaOptOutInterstitialComponentViewModel"], function(e, t, i) { var a = e.ItemView.extend({ ui: { optOutLink: ".beta-opt-out-continue-link" }, events: { "click @ui.optOutLink": "onOptOutContinueLinkClick" }, initialize: function(e) { e = e || {}, this.model = e.model || new i, this.normalizeMarionetteBindingsUiKeys() }, onRender: function() { this.applyBindings() }, onOptOutContinueLinkClick: function() { window.open(this.model.get("optOutLinkUrl"), this.model.get("optOutRedirectMethod")) } }); return t.View.mixin(a.prototype), a }), define("ProductDetailView", ["jquery", "underscore", "marionette", "LoadingSpinnerView", "GlobalStorefrontModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#content", loadingSpinnerView: a.getSharedInstance(), globalStorefrontModel: r.getSharedInstance(), ui: { $productEmail: "#product-email", $productPrint: "#product-print", $productPrintTire: "#product-print-tire", $qtyId: "#qty-id", $productDetailUpdate: "#product-detail-update", $addToCartId: "#add-to-cart-id", $productActionId: "#product-action-id", $productBack: "#product-detail-back", $productEmailSend: "#product-email-send", $productSmallImage: ".small-img", $featuresLabel: "#features-label", $searchResultsUrl: "#searchResultsUrl", $origin: "#origin" }, events: { "click @ui.$productEmail": "openSendEmailForm", "click @ui.$productPrint": "printDetailPage", "click @ui.$productPrintTire": "printProductImage", "keyup @ui.$qtyId": "checkEnteredQuantity", "click @ui.$productDetailUpdate": "updatePrice", "click @ui.$addToCartId": "submitAddToCartForm", "change @ui.$productActionId": "dropDownAction", "click @ui.$productBack": "goBack", "click @ui.$productEmailSend": "sendEmail", "click @ui.$productSmallImage": "displayLargeImage", "click @ui.$featuresLabel": "toggleFeatureList" }, onRender: function() { e("#fitment_id").hide(), this.loadFitmentData() }, goBack: function() { this.ui.$searchResultsUrl.val() && "Search" === this.ui.$origin.val() ? (window.location = this.ui.$searchResultsUrl.val(), sessionStorage.setItem("isFromDetailPage", !0)) : window.history.back() }, displayLargeImage: function(t) { var i = e(t.target).data().imageUrl,
                a = e(t.target).data().imageAltText,
                r = e(t.target).data().type; "video" == r ? (e(".main-video source").attr("src", i), e(".main-video").show(), e(".main-img").hide()) : (e(".main-video").hide(), e(".main-img").attr("src", i).show(), e(".main-img").attr("alt", a)) }, openSendEmailForm: function() { e("#send-email-div-message").html(""), e("#send-email-div").css({ display: "block" }) }, printDetailPage: function() { var t = e("#qty-id").val(),
                i = window.location.pathname;
            printUrl = i + "/print" + document.location.search + "&printQuantity=" + t, window.open(printUrl, "_blank") }, printProductImage: function() { var e = document.getElementById("product-large-image"),
                t = window.open("", "_blank", "width=980,height=700");
            t.document.open(); var i = "<link rel='stylesheet' href='/_ui/desktop/atdonline2/css/atdonline/reset.css'><link rel='stylesheet' href='/_ui/desktop/atdonline2/css/font-awesome.min.css'><link rel='stylesheet' href='/_ui/desktop/atdonline2/css/atdonline/slick-theme.css'><link rel='stylesheet' href='/_ui/desktop/atdonline2/css/atdonline/slick.css'><link rel='stylesheet' href='/_ui/desktop/atdonline2/css/atdonline/style.css'>";
            t.document.write("<html><head>" + i + '</head><body onload="window.print();self.close ();">' + e.innerHTML + "</body></html>"), t.document.close() }, loadFitmentData: function() { var t = e("#product-code-id").val(); if (null !== t) { var i, a = "/ajax/p/fitment-data?productCode=" + t;
                e.getJSON(a, function(t) { e.each(t, function(e, t) { i += "<tr><td>" + t.year + "</td><td>" + t.make + "</td><td>" + t.model + "</td><td>" + t.trim + "</td><td>" + t.optionName + "</td><td>" + t.position + "</td></tr>" }), e(".fitment").removeClass("hidden"), e("#fitment_id tbody").html(i), e("#fitment_id").show() }) } }, checkEnteredQuantity: function(t) { var i = this,
                a = e("#product-maxqty").val(); if (t.which > 47 && t.which < 58) { var r = e("#qty-id").val(); if (parseInt(a) > 0 && parseInt(r) > parseInt(a)) { var o = e(t.target).data().qtyWarnMessage;
                    o = o.replace("%s", e("#qty-id").val()), i.userConfirmation(o) } parseInt(r) < 1 && e("#qty-id").val("1") } }, sendEmail: function(t) { var i = this,
                a = e("#product-code-id").val(),
                r = e("#email-address").val(),
                o = "",
                n = e("#enableQuote").val(); if (i.isValidEmailAddress(r)) { var s = "/ajax/p/" + a + "/productDetailEmail",
                    l = { recipientEmail: r, "productEmailPriceData[0].showPriceSection": n };
                n && (e("#msrp_id").length && (o = e("#msrp_id").text()), l = { recipientEmail: r, "productEmailPriceData[0].msrp": o, "productEmailPriceData[0].unitPrice": e("#unit_price_id").text(), "productEmailPriceData[0].quantity": e("#qty-id").val(), "productEmailPriceData[0].taxFeesAndService": e("#tax_id").text(), "productEmailPriceData[0].installedPrice": e("#installed_price_id").text(), "productEmailPriceData[0].totalPrice": e("#total_price_id").text(), "productEmailPriceData[0].showPriceSection": n }); var d = e.post(s, l);
                e("#send-email-div-message").html("<p>" + e(t.target).data().emailSuccessMessage + " " + r + "</p>"), d.done(function() {}), e("#send-email-div").fadeOut(6e3) } else e("#send-email-div-message").html(e(t.target).data().emailValidationMessage).css({ display: "block", color: "red" }) }, userConfirmation: function(t) { confirm(t) === !1 && e("#qty-id").val("") }, updatePrice: function(t) { t.preventDefault(); var i = this,
                a = e("#product-code-id").val(),
                r = e("#product-unitPrice").val(),
                o = e("#qty-id").val(); if (o > 0) { i.loadingSpinnerView.showSpinner(); var n = "/retail-quote/taxAndServiceFee?productCode=" + a + "&unitPrice=" + r + "&qty=" + o;
                e.getJSON(n, function(t) { e.each(t, function() { e("#tax_id").html(i.addCurrencySymbol(t.taxFeeAndServiceCharges)), e("#total_price_id").html(i.addCurrencySymbol(t.totalPrice)), e("#installed_price_id").html(i.addCurrencySymbol(t.installedPrice)) }), i.loadingSpinnerView.hideSpinner() }) } }, submitAddToCartForm: function() { var t = this;
            e("#qty-id").val() > 0 && (t.loadingSpinnerView.showSpinner(), e("#pdp-add-to-cart-form").submit()) }, dropDownAction: function() { var t = this,
                i = e("#product-code-id").val(),
                a = (e("#packageUrl-id").val(), e("#product-action-id").val()),
                r = e("#frontRear").val(),
                o = e("#tab").val(),
                n = e("#packageQuantity").val(),
                s = e("#referrer").val(),
                l = e("#qty-id").val(),
                d = e("#product-retailPrice").val(),
                c = "" !== d ? !0 : !1; if (this.loadingSpinnerView.showSpinner(), "Add to Cart" === a) t.submitAddToCartForm();
            else if ("Add to List" === a) window.location.href = "/lists?productid=" + i + "&tab=addtolist&qty=" + l;
            else if ("Create List" === a) window.location.href = "/lists?productid=" + i + "&tab=createlist&qty=" + l;
            else if ("Add to Package" === a) window.location.href = "/p/package?productId=" + i + "&frontRear=" + r + "&tab=" + o + "&packageQuantity=" + n + "&referrer=" + s + "&isQuoteAllowed=" + c;
            else if ("Create Package" === a) window.location.href = "/p/package?productId=" + i + "&frontRear=" + r + "&tab=" + o + "&packageQuantity=" + n + "&referrer=" + s + "&isQuoteAllowed=" + c;
            else if ("Quote" === a) { var u = e("#front-fitment-id").val(),
                    h = e("#rear-fitment-id").val(),
                    p = e("#trim-option-id").val();
                e.ajax({ url: "/retail-quote/" + i + "/" + l, data: { ff: u, rf: h, trimOptionId: p }, type: "GET", success: function() { window.location.href = "/retail-quote/redesign/refreshQuote" }, error: function() { console.log("unable to add items to quote."), t.loadingSpinnerView.hideSpinner() } }) } else "Freight Cost" === a ? WebStore.Product.showFreightModal(i, l) : this.loadingSpinnerView.hideSpinner() }, addCurrencySymbol: function(e) { var t = this.globalStorefrontModel.get("languageIsoCode"); return "fr_CA" === t ? e.toLocaleString("fr-CA", { minimumFractionDigits: 2 }) + " $" : "$" + e.toLocaleString("en-US", { minimumFractionDigits: 2 }) }, isValidEmailAddress: function(e) { if ("" == e) return !1; var t = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/; return t.test(e) ? !0 : !1 }, toggleFeatureList: function() { e("#features-label").hasClass("more") ? (e("#features-label").removeClass("more"), e("#features-label").addClass("less")) : (e("#features-label").removeClass("less"), e("#features-label").addClass("more")), e("#show-features-span").toggle(), e("#hide-features-span").toggle(), e("#feature-list").toggle() } }) }), define("MakeRecurringView", ["jquery", "underscore", "marionette", "LoadingSpinnerView", "GlobalContentMessagesModel"], function(e, t, i, a, r) { return i.ItemView.extend({ loadingSpinnerView: a.getSharedInstance(), makeRecurringComponent: null, el: "#content", ui: { makeRecurringComponent: "#make-recurring-modal", makeRecurringButton: "#make-recurring-button", makeRecurringForm: "#recurringListForm", listName: "#listName", recurringType: ".recurringType", startDate: ".start_date_editlist", startDateError: "#start-date-error", nameFieldError: "#name-field-error", listCode: "#list-code" }, events: { "click @ui.makeRecurringButton": "onMakeRecurringButtonClick", "keydown @ui.listName": "onEnterMakeRecurringSubmit" }, initialize: function() {}, onRender: function() { this.setDefaultFormValues() }, setDefaultFormValues: function() { this.ui.startDate.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, minDate: 0 }) }, validateForm: function() { var e = this.isValidName(),
                t = Boolean("yes" === this.ui.recurringType.val()),
                i = this.isValidStartDate(); return t ? i ? this.hideInvalidStartDateError() : this.showInvalidStartDateError() : this.hideInvalidStartDateError(), Boolean(e && (t && i || !t)) }, hideInvalidListNameError: function(e) { e.ui.listName.removeClass("input-error"), e.getNameFieldError().hide() }, showInvalidListNameError: function(e, t) { e.ui.listName.addClass("input-error"), e.getNameFieldError(t).show() }, getNameFieldError: function(e) { return this.ui.nameFieldError.html(e), this.ui.nameFieldError.html() != e && this.ui.nameFieldError.html(e), this.ui.nameFieldError }, hideInvalidStartDateError: function() { var e = r.getSharedInstance();
            this.ui.startDate.removeClass("input-error"), this.ui.startDateError.html(e.get("listInvalidStartDateMessage")), this.ui.startDateError.hide() }, showInvalidStartDateError: function() { var e = r.getSharedInstance();
            this.ui.startDate.addClass("input-error"), this.ui.startDateError.html(e.get("listInvalidStartDateMessage")), this.ui.startDateError.show() }, isValidStartDate: function() { var t = this.ui.startDate.val(),
                i = e.datepicker.formatDate("mm/dd/yy", new Date); return Boolean(null != t && "" != t && t >= i) }, isValidName: function() { var t = this,
                i = this.ui.listName.val().trim(),
                a = /^[a-zA-Z0-9' ']+$/,
                r = !1; if (a.test(i)) { var o = "/lists/validName/" + i + "/" + t.ui.listCode.val();
                e.ajax({ type: "GET", url: o, async: !1 }).done(function(e) { 1 === e.code ? t.showInvalidListNameError(t, e.errorMessage) : (r = !0, t.hideInvalidListNameError(t)) }) } return r }, onEnterMakeRecurringSubmit: function(e) { null != e && 13 == e.keyCode && this.onMakeRecurringButtonClick(e) }, onMakeRecurringButtonClick: function(e) { e.preventDefault(); var t = this.validateForm();
            t && (this.loadingSpinnerView.showSpinner(), this.ui.makeRecurringForm.submit()) } }) }), define("MyListEditView", ["jquery", "underscore", "marionette", "EditListModalBehavior"], function(e, t, i, a) { return i.ItemView.extend({ EditListBehavior: null, editListBehavior: null, el: "#content", ui: { editListModal: "#edit-list-modal", listName: "#listName", nameFieldError: "#name-field-error", listCode: "#list-code", recurringOptions: ".recurring-options" }, initialize: function(e) { e = e || {}, this.EditListBehavior = e.EditListBehavior || a }, onRender: function() { this.initEditListBehavior(), this.ui.editListModal.on(this.EditListBehavior.Event_FormDidSuccessfullyValidateOnSubmit, this.onFormDidSuccessfullyValidate) }, initEditListBehavior: function() { this.editListBehavior = new this.EditListBehavior, this.editListBehavior.set$listModal(this.ui.editListModal), this.editListBehavior.set$listDetail(this.ui.editDetailParagraph), this.editListBehavior.init(), this.toggleRecurringOptionsView(), this.autoSelectFrequencyUom() }, toggleRecurringOptionsView: function() { "yes" !== this.ui.editListModal.data("recurring_order") && this.ui.recurringOptions.hide() }, autoSelectFrequencyUom: function() { var t = this.ui.editListModal.data("frequency_uom");
            e("#frequencyUom option").each(function() { e(this).val() === t && e(this).prop("selected", !0) }) }, onFormDidSuccessfullyValidate: function(t, i) { i.formData.description = i.formData.po, e.ajax({ url: "/lists/editList", type: "post", data: i.formData }).done(function() { window.location.href = "/lists/view/" + i.formData.listCode; var e = window.location.href.indexOf("updated") > -1; if (e) { { "/lists/view/" + i.formData.listCode } location.reload() } else window.location.href = "/lists/view/" + i.formData.listCode + "?updated=true" }).fail(function(e) { console.log(e.responseText) }) } }) }), define("QuoteSetupAspectRatioView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ loadingSpinnerView: a.getSharedInstance(), aspectRatiosDiameterContent: null, el: "#content", ui: { aspectRatiosDiameterContent: "#aspectRatios-diameter", arDiameterSaveButton: "#ar-diameter-save-button", aspectRatiosDiameterForm: "#aspect-ratios-diameter-form", attributeFilters: "#attributeFilters", readOnlyPage: "#readOnlyPage" }, events: { "click @ui.arDiameterSaveButton": "onArDiameterSaveButtonClick" }, initialize: function() {}, onRender: function() { "true" === this.ui.readOnlyPage.val() ? this.initializeAspectRatioReadOnly() : this.initializeAspectRatio() }, initializeAspectRatio: function() { this.aspectRationPageUpdate(), this.ui.arDiameterSaveButton.show(); var t = e("td.diameter.data"),
                i = e("td.ar.data"),
                a = e("td.diameter.col-header");
            this.unbindArdElements(), i.on("mouseover", function(t) { e(t.currentTarget).addClass("hover"), e(t.currentTarget).parent().addClass("hover") }), i.on("mouseout", function(t) { e(t.currentTarget).removeClass("hover"), e(t.currentTarget).parent().removeClass("hover") }), a.parent().on("mouseover", function(t) { var i = e(t.currentTarget).children().index(e(t.target)) + 1;
                i > 1 && e("td:nth-child(" + i + ")").addClass("hover") }), a.parent().on("mouseout", function(t) { var i = e(t.currentTarget).children().index(e(t.target)) + 1;
                e("td:nth-child(" + i + ")").removeClass("hover") }), i.on("click", function() { e(this).hasClass("active") ? (e(this).removeClass("active"), e(this).parent().removeClass("active"), e(this).parent().children().removeClass("active")) : (e(this).addClass("active"), e(this).parent().children().addClass("active")) }), t.on("click", function(t) { e(t.currentTarget).hasClass("active") ? e(t.currentTarget).removeClass("active") : e(t.currentTarget).addClass("active") }), a.parent().on("click", function(t) { var i = e(t.currentTarget).children().index(e(t.target)) + 1;
                e(t.target).hasClass("active") ? (e("td:nth-child(" + i + ")").removeClass("active"), e(t.target).removeClass("active")) : (e("td:nth-child(" + i + ")").addClass("active"), e(t.target).addClass("active")) }) }, initializeAspectRatioReadOnly: function() { this.aspectRationPageUpdate(), this.ui.arDiameterSaveButton.hide(), this.unbindArdElements() }, unbindArdElements: function() { var t = e("td.diameter.data"),
                i = e("td.ar.data"),
                a = e("td.diameter.col-header");
            i.off(), a.parent().off(), t.off() }, aspectRationPageUpdate: function() { e("div.ar-diameters-container td.diameter.data.active").removeClass("active"), e("div.ar-diameters-container td.data.active").removeClass("active"), e("div.ar-diameters-container td.diameter.col-header").removeClass("active"); var t = this.ui.attributeFilters.val(),
                i = t.split(";");
            e.each(i, function(t, i) { e(document.getElementById(i)).addClass("active") }) }, onArDiameterSaveButtonClick: function() { var t = [];
            e("div.ar-diameters-container td.diameter.data.active").each(function() { t.push(e(this).attr("id")) }), this.ui.attributeFilters.val(t.join(";")), e(".header-message-indicator.saved-check").fadeIn("fast", function() { setTimeout(function() { e(".header-message-indicator.saved-check").fadeOut() }, 2e3) }), this.loadingSpinnerView.showSpinner(), this.ui.aspectRatiosDiameterForm.submit() } }) }), define("ProductTypeGuideView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "ProductTypeGuideModel"], function(e, t, i, a, r) {
    return i.ItemView.extend({
        el: "#product-type",
        loadingSpinnerView: a.getSharedInstance(),
        productTypeGuideModel: r.getSharedInstance(),
        ui: { productCategory: "select.product-category", type: "select.type", wheelDropdownsDiv: ".wheel-div-dropdowns", frontWidth: "select.front-width", frontAspectRatio: "select.front-aspectratio", frontDiameter: "select.front-diameter", rearWidth: "select.rear-width", rearAspectRatio: "select.rear-aspectratio", rearDiameter: "select.rear-diameter", wheelDiameter: "select.wheel-diameter", wheelWidth: "select.wheel-width", wheelBoltPattern: "select.wheel-bolt-pattern", wheelOffset: "select.wheel-offset", goLink: "#product-type-go-link", wheelDivToggle: ".wheel-link", tireDivToggle: ".tire-link", closeRearSize: ".rearSizeclose", removeRearLink: ".removerearlink", isTireTextSearch: "checkbox.isTireTextSearch", isWheelTextSearch: "checkbox.isWheelTextSearch", isStaggered: "#isStaggered", N: "input.N", productTypeSearchForm: "#productTypeSearchForm", wheelSize: "#wheelSize", tireSizeFront: "#tireSizeFront", tireSizeRear: "#tireSizeRear", otherSize: "#otherSize", requiredMessage: "#requiredMessage", frontTireMessage: "#frontTireMessage", rearTireMessage: "#rearTireMessage", wheelSelectionMessage: "#wheelSelectionMessage", wheelMessage: "#wheelMessage", otherMessage: "#otherMessage", widthRequiredMessage: "#widthRequiredMessage", textSearchValidationMessage: "#textSearchValidationMessage", tooltipText: ".tooltip-text", tooltipDiv: "#tooltip-div", searchInterface: "#searchInterface", errorMsg: ".error-msg" },
        events: { "change @ui.productCategory": "onProductCategoryDropdownChange", "change @ui.type": "onTypeDropdownChange", "change @ui.frontWidth": "onFrontWidthDropdownChange", "change @ui.frontAspectRatio": "onFrontAspectRatioDropdownChange", "change @ui.frontDiameter": "onFrontDiameterDropdownChange", "change @ui.rearWidth": "onRearWidthDropdownChange", "change @ui.rearAspectRatio": "onRearAspectRatioDropdownChange", "change @ui.rearDiameter": "onRearDiameterDropdownChange", "change @ui.wheelDiameter": "onWheelDiameterDropdownChange", "change @ui.wheelWidth": "onWheelWidthDropdownChange", "change @ui.wheelBoltPattern": "onWheelBoltPatternDropdownChange", "click  @ui.wheelDivToggle": "onWheelDivImageClick", "click  @ui.tireDivToggle": "onTireDivImageClick", "click  @ui.closeRearSize": "oncloseRearSizefn", "click  @ui.removeRearLink": "onremoveRearLinkfn", "keyup @ui.wheelSize": "isValidWheelType", "keyup @ui.tireSizeFront": "isValidTireType", "keyup @ui.tireSizeRear": "isValidRearType", "mouseover @ui.goLink": "onProductSearchButtonMouseover", "mouseout @ui.goLink": "onProductSearchButtonMouseout", "keypress @ui.tireSizeFront": "onTireSizeTextInputKeypress", "keypress @ui.tireSizeRear": "onTireSizeTextInputKeypress", "keypress @ui.wheelSize": "onTireSizeTextInputKeypress", "change @ui.isStaggered": "onStaggeredSearchCheck" },
        productTypeVehicleTypeUrl: "/product-type/product-type",
        productTypeFrontWidthUrl: "/product-type/tire-front-width",
        productTypeFrontAspectRatioUrl: "/product-type/tire-front-aspectratio",
        productTypeFrontDiameterUrl: "/product-type/tire-front-rim-diameter",
        productTypeRearWidthUrl: "/product-type/tire-rear-width",
        productTypeRearAspectRatioUrl: "/product-type/tire-rear-aspectratio",
        productTypeRearDiameterUrl: "/product-type/tire-rear-rim-diameter",
        productTypeWheelDiameterUrl: "/product-type/wheel-diameter",
        productTypeWheelWidthUrl: "/product-type/wheel-width",
        productTypeWheelDiameterhUrl: "/product-type/wheel-diameter",
        productTypeWheelBoltPatternUrl: "/product-type/wheel-boltpattern",
        productTypeWheelOffsetUrl: "/product-type/wheel-offset",
        disabledSelectCssClass: "disabled",
        enabledGoCssClass: "theme-color",
        disabledGoCssClass: "grey",
        selectedProductCategory: null,
        selectedType: null,
        selectedTireType: null,
        selectedWheelType: null,
        selectedFrontDiameter: null,
        tiresSearchUITypes: ["TireSimpleSearch", "PLT_DropDowns"],
        wheelsSearchUITypes: ["WheelSimpleSearch", "Wheel_DropDowns"],
        othersSearchUITypes: ["OtherSimpleSearch"],
        regex: /^[0-9a-zA-Z\/]+$/,
        onRender: function() { void 0 !== this.el && (this.selectedProductCategory = this.productTypeGuideModel.get("selectedProductCategory"), this.selectedTireType = "PLT_DropDowns", this.selectedWheelType = "Wheel_DropDowns", this.selectedFrontDiameter = this.productTypeGuideModel.get("selectedFrontDiameter"), "" !== this.selectedProductCategory ? (this.ui.productCategory.val(this.selectedProductCategory), this.ui.type.val(this.selectedType)) : "" !== this.selectedType && this.ui.type.val(this.selectedType), this.disableGo(), this.isValidProductCategory() && (t(".rearSizeOpen").hide(), this.loadIntialDropDowns()), t("#tire-size-front").hide()) },
        onProductSearchButtonMouseover: function() { this.toggleSearchButtonTooltip() },
        onProductSearchButtonMouseout: function() { this.ui.tooltipDiv.hide() },
        toggleSearchButtonTooltip: function() { if (this.ui.tooltipDiv.hide(), t("#wheelSize").is(":hidden"))
                if (t("#tireSizeFront").is(":hidden"))
                    if (t(".tire-div-dropdowns").is(":hidden"))
                        if (t(".wheel-div-dropdowns").is(":hidden")) this.ui.tooltipDiv.hide(), this.ui.tooltipText.html("");
                        else { var e = this.ui.wheelSelectionMessage.val(); if ("0" == this.ui.wheelDiameter.val()) this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e);
                            else if ("0" == this.ui.wheelBoltPattern.val()) this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e);
                            else if (this.ui.isStaggered.is(":checked") && "0" == this.ui.wheelWidth.val()) { var e = this.ui.widthRequiredMessage.val();
                                this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e) } } else { var e = this.ui.requiredMessage.val(); "0" == this.ui.frontWidth.val() ? (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) : "0" == this.ui.frontAspectRatio.val() ? (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) : "0" == this.ui.frontDiameter.val() ? (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) : "0" == this.ui.rearWidth.val() ? (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) : "0" == this.ui.rearAspectRatio.val() ? (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) : "0" == this.ui.rearDiameter.val() && (this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e)) } else if (this.isValidTireType()) { if (!t("#tireSizeRear").is(":hidden") && !this.isValidRearType()) { var i = this.ui.rearTireMessage.val();
                    this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(i) } } else { var i = this.ui.frontTireMessage.val();
                this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(i) } else if (!this.isValidWheelType()) { var i = this.ui.wheelMessage.val();
                this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(i) } },
        onProductCategoryDropdownChange: function() { if (this.isValidProductCategory()) { t.when(this.populateDropdown(this.productTypeVehicleTypeUrl, this.ui.type, { productCategory: this.ui.productCategory.val() })).done(this.loadIntialDropDowns()), this.enableDropdown(this.ui.type); var e = t("#type").val().split("-");
                this.ui.N.val(e) } else this.disableDropdowns([this.ui.type]);
            t(".rearSizeOpen").hide(), this.disableGo() },
        loadIntialDropDowns: function() { t("#product-category").find("select").trigger("change"), this.isValidProductCategory() && this.populateDropdown(this.productTypeVehicleTypeUrl, this.ui.type, { productCategory: this.ui.productCategory.val() }) },
        onTypeDropdownChange: function() { if (this.isValidProductCategory() && this.isValidType()) { this.enableGo(); var e = void 0 == t("#type").val() || null == t("#type").val() ? "" : t("#type").val().split("-");
                this.ui.N.val(e) } var i = void 0 !== t("#type").find(":selected").data("searchuitype") ? t("#type").find(":selected").data("searchuitype") : "",
                a = void 0 !== t("#type").find(":selected").data("searchinterface") ? t("#type").find(":selected").data("searchinterface") : "";
            this.ui.searchInterface.val(a), t.inArray(i, this.wheelsSearchUITypes) > -1 ? (this.populateDropdown(this.productTypeWheelDiameterUrl, this.ui.wheelDiameter, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelDiameter), this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelBoltPattern, this.ui.wheelOffset]), this.showWheelUI()) : t.inArray(i, this.tiresSearchUITypes) > -1 ? this.showTireUI() : t.inArray(i, this.othersSearchUITypes) > -1 && this.showOtherUI() },
        onFrontWidthDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() ? (this.populateDropdown(this.productTypeFrontAspectRatioUrl, this.ui.frontAspectRatio, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), frontWidth: this.ui.frontWidth.val() }), this.enableDropdown(this.ui.frontAspectRatio), this.disableDropdowns([this.ui.frontDiameter])) : (this.disableDropdowns([this.ui.frontAspectRatio, this.ui.frontDiameter]), this.disableGo()) },
        onFrontAspectRatioDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() ? (this.populateDropdown(this.productTypeFrontDiameterUrl, this.ui.frontDiameter, { frontAspectratio: this.ui.frontAspectRatio.val(), productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), frontWidth: this.ui.frontWidth.val() }), this.enableDropdown(this.ui.frontDiameter)) : (this.disableDropdowns([this.ui.frontDiameter]), this.disableGo()), this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() && this.isValidFrontDiameter() ? this.enableGo() : this.disableGo() },
        onFrontDiameterDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() && this.isValidFrontDiameter() ? this.enableGo() : this.disableGo() },
        onRearWidthDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() ? (this.populateDropdown(this.productTypeRearAspectRatioUrl, this.ui.rearAspectRatio, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), rearWidth: this.ui.rearWidth.val() }), this.enableDropdown(this.ui.rearAspectRatio), this.disableDropdowns([this.ui.rearDiameter])) : (this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.disableGo()) },
        onRearAspectRatioDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() ? (this.populateDropdown(this.productTypeRearDiameterUrl, this.ui.rearDiameter, { rearAspectratio: this.ui.rearAspectRatio.val(), productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), rearWidth: this.ui.rearWidth.val() }), this.enableDropdown(this.ui.rearDiameter)) : (this.disableDropdowns([this.ui.rearDiameter]), this.disableGo()), this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() && this.isValidRearDiameter() ? this.enableGo() : this.disableGo() },
        onRearDiameterDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() && this.isValidRearDiameter() ? this.enableGo() : this.disableGo() },
        onWheelDiameterDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() ? (this.populateDropdown(this.productTypeWheelBoltPatternUrl, this.ui.wheelBoltPattern, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), wheelDiameter: this.ui.wheelDiameter.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelBoltPattern), this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelOffset])) : (this.disableDropdowns([this.ui.wheelBoltPattern, this.ui.wheelWidth, this.ui.wheelOffset]), this.disableGo()), this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() ? this.enableGo() : this.disableGo() },
        onWheelBoltPatternDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() ? (this.populateDropdown(this.productTypeWheelWidthUrl, this.ui.wheelWidth, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), wheelDiameter: this.ui.wheelDiameter.val(), wheelBoltPattern: this.ui.wheelBoltPattern.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelWidth), this.disableDropdowns([this.ui.wheelOffset])) : this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelOffset]), this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.ui.isStaggered.is(":checked") && this.isValidWheelWidth() ? this.enableGo() : this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && !this.ui.isStaggered.is(":checked") ? this.enableGo() : this.disableGo() },
        onWheelWidthDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.isValidWheelWidth() ? (this.populateDropdown(this.productTypeWheelOffsetUrl, this.ui.wheelOffset, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val(), wheelDiameter: this.ui.wheelDiameter.val(), wheelBoltPattern: this.ui.wheelBoltPattern.val(), wheelWidth: this.ui.wheelWidth.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelOffset), this.enableGo()) : (this.disableDropdowns([this.ui.wheelOffset]), this.disableGo()) },
        onWheelOffsetDropdownChange: function() { this.enableGo() },
        oncloseRearSizefn: function() { t(".rearSizeOpen").show(), t(".tire-size-text.front").is(":visible") ? (t(".rearSizeOpen.rearDropDowns").hide(), t(".tire-size-text.rear").show()) : (t(".rearSizeOpen.rearDropDowns").show(), t(".tire-size-text.rear").hide()), t("#isStaggered").prop("checked", !0), t(".rearSizeclose").hide(), t(".tire-div-dropdowns").is(":visible") && (t("#tire-size-front").show(), t("#tire-size").hide()) },
        onremoveRearLinkfn: function() { t(".tire-div-dropdowns").is(":visible") && (t("#tire-size-front").hide(), t("#tire-size").show()), t("#isStaggered").prop("checked", !1), t(".rearSizeclose").show(), t(".rearSizeOpen").hide() },
        showWheelUI: function() { var e = void 0 !== t("#type").find(":selected").data("searchuitype") ? t("#type").find(":selected").data("searchuitype") : "";
            t(".wheel-specifications").show(), t(".tire-specifications").hide(), t(".other-specifications").hide(), e === this.selectedWheelType ? (t(".wheel-size-span").show(), t(".wheel-size-text").hide(), t("#isWheelTextSearch").prop("checked", !1), t("#isStaggered").prop("checked", !1), t(".wheel-div-dropdowns").show(), t("#product-type .error-msg").hide(), t(".wheel-link").hide()) : e !== this.selectedWheelType && t.inArray(e, this.wheelsSearchUITypes) > -1 && (t(".wheel-size-span").show(), t(".wheel-size-text").show(), t(".wheel-link").hide(), t("#isWheelTextSearch").prop("checked", !0), t("#isStaggered").prop("checked", !1), t(".wheel-div-dropdowns").hide(), t("#product-type .error-msg").hide(), t("#wheelSize").val("")) },
        showTireUI: function() {
            var e = void 0 !== t("#type").find(":selected").data("searchuitype") ? t("#type").find(":selected").data("searchuitype") : "";
            t(".wheel-specifications").hide(), t(".tire-specifications").show(), t(".other-specifications").hide(), e === this.selectedTireType ? (t(".tire-size-span").show(), t(".tire-size-text.front").show(), t(".tire-size-text.rear").hide(), t("#isTireTextSearch").prop("checked", !0), t("#isStaggered").prop("checked", !1), t(".tire-div-dropdowns").hide(), t(".error-msg").hide(), t(".tireSizeRear-error-msgg").hide(), t("#tireSizeFront").val(""), t("#tireSizeRear").val(""), t(".rearSizeclose").show(), t(".tire-link").show()) : e !== this.selectedTireType && t.inArray(e, this.tiresSearchUITypes) > -1 && (t(".tire-size-span").show(), t(".tire-size-text.front").show(), t(".tire-size-text.rear").hide(), t("#isTireTextSearch").prop("checked", !0), t("#isStaggered").prop("checked", !1), t(".tire-div-dropdowns").hide(), t(".rearSizeclose").hide(), t(".error-msg").hide(), t(".tireSizeRear-error-msgg").hide(), t("#tireSizeFront").val(""), t("#tireSizeRear").val(""), t(".tire-link").hide()), t("#tire-size").show(), t("#tire-size-front").hide()
        },
        showOtherUI: function() { var e = void 0 !== t("#type").find(":selected").data("searchuitype") ? t("#type").find(":selected").data("searchuitype") : "";
            t(".wheel-specifications").hide(), t(".tire-specifications").hide(), t(".other-specifications").show(), t.inArray(e, this.othersSearchUITypes) > -1 && (t(".other-size-span").show(), t(".other-size-text").show(), t("#isOtherTextSearch").prop("checked", !0), t("#isStaggered").prop("checked", !1), t("#product-type .error-msg").hide(), t("#otherSize").val("")) },
        onWheelDivImageClick: function() { t("#product-type .wheel-div-dropdowns").is(":visible") ? (t("#product-type .wheel-div-dropdowns").hide(), t("#product-type .wheel-size-text").show(), t("#isWheelTextSearch").prop("checked", !0), this.enableGo()) : (t("#product-type .wheel-div-dropdowns").show(), t("#product-type .wheel-size-text").hide(), t("#isWheelTextSearch").prop("checked", !1), this.disableGo()) },
        onTireDivImageClick: function() { t("#product-type .tire-div-dropdowns").is(":visible") ? (t("#product-type .tire-div-dropdowns").hide(), t("#product-type .tire-size-text.front").show(), t("#product-type .tire-size-text.rear").hide(), t("#product-type .rearSizeOpen.rearDropDowns").hide(), t("#product-type .rearSizeclose").show(), t("#product-type #isTireTextSearch").prop("checked", !0), this.enableGo()) : (this.populateDropdown(this.productTypeFrontWidthUrl, this.ui.frontWidth, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val() }), this.populateDropdown(this.productTypeRearWidthUrl, this.ui.rearWidth, { productCategory: this.ui.productCategory.val(), type: this.ui.type.val() }), this.enableDropdown(this.ui.frontWidth), this.enableDropdown(this.ui.rearWidth), this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.disableDropdowns([this.ui.frontAspectRatio, this.ui.frontDiameter]), t("#product-type .tire-div-dropdowns").show(), t("#product-type .tire-size-text").hide(), t("#product-type .rearSizeclose").show(), t("#product-type .rearSizeOpen.rearDropDowns").hide(), t("#product-type #isTireTextSearch").prop("checked", !1), this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.disableGo()) },
        populateDropdown: function(e, i, a) { var r = this;
            t.get(e, a, function(e) { i.is(r.ui.type) ? r.resetDropdownType(i) : r.resetDropdown(i); var a = "",
                    o = t("<select />");
                t(e).each(function(e, n) { var s = t("<option />", { val: n.code + "-" + (n.key ? n.key : n.name), selected: n.selected, text: n.name });
                    i.is(r.ui.type) && (s.attr("data-searchuitype", n.searchUIType), s.attr("data-searchinterface", n.searchInterface), r.ui.searchInterface.val(n.searchInterface)), o.append(s), n.selected === !0 && (a = n.code + "-" + (n.key ? n.key : n.name)) }), -1 != navigator.appVersion.indexOf("MSIE 9") ? i.append(o.children()).css("width", 0).css("width", "").hide().show() : i.append(o.children()), "" !== a ? i.val(a) : i.prop("selectedIndex", 0), i.is(r.ui.type) && i.trigger("change") }) },
        resetDropdownType: function(e) {-1 != navigator.appVersion.indexOf("MSIE 9") ? e[0].options.length = 0 : e.children().slice(0).remove() },
        resetDropdown: function(e) {-1 != navigator.appVersion.indexOf("MSIE 9") ? e[0].options.length = 1 : e.children().slice(1).remove() },
        resetAllDropdown: function() { this.ui.wheelDropdownsDiv.find("select").each(function() { t(this).prop("selectedIndex", 0) }) },
        enableDropdown: function(e) { e.removeClass(this.disabledSelectCssClass), e.removeAttr(this.disabledSelectCssClass) },
        disableDropdowns: function(t) { e.each(t, function(e) { e.attr("disabled", this.disabledSelectCssClass), this.resetDropdown(e) }, this) },
        enableGo: function() { this.ui.goLink.removeClass(this.disabledGoCssClass), this.ui.goLink.addClass(this.enabledGoCssClass), this.ui.goLink.off("click").on("click", e.bind(this.onGoLinkClick, this)) },
        disableGo: function() { this.ui.goLink.removeClass(this.enabledGoCssClass), this.ui.goLink.addClass(this.disabledGoCssClass), this.ui.goLink.off("click") },
        isValidProductCategory: function() { return "" !== this.ui.productCategory.val() },
        isValidWheelType: function() { return this.ui.wheelSize.val() ? this.regex.test(t("#wheelSize").val()) ? t("#wheelSize").val().length < 3 ? (this.ui.errorMsg.hide(), !1) : (this.ui.errorMsg.hide(), !0) : (this.ui.errorMsg.show(), !1) : "" !== this.ui.wheelSize.val() },
        isValidOtherType: function() { return this.ui.otherSize.val() ? this.regex.test(t("#otherSize").val()) ? t("#otherSize").val().length < 3 ? (this.ui.errorMsg.hide(), !1) : (this.ui.errorMsg.hide(), !0) : (this.ui.errorMsg.show(), !1) : "" !== this.ui.otherSize.val() },
        isValidTireType: function() { return this.ui.tireSizeFront.val() ? this.regex.test(t("#tireSizeFront").val()) ? t("#tireSizeFront").val().length < 3 ? (this.ui.errorMsg.hide(), !1) : (this.ui.errorMsg.hide(), !0) : (this.ui.errorMsg.show(), !1) : "" !== this.ui.tireSizeFront.val() },
        isValidRearType: function() { return this.ui.tireSizeRear.val() ? this.regex.test(t("#tireSizeRear").val()) ? t("#tireSizeRear").val().length < 3 ? (this.ui.errorMsg.hide(), !1) : (this.ui.errorMsg.hide(), !0) : (this.ui.errorMsg.show(), !1) : "" !== this.ui.tireSizeRear.val() },
        isValidType: function() { return "" !== this.ui.type.val() },
        isValidFrontWidth: function() { return "" !== this.ui.frontWidth.val() },
        isValidFrontAspectRatio: function() { return "" !== this.ui.frontAspectRatio.val() },
        isValidFrontDiameter: function() { return "" !== this.ui.frontDiameter.val() },
        isValidRearWidth: function() { return "" !== this.ui.rearWidth.val() },
        isValidRearAspectRatio: function() { return "" !== this.ui.rearAspectRatio.val() },
        isValidRearDiameter: function() { return "" !== this.ui.rearDiameter.val() },
        isValidWheelDiameter: function() { return "0" !== this.ui.wheelDiameter.val() },
        isValidWheelWidth: function() { return "0" !== this.ui.wheelWidth.val() },
        isValidWheelBoltPattern: function() { return "0" !== this.ui.wheelBoltPattern.val() },
        isValidWheelOffset: function() { return "0" !== this.ui.wheelOffset.val() },
        replaceUrlParam: function(e, t, i) { if (this.getUrlParameter(t)) return e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i;
            null == i && (i = ""); var a = new RegExp("\\b(" + t + "=).*?(&|$)"); return e.search(a) >= 0 ? e.replace(a, "$1" + i + "$2") : e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i },
        getUrlParameter: function(e) { var t, i, a = decodeURIComponent(this.ui.productTypeSearchForm.attr("action")),
                r = a.split("&"); for (i = 0; i < r.length; i++)
                if (t = r[i].split("="), t[0] === e) return void 0 === t[1] ? !0 : t[1] },
        onTireSizeTextInputKeypress: function(e) { 13 == e.which && (e.preventDefault(), this.onGoLinkClick()) },
        onGoLinkClick: function() { if (this.ui.tooltipDiv.hide(), this.ui.tooltipText.html(""), this.resetCategorySelectionProductType(), t("#wheelSize").is(":hidden")) { if (t("#otherSize").is(":hidden"))
                    if (t("#tireSizeFront").is(":hidden")) { if (t(".rearSizeOpen.rearDropDowns").is(":visible") && ("0" == this.ui.frontWidth.val() || "0" == this.ui.frontAspectRatio.val())) { var e = this.ui.frontTireMessage.val(); return this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } if (this.ui.wheelDiameter.is(":visible") && this.ui.isStaggered.is(":checked") && !(this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.isValidWheelWidth())) { var e = this.ui.widthRequiredMessage.val(); return this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } if (t(".wheel-diameter").is(":visible") && (!this.isValidWheelDiameter() || !this.isValidWheelBoltPattern())) { var e = this.ui.otherMessage.val(); return this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } } else { if (!this.isValidTireType()) { var e = this.ui.frontTireMessage.val(); return this.ui.tireSizeFront.val().length < 3 && (e = this.ui.textSearchValidationMessage.val()), this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } if (!t("#tireSizeRear").is(":hidden") && !this.isValidRearType()) { var e = this.ui.rearTireMessage.val(); return this.ui.tireSizeRear.val().length < 3 && (e = this.ui.textSearchValidationMessage.val()), this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } } else if (!this.isValidOtherType()) { var e = this.ui.otherMessage.val(); return this.ui.otherSize.val().length < 3 && (e = this.ui.textSearchValidationMessage.val()), this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } } else if (!this.isValidWheelType()) { var e = this.ui.wheelMessage.val(); return this.ui.wheelSize.val().length < 3 && (e = this.ui.textSearchValidationMessage.val()), this.ui.tooltipDiv.fadeIn(), this.ui.tooltipText.html(e), !1 } if (this.isValidProductCategory() && this.isValidType()) { var i = void 0 !== t("#type").val() ? t("#type").val().split("-") : "",
                    a = "",
                    r = "",
                    o = i[0] || "";
                this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "N", o)); var n = i[1] || "",
                    s = void 0 !== t("#type").find(":selected").data("searchuitype") ? t("#type").find(":selected").data("searchuitype") : "",
                    l = "",
                    d = "",
                    c = "",
                    u = ""; if (s === this.selectedWheelType) { if (t("#isWheelTextSearch").is(":checked")) s === this.selectedWheelType && (a = t("#wheelSize").val(), r = "", d = "CW_T");
                    else { var h = t("#wheel-diameter").val().split("-");
                        a = h[1] || ""; var p = t("#wheel-width").val().split("-");
                        a += "-" + (p[1] || ""); var m = t("#wheel-bolt-pattern").val().split("-");
                        a += "-" + (m[1] || ""); var g = t("#wheel-offset").val().split("-");
                        a += "-" + (g[1] || ""), r = "", d = "CW_S", c = t("#wheel-diameter").val() + "," + t("#wheel-width").val() + "," + t("#wheel-bolt-pattern").val() + "," + t("#wheel-offset").val(), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "frontSize", c)) } l = t("#isStaggered").is(":checked") ? "Y" : "N" } else if (t("#isWheelTextSearch").is(":checked") && s !== this.selectedWheelType && t.inArray(s, this.wheelsSearchUITypes) > -1) { a = t("#wheelSize").val(), r = ""; var f = n.replace(/[`~!@#$%^&*()_|+\-=?;:,.<>\{\}\[\]\\\/]/gi, " "),
                        v = this.acr(f) || "";
                    d = v + "T", l = t("#isStaggered").is(":checked") ? "Y" : "N" } else if (s === this.selectedTireType)
                    if (l = t("#isStaggered").is(":checked") ? "Y" : "N", t("#isTireTextSearch").is(":checked")) a = t("#tireSizeFront").val(), d = "PLT_T", "Y" == l && (r = t("#tireSizeRear").val()), l = 0 == r.length ? "N" : "Y";
                    else { d = "PLT_S", p = t("#front-width").val().split("-"), arrAF = t("#front-aspectratio").val().split("-"), h = t("#front-diameter").val().split("-"), c = t("#front-width").val() + "," + t("#front-aspectratio").val() + "," + t("#front-diameter").val(); var a = p[1] || "";
                        a += "-" + arrAF[1] || "", a += "-" + h[1] || "", this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "frontSize", c)), "Y" == l && (arrWR = t("#rear-width").val().split("-") || "", arrAR = t("#rear-aspectratio").val().split("-"), arrDR = t("#rear-diameter").val().split("-"), r = arrWR[1] || "", r += "-" + arrAR[1] || "", r += "-" + arrDR[1] || "", u = t("#rear-width").val() + "," + t("#rear-aspectratio").val() + "," + t("#rear-diameter").val(), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "rearSize", u))), l = 0 == r.length ? "N" : "Y" } else if (s !== this.selectedTireType && t.inArray(s, this.tiresSearchUITypes) > -1) { a = t("#tireSizeFront").val(); var f = n.replace(/[`~!@#$%^&*()_|+\-=?;:,.<>\{\}\[\]\\\/]/gi, ""),
                        v = this.acr(f) || "";
                    d = v + "T", l = "N" } else if (t.inArray(s, this.othersSearchUITypes) > -1) { a = t("#otherSize").val(); var f = n.replace(/[`~!@#$%^&*()_|+\-=?;:,.<>\{\}\[\]\\\/]/gi, ""),
                        v = this.acr(f) || "";
                    d = v + "O", l = "N" } return l = d + l, searchTypeVal = t("#type").val(), searchTypeVal = searchTypeVal.replace(/&/, "_"), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "isStaggeredSearch", l)), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "searchTermOne", a)), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "searchTermTwo", r)), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "searchType", searchTypeVal)), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "searchFrom", "PT")), this.ui.productTypeSearchForm.attr("action", this.replaceUrlParam(this.ui.productTypeSearchForm.attr("action"), "interface", this.ui.searchInterface.val())), this.loadingSpinnerView.showSpinner(), this.ui.productTypeSearchForm.submit(), !1 } this.ui.goLink.tooltip("open") },
        acr: function(e) { var t, i, a; for (t = e.split(" "), i = "", index = 0; index < t.length;) a = t[index], i += a.charAt(0), index += 1; return i },
        onSelectFitmentClick: function(e) { this.forwardToUrl(t(e.currentTarget).data("href")) },
        forwardToUrl: function(e) { this.loadingSpinnerView.showSpinner(), window.location.href = e },
        resetCategorySelectionProductType: function() { t.ajax({ url: "/category/reset-category-selection", type: "get" }).done(function() {}) },
        onStaggeredSearchCheck: function() { this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.ui.isStaggered.is(":checked") && this.isValidWheelWidth() ? this.enableGo() : this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && !this.ui.isStaggered.is(":checked") ? this.enableGo() : this.disableGo() }
    })
}), define("RangedFilterMileageCAView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "RangedFilterMileageCAModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#slider-range-mileageCA", loadingSpinnerView: a.getSharedInstance(), rangedFilterMileageCAModel: r.getSharedInstance(), ui: { sliderMileageCA: "#slider-mileageCA", applyFilterMileageCA: "#apply-range-filter-mileageCA" }, events: { "click  @ui.applyFilterMileageCA": "onApplyFilterMileageCAClick" }, minPossibleValueMileageCA: "", maxPossibleValueMileageCA: "", selectedLowBoundMileageCA: "", selectedHighBoundMileageCA: "", stepSizeMileageCA: "", lblMileage: "", onRender: function() { this.minPossibleValueMileageCA = this.rangedFilterMileageCAModel.get("minPossibleValueMileageCA"), this.maxPossibleValueMileageCA = this.rangedFilterMileageCAModel.get("maxPossibleValueMileageCA"), this.selectedLowBoundMileageCA = this.rangedFilterMileageCAModel.get("selectedLowBoundMileageCA"), this.selectedHighBoundMileageCA = this.rangedFilterMileageCAModel.get("selectedHighBoundMileageCA"), this.stepSizeMileageCA = this.rangedFilterMileageCAModel.get("stepSizeMileageCA"), this.lblMileage = this.rangedFilterMileageCAModel.get("lblMileage"), this.maxPossibleValueMileageCA % this.stepSizeMileageCA != 0 && (this.maxPossibleValueMileageCA === this.selectedHighBoundMileageCA ? (this.maxPossibleValueMileageCA = (Math.floor(this.maxPossibleValueMileageCA / this.stepSizeMileageCA) + 1) * this.stepSizeMileageCA, this.selectedHighBoundMileageCA = this.maxPossibleValueMileageCA) : this.maxPossibleValueMileageCA = (Math.floor(this.maxPossibleValueMileageCA / this.stepSizeMileageCA) + 1) * this.stepSizeMileageCA), this.minPossibleValueMileageCA % this.stepSizeMileageCA != 0 && (this.minPossibleValueMileageCA === this.selectedLowBoundMileageCA ? (this.minPossibleValueMileageCA = Math.floor(this.minPossibleValueMileageCA / this.stepSizeMileageCA) * this.stepSizeMileageCA, this.selectedLowBoundMileageCA = this.minPossibleValueMileageCA) : this.minPossibleValueMileageCA = Math.floor(this.minPossibleValueMileageCA / this.stepSizeMileageCA) * this.stepSizeMileageCA), this.minPossibleValueMileageCA != this.maxPossibleValueMileageCA ? this.initMileage("CA") : (t("#details-mileageCA").hide(), t("#navDetails-mileageCA").hide()) }, initMileage: function(e) { var i = this;
            t("#lower-bound-label-mileageCA").text(i.getRangeAttribute("minPossibleValue", e) + i.lblMileage), t("#upper-bound-label-mileageCA").text(i.getRangeAttribute("maxPossibleValue", e) + i.lblMileage), t("#slider-mileageCA").slider({ range: !0, min: parseInt(i.getRangeAttribute("minPossibleValue", e)), max: parseInt(i.getRangeAttribute("maxPossibleValue", e)), step: parseInt(i.getRangeAttribute("stepSizeMileage", e)), values: [parseInt(i.getRangeAttribute("selectedLowBound", e)), parseInt(i.getRangeAttribute("selectedHighBound", e))], slide: function(e, a) { t("#selected-mileageCA").val(a.values[0] + i.lblMileage + " - " + a.values[1] + i.lblMileage), t("#selected-low-boundCA").val("" + a.values[0]), t("#selected-high-boundCA").val("" + a.values[1]) } }), t("#details-mileageCA").show(), t("#navDetails-mileageCA").show(), t("#selected-mileageCA").val(t("#slider-mileageCA").slider("values", 0) + i.lblMileage + " - " + t("#slider-mileageCA").slider("values", 1) + i.lblMileage) }, getRangeAttribute: function(e) { var t = this; switch (e) {
                case "minPossibleValue":
                    return t.minPossibleValueMileageCA;
                case "maxPossibleValue":
                    return t.maxPossibleValueMileageCA;
                case "selectedLowBound":
                    return t.selectedLowBoundMileageCA;
                case "selectedHighBound":
                    return t.selectedHighBoundMileageCA;
                case "stepSizeMileage":
                    return t.stepSizeMileageCA;
                default:
                    return "" } }, onApplyFilterMileageCAClick: function() { return t("#range-filter-formCA").submit(), !1 } }) }), define("RangedFilterMileageUSView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "RangedFilterMileageUSModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#slider-range-mileageUS", loadingSpinnerView: a.getSharedInstance(), rangedFilterMileageUSModel: r.getSharedInstance(), ui: { sliderMileageUS: "#slider-mileageUS", applyFilterMileageUS: "#apply-range-filter-mileageUS" }, events: { "click  @ui.applyFilterMileageUS": "onApplyFilterMileageUSClick" }, minPossibleValueMileageUS: "", maxPossibleValueMileageUS: "", selectedLowBoundMileageUS: "", selectedHighBoundMileageUS: "", stepSizeMileageUS: "", lblMileage: "", onRender: function() { this.minPossibleValueMileageUS = this.rangedFilterMileageUSModel.get("minPossibleValueMileageUS"), this.maxPossibleValueMileageUS = this.rangedFilterMileageUSModel.get("maxPossibleValueMileageUS"), this.selectedLowBoundMileageUS = this.rangedFilterMileageUSModel.get("selectedLowBoundMileageUS"), this.selectedHighBoundMileageUS = this.rangedFilterMileageUSModel.get("selectedHighBoundMileageUS"), this.stepSizeMileageUS = this.rangedFilterMileageUSModel.get("stepSizeMileageUS"), this.lblMileage = this.rangedFilterMileageUSModel.get("lblMileage"), this.maxPossibleValueMileageUS % this.stepSizeMileageUS != 0 && (this.maxPossibleValueMileageUS === this.selectedHighBoundMileageUS ? (this.maxPossibleValueMileageUS = (Math.floor(this.maxPossibleValueMileageUS / this.stepSizeMileageUS) + 1) * this.stepSizeMileageUS, this.selectedHighBoundMileageUS = this.maxPossibleValueMileageUS) : this.maxPossibleValueMileageUS = (Math.floor(this.maxPossibleValueMileageUS / this.stepSizeMileageUS) + 1) * this.stepSizeMileageUS), this.minPossibleValueMileageUS % this.stepSizeMileageUS != 0 && (this.minPossibleValueMileageUS === this.selectedLowBoundMileageUS ? (this.minPossibleValueMileageUS = Math.floor(this.minPossibleValueMileageUS / this.stepSizeMileageUS) * this.stepSizeMileageUS, this.selectedLowBoundMileageUS = this.minPossibleValueMileageUS) : this.minPossibleValueMileageUS = Math.floor(this.minPossibleValueMileageUS / this.stepSizeMileageUS) * this.stepSizeMileageUS), this.minPossibleValueMileageUS != this.maxPossibleValueMileageUS ? this.initMileage("US") : (t("#details-mileageUS").hide(), t("#navDetails-mileageUS").hide()) }, initMileage: function(e) { var i = this;
            t("#lower-bound-label-mileageUS").text(i.getRangeAttribute("minPossibleValue", e) + i.lblMileage), t("#upper-bound-label-mileageUS").text(i.getRangeAttribute("maxPossibleValue", e) + i.lblMileage), t("#slider-mileageUS").slider({ range: !0, min: parseInt(i.getRangeAttribute("minPossibleValue", e)), max: parseInt(i.getRangeAttribute("maxPossibleValue", e)), step: parseInt(i.getRangeAttribute("stepSizeMileage", e)), values: [parseInt(i.getRangeAttribute("selectedLowBound", e)), parseInt(i.getRangeAttribute("selectedHighBound", e))], slide: function(e, a) { t("#selected-mileageUS").val(a.values[0] + i.lblMileage + " - " + a.values[1] + i.lblMileage), t("#selected-low-boundUS").val("" + a.values[0]), t("#selected-high-boundUS").val("" + a.values[1]) } }), t("#details-mileageUS").show(), t("#navDetails-mileageUS").show(), t("#selected-mileageUS").val(t("#slider-mileageUS").slider("values", 0) + i.lblMileage + " - " + t("#slider-mileageUS").slider("values", 1) + i.lblMileage) }, getRangeAttribute: function(e) { var t = this; switch (e) {
                case "minPossibleValue":
                    return t.minPossibleValueMileageUS;
                case "maxPossibleValue":
                    return t.maxPossibleValueMileageUS;
                case "selectedLowBound":
                    return t.selectedLowBoundMileageUS;
                case "selectedHighBound":
                    return t.selectedHighBoundMileageUS;
                case "stepSizeMileage":
                    return t.stepSizeMileageUS;
                default:
                    return "" } }, onApplyFilterMileageUSClick: function() { return t("#range-filter-formUS").submit(), !1 } }) }), define("RangedFilterRetailView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "RangedFilterRetailModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#slider-range-retail", loadingSpinnerView: a.getSharedInstance(), rangedFilterRetailModel: r.getSharedInstance(), ui: { sliderRetailPrice: "#slider-range", applyFilterRetailPrice: "#apply-range-filter-retail", retailPriceRangeClear: "#retailPriceRangeClear" }, events: { "click  @ui.applyFilterRetailPrice": "onApplyFilterRetailPriceClick", "slidechange @ui.sliderRetailPrice": "onSlideRetailPrice", "click @ui.retailPriceRangeClear": "onRetailPriceRangeClearClick" }, rangeLowerBoundRetail: "", rangeUpperBoundRetail: "", minRetailPrice: "", maxRetailPrice: "", stepSizeRetail: "", lblPrice: "", onRender: function() { this.rangeLowerBoundRetail = this.rangedFilterRetailModel.get("rangeLowerBoundRetail"), this.rangeUpperBoundRetail = this.rangedFilterRetailModel.get("rangeUpperBoundRetail"), this.minRetailPrice = this.rangedFilterRetailModel.get("minRetailPrice"), this.maxRetailPrice = this.rangedFilterRetailModel.get("maxRetailPrice"), this.stepSizeRetail = this.rangedFilterRetailModel.get("stepSizeRetail"), this.lblPrice = this.rangedFilterRetailModel.get("lblPrice"), this.rangeUpperBoundRetail % this.stepSizeRetail != 0 && (this.rangeUpperBoundRetail === this.maxRetailPrice ? (this.rangeUpperBoundRetail = (Math.floor(this.rangeUpperBoundRetail / this.stepSizeRetail) + 1) * this.stepSizeRetail, this.maxRetailPrice = this.rangeUpperBoundRetail) : this.rangeUpperBoundRetail = (Math.floor(this.rangeUpperBoundRetail / this.stepSizeRetail) + 1) * this.stepSizeRetail), this.rangeLowerBoundRetail % this.stepSizeRetail != 0 && (this.rangeLowerBoundRetail === this.minRetailPrice ? (this.rangeLowerBoundRetail = Math.floor(this.rangeLowerBoundRetail / this.stepSizeRetail) * this.stepSizeRetail, this.minRetailPrice = this.rangeLowerBoundRetail) : this.rangeLowerBoundRetail = Math.floor(this.rangeLowerBoundRetail / this.stepSizeRetail) * this.stepSizeRetail), this.rangeLowerBoundRetail != this.rangeUpperBoundRetail ? this.initRetailPriceRange() : (t("#details-retail-price").hide(), t("#navDetails-retail").hide()) }, onSlideRetailPrice: function(e, i) { t("#amount").val(this.lblPrice + i.values[0] + " - " + this.lblPrice + i.values[1]), t("#selected-low-bound").val("" + i.values[0]), t("#selected-high-bound").val("" + i.values[1]) }, initRetailPriceRange: function() { t("#lower-bound-label-retail").text(this.lblPrice + this.rangeLowerBoundRetail), t("#upper-bound-label-retail").text(this.lblPrice + this.rangeUpperBoundRetail); var e = this;
            t("#slider-range").slider({ range: !0, min: this.rangeLowerBoundRetail, max: this.rangeUpperBoundRetail, step: this.stepSizeRetail, values: [this.minRetailPrice, this.maxRetailPrice], slide: function(i, a) { t("#amount").val(e.lblPrice + a.values[0] + " - " + e.lblPrice + a.values[1]), t("#selected-low-bound").val("" + a.values[0]), t("#selected-high-bound").val("" + a.values[1]) } }), t("#details-retail-price").show(), t("#navDetails-retail").show(), t("#amount").val(this.lblPrice + t("#slider-range").slider("values", 0) + " - " + this.lblPrice + t("#slider-range").slider("values", 1)) }, replaceUrlParamHref: function(e, t, i) { if (this.getUrlParameterHref(t) === !0) return e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i;
            null == i && (i = ""); var a = new RegExp("\\b(" + t + "=).*?(&|$)"); return e.search(a) >= 0 ? e.replace(a, "$1" + i + "$2") : e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i }, getUrlParameterHref: function(e) { var i, a, r = decodeURIComponent(t("#retailPriceRangeClear").attr("href")),
                o = r.split("&"); for (a = 0; a < o.length; a++)
                if (i = o[a].split("="), i[0] === e) return void 0 === i[1] ? !0 : i[1] }, onApplyFilterRetailPriceClick: function() { return t("#retail-price-range-filter-form").submit(), !1 }, onRetailPriceRangeClearClick: function() { t("#retailPriceRangeClear").attr("name", this.replaceUrlParamHref(t("#retailPriceRangeClear").attr("name"), "maxRetailPrice", "-1")), t("#retailPriceRangeClear").attr("name", this.replaceUrlParamHref(t("#retailPriceRangeClear").attr("name"), "minRetailPrice", "-1")), location.href = t("#retailPriceRangeClear").attr("name") } }) }), define("WheelSizeSearchView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "WheelSizeSearchModel"], function(e, t, i, a, r) {
    return i.ItemView.extend({
        el: "#wheel-size-search",
        loadingSpinnerView: a.getSharedInstance(),
        wheelSizeSearchModel: r.getSharedInstance(),
        ui: { wheelNormalSearchDiv: ".wheel-normal-search-div", wheelDropdownsDiv: ".category-product-type-dropdowns", wheelDiameter: "select.category-wheel-diameter", wheelBoltPattern: "select.category-wheel-bolt-pattern", wheelWidth: "select.category-wheel-width", wheelOffset: "select.category-wheel-offset", goLink: ".category-product-type-go-link", isWheelTextSearchChk: "#isWheelTextSearchChk", isStaggered: "#isStaggeredChk", N: "input.N", wheelSizeSearch: ".wheel-size-search-form", wheelSize: "#wheelSize", wheelSizeSelectionSearchForm: "#wheel-size-selection-search-form", wheelSizeError: "#category-wheel-size-error", wheelSelectionMessageCategory: "#wheelSelectionMessageCategory", requiredWidthMessage: "#requiredWidthMessage" },
        events: { "change @ui.wheelDiameter": "onWheelDiameterDropdownChange", "change @ui.wheelBoltPattern": "onWheelBoltPatternDropdownChange", "change @ui.wheelWidth": "onWheelWidthDropdownChange", "keypress @ui.wheelSize": "onWheelSizeTextInputKeypress", "keyup @ui.wheelSize": "isValidWheelType", "mouseover @ui.goLink": "onSearchButtonMouseover", "mouseout @ui.goLink": "onSearchButtonMouseout", "change @ui.isStaggered": "onStaggeredSearchCheck" },
        minimumSearchCharacters: 3,
        productTypeWheelDiameterUrl: "/product-type/wheel-diameter",
        productTypeWheelBoltPatternUrl: "/product-type/wheel-boltpattern",
        productTypeWheelWidthUrl: "/product-type/wheel-width",
        productTypeWheelOffsetUrl: "/product-type/wheel-offset",
        disabledSelectCssClass: "disabled",
        enabledGoCssClass: "theme-color",
        disabledGoCssClass: "grey",
        selectedType: "",
        selectedWheelType: null,
        selectedFrontDiameter: null,
        wheelsUITypes: ["Custom", "Steel Wheel"],
        onRender: function() { this.selectedWheelType = this.wheelSizeSearchModel.get("selectedWheelType"), this.selectedType = this.wheelSizeSearchModel.get("selectedType"), this.disableGo(), this.loadInitialDropDowns() },
        loadInitialDropDowns: function() { this.populateDropdown(this.productTypeWheelDiameterUrl, this.ui.wheelDiameter, { productCategory: this.selectedType, type: this.selectedType, isStaggered: !1 }), this.enableGo(), this.showWheelDropdowns(), this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelBoltPattern, this.ui.wheelOffset]) },
        onWheelDiameterDropdownChange: function() { this.isValidType() && this.isValidWheelDiameter() ? (this.populateDropdown(this.productTypeWheelBoltPatternUrl, this.ui.wheelBoltPattern, { productCategory: this.selectedType, type: this.selectedType, wheelDiameter: this.ui.wheelDiameter.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelBoltPattern), this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelOffset])) : (this.disableDropdowns([this.ui.wheelBoltPattern, this.ui.wheelWidth, this.ui.wheelOffset]), this.disableGo()), this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() ? this.enableGo() : this.disableGo() },
        onWheelBoltPatternDropdownChange: function() { this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() ? (this.populateDropdown(this.productTypeWheelWidthUrl, this.ui.wheelWidth, { productCategory: this.selectedType, type: this.selectedType, wheelDiameter: this.ui.wheelDiameter.val(), wheelBoltPattern: this.ui.wheelBoltPattern.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelWidth), this.disableDropdowns([this.ui.wheelOffset])) : (this.disableDropdowns([this.ui.wheelWidth, this.ui.wheelOffset]), this.disableGo()), this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.ui.isStaggered.is(":checked") && this.isValidWheelWidth() ? this.enableGo() : this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && !this.ui.isStaggered.is(":checked") ? this.enableGo() : this.disableGo() },
        onWheelWidthDropdownChange: function() { this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelWidth() && this.isValidWheelBoltPattern() ? (this.populateDropdown(this.productTypeWheelOffsetUrl, this.ui.wheelOffset, { productCategory: this.selectedType, type: this.selectedType, wheelDiameter: this.ui.wheelDiameter.val(), wheelBoltPattern: this.ui.wheelBoltPattern.val(), wheelWidth: this.ui.wheelWidth.val(), isStaggered: !1 }), this.enableDropdown(this.ui.wheelOffset), this.enableGo()) : (this.disableDropdowns([this.ui.wheelOffset]), this.disableGo()) },
        onWheelOffsetDropdownChange: function() { this.enableGo() },
        onSearchButtonMouseover: function() { this.toggleSearchButtonTooltip() },
        onSearchButtonMouseout: function() { this.ui.wheelSizeError.hide() },
        toggleSearchButtonTooltip: function() { if (this.ui.wheelSizeError.hide(), t("#wheel-size-search #wheelSize").is(":hidden"))
                if (t(".category-product-type-dropdowns").is(":hidden")) this.ui.wheelSizeError.hide();
                else { var e = this.ui.wheelSelectionMessageCategory.val(); if ("0" == this.ui.wheelDiameter.val()) this.ui.wheelSizeError.html(e), this.ui.wheelSizeError.show();
                    else if ("0" == this.ui.wheelBoltPattern.val()) this.ui.wheelSizeError.html(e), this.ui.wheelSizeError.show();
                    else if (this.ui.isStaggered.is(":checked") && "0" == this.ui.wheelWidth.val()) { var i = this.ui.requiredWidthMessage.val();
                        this.ui.wheelSizeError.html(i), this.ui.wheelSizeError.show() } } else if (!this.isValidWheelType()) { var e = t("#wheel-required-error").val();
                this.ui.wheelSizeError.html(e), this.ui.wheelSizeError.show() } },
        showWheelDropdowns: function() { this.ui.wheelSizeError.hide(), t.inArray(this.selectedWheelType, this.wheelsUITypes) > -1 ? (this.ui.wheelNormalSearchDiv.hide(), this.ui.wheelSize.val(""), this.resetAllDropdown(), this.ui.wheelDropdownsDiv.show(), this.ui.isWheelTextSearchChk.prop("checked", !1), this.enableGo()) : (t(".category-wheel-specifications").show(), t(".category-wheel-size-span").show(), t(".category-wheel-size-text").show(), t("#isWheelTextSearchChk").prop("checked", !0), t("#isStaggeredChk").prop("checked", !1), t(".category-wheel-div-dropdown").hide()) },
        populateDropdown: function(e, i, a) { var r = this;
            t.get(e, a, function(e) { i.is(r.ui.type) ? r.resetDropdownType(i) : r.resetDropdown(i); var a = t("<select />");
                t(e).each(function(e, i) { var r = t("<option />", { val: i.code + "-" + i.name, text: i.name });
                    a.append(r) }), i.append(a.children()), i.prop("selectedIndex", 0), i.is(r.ui.type) && i.trigger("change") }) },
        resetDropdownType: function(e) { e.children().slice(0).remove() },
        resetDropdown: function(e) { e.children().slice(1).remove() },
        resetAllDropdown: function() { this.ui.wheelDropdownsDiv.find("select").each(function() { t(this).prop("selectedIndex", 0) }) },
        enableDropdown: function(e) { e.removeClass(this.disabledSelectCssClass), e.removeAttr(this.disabledSelectCssClass) },
        disableDropdowns: function(t) { e.each(t, function(e) { e.attr("disabled", this.disabledSelectCssClass), this.resetDropdown(e) }, this) },
        enableGo: function() { this.ui.goLink.removeClass(this.disabledGoCssClass), this.ui.goLink.addClass(this.enabledGoCssClass), this.ui.goLink.off("click").on("click", e.bind(this.onGoLinkClick, this)) },
        disableGo: function() { this.ui.goLink.removeClass(this.enabledGoCssClass), this.ui.goLink.addClass(this.disabledGoCssClass), this.ui.goLink.off("click") },
        isValidWheelType: function() { var e = t("#wheel-required-error").val(),
                i = t("#not-allowed-error").val(); if (this.ui.wheelSize.val()) { if (/[*#!]/g.test(this.ui.wheelSize.val())) return this.ui.wheelSizeError.html(i), this.ui.wheelSizeError.show(), !1; var a = this.ui.wheelSize.val().replace(/[\s\*]/g, "").length >= this.minimumSearchCharacters; return a ? (this.ui.wheelSizeError.hide(), !0) : (this.ui.wheelSizeError.html(e), this.ui.wheelSizeError.show(), !1) } return this.ui.wheelSizeError.html(e), this.ui.wheelSizeError.show(), !1 },
        isValidType: function() { return "" !== this.selectedType },
        isValidWheelDiameter: function() { return "0" !== this.ui.wheelDiameter.val() },
        isValidWheelWidth: function() { return "0" !== this.ui.wheelWidth.val() },
        isValidWheelBoltPattern: function() { return "0" !== this.ui.wheelBoltPattern.val() },
        isValidWheelOffset: function() { return "0" !== this.ui.wheelOffset.val() },
        replaceUrlParam: function(e, t, i) { if (this.getUrlParameter(t)) return e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i;
            null == i && (i = ""); var a = new RegExp("\\b(" + t + "=).*?(&|$)"); return e.search(a) >= 0 ? e.replace(a, "$1" + i + "$2") : e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i },
        getUrlParameter: function(e) {
            var t, i, a = decodeURIComponent(this.ui.wheelSizeSelectionSearchForm.attr("action")),
                r = a.split("&");
            for (i = 0; i < r.length; i++)
                if (t = r[i].split("="), t[0] === e) return void 0 === t[1] ? !0 : t[1]
        },
        onWheelSizeTextInputKeypress: function(e) { 13 == e.which && (e.preventDefault(), this.onGoLinkClick()) },
        onGoLinkClick: function() { var e = "",
                i = "",
                a = "",
                r = ""; if (this.ui.wheelNormalSearchDiv.is(":visible")) { if (!this.isValidWheelType()) return !1;
                this.ui.isWheelTextSearchChk.prop("checked", !0) } else { if (!this.isValidWheelWidth() && !this.isValidWheelDiameter()) return !1;
                this.ui.isWheelTextSearchChk.prop("checked", !1) } if (t("#isWheelTextSearchChk").is(":checked")) e = t("#wheel-size-search #wheelSize").val(), i = "", a = "T";
            else { var o = t("#wheel-size-search #wheel-diameter").val().split("-");
                e = o[1] || ""; var n = t("#wheel-size-search #wheel-width").val().split("-");
                e += "-" + (n[1] || ""); var s = t("#wheel-size-search #wheel-bolt-pattern").val().split("-");
                e += "-" + (s[1] || ""); var l = t("#wheel-size-search #wheel-offset").val().split("-");
                e += "-" + (l[1] || ""), i = "", a = "S", r = t("#wheel-size-search #wheel-diameter").val() + "," + t("#wheel-size-search #wheel-width").val() + "," + t("#wheel-size-search #wheel-bolt-pattern").val() + "," + t("#wheel-size-search #wheel-offset").val(), this.ui.wheelSizeSelectionSearchForm.attr("action", this.replaceUrlParam(this.ui.wheelSizeSelectionSearchForm.attr("action"), "frontSize", r)) } isStaggered = t("#wheel-size-search #isStaggeredChk").is(":checked") ? "Y" : "N", isStaggered = "CW_" + a + isStaggered, searchTypeVal = t("#wheel-size-search #N").val(), this.ui.wheelSizeSelectionSearchForm.attr("action", this.replaceUrlParam(this.ui.wheelSizeSelectionSearchForm.attr("action"), "isStaggeredSearch", isStaggered)), this.ui.wheelSizeSelectionSearchForm.attr("action", this.replaceUrlParam(this.ui.wheelSizeSelectionSearchForm.attr("action"), "searchTermOne", e)), this.ui.wheelSizeSelectionSearchForm.attr("action", this.replaceUrlParam(this.ui.wheelSizeSelectionSearchForm.attr("action"), "searchTermTwo", i)), this.ui.wheelSizeSelectionSearchForm.attr("action", this.replaceUrlParam(this.ui.wheelSizeSelectionSearchForm.attr("action"), "searchType", searchTypeVal)), this.loadingSpinnerView.showSpinner(), this.ui.wheelSizeSelectionSearchForm.submit() },
        forwardToUrl: function(e) { this.loadingSpinnerView.showSpinner(), window.location.href = e },
        onStaggeredSearchCheck: function() { this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && this.ui.isStaggered.is(":checked") && this.isValidWheelWidth() ? this.enableGo() : this.isValidType() && this.isValidWheelDiameter() && this.isValidWheelBoltPattern() && !this.ui.isStaggered.is(":checked") ? this.enableGo() : this.disableGo() }
    })
}), define("TireSizeSearchView", ["underscore", "jquery", "marionette", "LoadingSpinnerView", "TireSizeSearchModel"], function(e, t, i, a, r) { return i.ItemView.extend({ el: "#tire-size-search", loadingSpinnerView: a.getSharedInstance(), tireSizeSearchModel: r.getSharedInstance(), ui: { tiresNormalSearchDiv: ".tires-normal-search-div", tiresFrontRearDropdownsDiv: ".category-product-type-dropdowns", tireDivToggle: ".category-tire-link", isTireTextSearch: "#isTireTextSearch", addRemoveRearTires: ".add-remove-rear-tires", rearSearchAction: ".rear-search-action", frontSearchAction: ".front-search-action", frontDiv: ".front-div", rearDiv: ".rear-div", frontButton: ".front-button", rearButton: ".rear-button", tireSizeRear: "#tireSizeRear", tireSizeFront: "#tireSizeFront", frontWidth: "select.category-front-width", frontAspectRatio: "select.category-front-aspectratio", frontDiameter: "select.category-front-diameter", rearWidth: "select.category-rear-width", rearAspectRatio: "select.category-rear-aspectratio", rearDiameter: "select.category-rear-diameter", goLink: ".category-product-type-go-link", closeRearSize: ".categoryRearSizeclose", addRearTires: ".add-rear-tires", removeRearLink: ".category-remove-rear-link", isStaggered: "#isStaggered", removerearlinkText: ".category-remove-rear-link-text", closeRearSizeText: ".categoryRearSizecloseText", N: "input.N", tireSizeSearchForm: "#tire-size-search-form", tireSizeRearErrorMsg: "#category-tire-rear-size-error", tireSizeFrontErrorMsg: "#category-tire-front-size-error" }, events: { "change @ui.frontWidth": "onFrontWidthDropdownChange", "change @ui.frontAspectRatio": "onFrontAspectRatioDropdownChange", "change @ui.frontDiameter": "onFrontDiameterDropdownChange", "change @ui.rearWidth": "onRearWidthDropdownChange", "change @ui.rearAspectRatio": "onRearAspectRatioDropdownChange", "change @ui.rearDiameter": "onRearDiameterDropdownChange", "click  @ui.tireDivToggle": "onTireDivImageClick", "click  @ui.closeRearSizeText": "oncloseRearSizeTextfn", "click  @ui.addRemoveRearTires": "onAddRemoveRearTiresClick", "click  @ui.removerearlinkText": "onremoveRearLinkTextfn", "click  @ui.removeRearLink": "onremoveRearLinkfn", "keypress @ui.tireSizeFront": "onTireSizeTextInputKeypress", "keypress @ui.tireSizeRear": "onTireSizeTextInputKeypress", "keyup @ui.tireSizeFront": "isValidFrontType", "keyup @ui.tireSizeRear": "isValidRearType", "mouseover @ui.goLink": "onSearchButtonMouseover", "mouseout @ui.goLink": "onSearchButtonMouseout" }, minimumSearchCharacters: 3, productTypeVehicleTypeUrl: "/product-type/product-type", productTypeFrontWidthUrl: "/product-type/tire-front-width", productTypeFrontAspectRatioUrl: "/product-type/tire-front-aspectratio", productTypeFrontDiameterUrl: "/product-type/tire-front-rim-diameter", productTypeRearWidthUrl: "/product-type/tire-rear-width", productTypeRearAspectRatioUrl: "/product-type/tire-rear-aspectratio", productTypeRearDiameterUrl: "/product-type/tire-rear-rim-diameter", disabledSelectCssClass: "disabled", enabledGoCssClass: "theme-color", disabledGoCssClass: "grey", selectedTireType: null, selectedType: "11177-Passenger & Light Truck", selectedFrontWidth: null, onRender: function() { this.selectedTireType = this.tireSizeSearchModel.get("selectedTireType"), this.selectedType = this.tireSizeSearchModel.get("selectedType"), this.ui.isTireTextSearch.val() && t("#refineMent-Form #refineMentForm-Button").hide(), this.loadIntialDropDowns() }, loadIntialDropDowns: function() { this.populateDropdown(this.productTypeFrontWidthUrl, this.ui.frontWidth, { productCategory: this.selectedType, type: this.selectedType }), this.populateDropdown(this.productTypeRearWidthUrl, this.ui.rearWidth, { productCategory: this.selectedType, type: this.selectedType }), this.enableGo(), this.showTireDropdowns(), this.disableDropdowns([this.ui.frontAspectRatio, this.ui.frontDiameter]), this.disableDropdowns([this.ui.rearWidth, this.ui.rearAspectRatio, this.ui.rearDiameter]) }, onFrontWidthDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() ? (this.populateDropdown(this.productTypeFrontAspectRatioUrl, this.ui.frontAspectRatio, { productCategory: this.selectedType, type: this.selectedType, frontWidth: this.ui.frontWidth.val() }), this.enableDropdown(this.ui.frontAspectRatio), this.disableDropdowns([this.ui.frontDiameter])) : (this.disableDropdowns([this.ui.frontAspectRatio, this.ui.frontDiameter]), this.disableGo()) }, onFrontAspectRatioDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() ? (this.populateDropdown(this.productTypeFrontDiameterUrl, this.ui.frontDiameter, { frontAspectratio: this.ui.frontAspectRatio.val(), productCategory: this.selectedType, type: this.selectedType, frontWidth: this.ui.frontWidth.val() }), this.enableDropdown(this.ui.frontDiameter)) : (this.disableDropdowns([this.ui.frontDiameter]), this.disableGo()), this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() && this.isValidFrontDiameter() ? this.enableGo() : this.disableGo() }, onFrontDiameterDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidFrontWidth() && this.isValidFrontAspectRatio() && this.isValidFrontDiameter() ? (this.enableGo(), this.enableDropdown(this.ui.rearWidth), this.enableDropdown(this.ui.rearAspectRatio), this.enableDropdown(this.ui.rearDiameter)) : this.disableGo() }, onRearWidthDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() ? (this.populateDropdown(this.productTypeRearAspectRatioUrl, this.ui.rearAspectRatio, { productCategory: this.selectedType, type: this.selectedType, rearWidth: this.ui.rearWidth.val() }), this.enableDropdown(this.ui.rearAspectRatio), this.disableDropdowns([this.ui.rearDiameter])) : (this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.disableGo()) }, onRearAspectRatioDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() ? (this.populateDropdown(this.productTypeRearDiameterUrl, this.ui.rearDiameter, { rearAspectratio: this.ui.rearAspectRatio.val(), productCategory: this.selectedType, type: this.selectedType, rearWidth: this.ui.rearWidth.val() }), this.enableDropdown(this.ui.rearDiameter)) : (this.disableDropdowns([this.ui.rearDiameter]), this.disableGo()), this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() && this.isValidRearDiameter() ? this.enableGo() : this.disableGo() }, onRearDiameterDropdownChange: function() { this.isValidProductCategory() && this.isValidType() && this.isValidRearWidth() && this.isValidRearAspectRatio() && this.isValidRearDiameter() ? this.enableGo() : this.disableGo() }, onAddRemoveRearTiresClick: function() { this.ui.tireSizeFront.val() || this.ui.tireSizeFrontErrorMsg.hide(), this.ui.tireSizeRear.val() || this.ui.tireSizeFrontErrorMsg.hide(), this.ui.rearDiv.is(":visible") ? (this.ui.rearDiv.hide(), this.ui.frontButton.show(), this.ui.rearButton.hide(), this.ui.frontSearchAction.show(), this.ui.rearSearchAction.hide()) : (this.ui.rearDiv.show(), this.ui.frontButton.hide(), this.ui.rearButton.show(), this.ui.frontSearchAction.hide(), this.ui.rearSearchAction.show()) }, oncloseRearSizeTextfn: function() { t(".categoryRearSizeOpen").show(), t(".category-category-tire-size-text.front").is(":visible") ? (t(".categoryRearSizeOpen.rearDropDowns").hide(), t(".category-category-tire-size-text.rear").show()) : (t(".categoryRearSizeOpen.rearDropDowns").show(), t(".category-category-tire-size-text.rear").hide()), t("#isStaggered").prop("checked", !0), t(".categoryRearSizeclose").hide(), t(".categoryRearSizecloseText").hide() }, onremoveRearLinkTextfn: function() { t("#isStaggered").prop("checked", !1), t(".categoryRearSizecloseText").show(), t(".categoryRearSizeOpen").hide() }, onremoveRearLinkfn: function() { t("#isStaggered").prop("checked", !1), t(".categoryRearSizeclose").show(), t(".categoryRearSizecloseText").hide(), t(".categoryRearSizeOpen").hide() }, showTireDropdowns: function() { t(".category-tire-specifications").show(), t(".category-tire-size-span").show(), t(".category-tire-size-text.front").show(), t(".category-tire-size-text.rear").hide(), t("#isTireTextSearch").prop("checked", !0), t("#isStaggered").prop("checked", !1), t(".tire-div-dropdowns").hide() }, onTireDivImageClick: function() { this.ui.tiresNormalSearchDiv.is(":visible") ? (this.ui.tiresNormalSearchDiv.hide(), this.ui.tireSizeFront.val(""), this.ui.tiresFrontRearDropdownsDiv.show(), this.ui.isTireTextSearch.prop("checked", !0), this.resetAllDropdown(), this.enableGo()) : (this.ui.tiresNormalSearchDiv.show(), this.ui.tiresFrontRearDropdownsDiv.hide(), this.ui.isTireTextSearch.prop("checked", !1), this.disableDropdowns([this.ui.rearAspectRatio, this.ui.rearDiameter]), this.disableGo()), this.ui.rearDiv.hide(), this.ui.rearButton.hide(), this.ui.frontSearchAction.show(), this.ui.frontButton.show(), this.ui.rearSearchAction.hide() }, populateDropdown: function(e, i, a) { var r = this;
            t.get(e, a, function(e) { i.is(r.ui.type) ? r.resetDropdownType(i) : r.resetDropdown(i); var a = t("<select />");
                t(e).each(function(e, i) { var r = t("<option />", { val: i.code + "-" + i.name, text: i.name });
                    a.append(r) }), i.append(a.children()), i.prop("selectedIndex", 0), i.is(r.ui.type) && i.trigger("change") }) }, resetDropdownType: function(e) { e.children().slice(0).remove() }, resetAllDropdown: function() { this.ui.tiresFrontRearDropdownsDiv.find("select").each(function() { t(this).prop("selectedIndex", 0) }) }, resetDropdown: function(e) { e.children().slice(1).remove() }, enableDropdown: function(e) { e.removeClass(this.disabledSelectCssClass), e.removeAttr(this.disabledSelectCssClass) }, disableDropdowns: function(t) { e.each(t, function(e) { e.attr("disabled", this.disabledSelectCssClass), this.resetDropdown(e) }, this) }, enableGo: function() { this.ui.goLink.removeClass(this.disabledGoCssClass), this.ui.goLink.addClass(this.enabledGoCssClass), this.ui.goLink.off("click").on("click", e.bind(this.onGoLinkClick, this)) }, disableGo: function() { this.ui.goLink.removeClass(this.enabledGoCssClass), this.ui.goLink.addClass(this.disabledGoCssClass), this.ui.goLink.off("click") }, isValidProductCategory: function() { return "" !== this.selectedType }, isValidType: function() { return "" !== this.selectedType }, isValidFrontWidth: function() { return "0" !== this.ui.frontWidth.val() }, isValidFrontAspectRatio: function() { return "0" !== this.ui.frontAspectRatio.val() }, isValidFrontDiameter: function() { return "0" !== this.ui.frontDiameter.val() }, isValidRearWidth: function() { return "0" !== this.ui.rearWidth.val() }, isValidRearAspectRatio: function() { return "0" !== this.ui.rearAspectRatio.val() }, isValidRearDiameter: function() { return "0" !== this.ui.rearDiameter.val() }, isValidFrontType: function() { var e = t("#tire-error").val(),
                i = t("#not-allowed-error").val(); if (this.ui.tireSizeFront.val()) { if (/[*#!]/g.test(this.ui.tireSizeFront.val())) return this.ui.tireSizeFrontErrorMsg.html(i), this.ui.tireSizeFrontErrorMsg.show(), !1; var a = this.ui.tireSizeFront.val().replace(/[\s\*]/g, "").length >= this.minimumSearchCharacters; return a ? (this.ui.tireSizeFrontErrorMsg.hide(), !0) : (this.ui.tireSizeFrontErrorMsg.html(e), this.ui.tireSizeFrontErrorMsg.show(), !1) } return this.ui.tireSizeFrontErrorMsg.html(e), this.ui.tireSizeFrontErrorMsg.show(), "" !== this.ui.tireSizeFront.val() }, isValidRearType: function() { if (this.isValidFrontType()) { var e = t("#tire-error").val(),
                    i = t("#not-allowed-error").val(); if (this.ui.tireSizeRear.val()) { if (/[*#!]/g.test(this.ui.tireSizeRear.val())) return this.ui.tireSizeFrontErrorMsg.html(i), this.ui.tireSizeFrontErrorMsg.show(), !1; var a = this.ui.tireSizeRear.val().replace(/[\s\*]/g, "").length >= this.minimumSearchCharacters; return a ? (this.ui.tireSizeFrontErrorMsg.hide(), !0) : (this.ui.tireSizeFrontErrorMsg.html(e), this.ui.tireSizeFrontErrorMsg.show(), !1) } return this.ui.tireSizeFrontErrorMsg.html(e), this.ui.tireSizeFrontErrorMsg.show(), "" !== this.ui.tireSizeRear.val() } }, replaceUrlParam: function(e, t, i) { if (this.getUrlParameter(t)) return e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i;
            null == i && (i = ""); var a = new RegExp("\\b(" + t + "=).*?(&|$)"); return e.search(a) >= 0 ? e.replace(a, "$1" + i + "$2") : e + (e.indexOf("?") > 0 ? "&" : "?") + t + "=" + i }, getUrlParameter: function(e) { var t, i, a = decodeURIComponent(this.ui.tireSizeSearchForm.attr("action")),
                r = a.split("&"); for (i = 0; i < r.length; i++)
                if (t = r[i].split("="), t[0] === e) return void 0 === t[1] ? !0 : t[1] }, onTireSizeTextInputKeypress: function(e) { 13 == e.which && (e.preventDefault(), this.onGoLinkClick()) }, onSearchButtonMouseover: function() { this.toggleSearchButtonTooltip() }, onSearchButtonMouseout: function() { this.ui.tireSizeFrontErrorMsg.hide() }, toggleSearchButtonTooltip: function() { this.ui.tiresNormalSearchDiv.is(":visible") ? this.isValidFrontType() ? this.ui.rearDiv.is(":visible") && (this.isValidRearType() || this.showErrorMessage(t("#tire-error").val())) : this.showErrorMessage(t("#tire-error").val()) : this.ui.rearDiv.is(":visible") ? this.isValidRearWidth() || this.isValidRearAspectRatio() || this.isValidRearDiameter() ? this.isValidFrontWidth() || this.isValidFrontAspectRatio() || this.isValidFrontDiameter() || this.showErrorMessage(t("#tireExpandedSelectionErrorMessage").val()) : this.showErrorMessage(t("#tireExpandedSelectionErrorMessage").val()) : this.isValidFrontWidth() || this.isValidFrontAspectRatio() || this.isValidFrontDiameter() ? this.ui.tireSizeFrontErrorMsg.hide() : this.showErrorMessage(t("#tireExpandedSelectionErrorMessage").val()) }, showErrorMessage: function(e) { this.ui.tireSizeFrontErrorMsg.html(e), this.ui.tireSizeFrontErrorMsg.show() }, onGoLinkClick: function() { if (this.ui.tiresNormalSearchDiv.is(":visible")) { if (this.ui.isTireTextSearch.prop("checked", !0), !this.isValidFrontType()) return !1; if (this.ui.rearDiv.is(":visible")) { if (!this.isValidRearType()) return !1;
                    this.ui.isStaggered.prop("checked", !0) } else this.ui.isStaggered.prop("checked", !1) } else { if (this.ui.isTireTextSearch.prop("checked", !1), this.ui.rearDiv.is(":visible")) { if (!this.isValidRearWidth() && !this.isValidRearAspectRatio() && !this.isValidRearDiameter()) return !1;
                    this.ui.isStaggered.prop("checked", !0) } else this.ui.isStaggered.prop("checked", !1); if (!this.isValidFrontWidth() && !this.isValidFrontAspectRatio() && !this.isValidFrontDiameter()) return !1 } if (this.isValidProductCategory() && this.isValidType()) { vtype = t("#tire-size-search #N").val().split("-"); var e = "",
                    i = "",
                    a = (vtype[0] || "", ""),
                    r = "",
                    o = "",
                    n = "";
                a = t("#tire-size-search #isStaggered").is(":checked") ? "Y" : "N", t("#tire-size-search #isTireTextSearch").is(":checked") ? (e = t("#tire-size-search #tireSizeFront").val(), r = "T", "Y" == a && (i = t("#tire-size-search #tireSizeRear").val())) : (r = "S", arrWF = t("#tire-size-search #category-front-width").val().split("-"), arrAF = t("#tire-size-search #category-front-aspectratio").val().split("-"), arrDF = t("#tire-size-search #category-front-diameter").val().split("-"), o = t("#category-front-width").val() + "," + t("#category-front-aspectratio").val() + "," + t("#category-front-diameter").val(), e = arrWF[1] || "", e += "-" + arrAF[1] || "", e += "-" + arrDF[1] || "", this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "frontSize", o)), "Y" == a && (arrWR = t("#tire-size-search #category-rear-width").val().split("-") || "", arrAR = t("#tire-size-search #category-rear-aspectratio").val().split("-"), arrDR = t("#tire-size-search #category-rear-diameter").val().split("-"), i = arrWR[1] || "", i += "-" + arrAR[1] || "", i += "-" + arrDR[1] || "", n = t("#category-rear-width").val() + "," + t("#category-rear-aspectratio").val() + "," + t("#category-rear-diameter").val(), this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "rearSize", n)))), a = 0 == i.length ? "N" : "Y", searchTypeVal = t("#tire-size-search #N").val(), searchTypeVal = searchTypeVal.replace(/&/, "_"), a = "PLT_" + r + a, this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "isStaggeredSearch", a)), this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "searchTermOne", e)), this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "searchTermTwo", i)), this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "searchType", searchTypeVal)), this.loadingSpinnerView.showSpinner(); var s = t("#refineMent-Form input:checkbox:checked"),
                    l = []; return s && s.length > 0 && t(s).each(function() { l.push(t(this).next().text()) }), this.ui.tireSizeSearchForm.attr("action", this.replaceUrlParam(this.ui.tireSizeSearchForm.attr("action"), "selectedBrands", l)), this.ui.tireSizeSearchForm.submit(), !1 } }, onFitmentOptionsModelOpen: function() { this.ui.fitmentOptionsModal.find(".select-fitment").one("click", e.bind(this.onSelectFitmentClick, this)) }, onSelectFitmentClick: function(e) { this.forwardToUrl(t(e.currentTarget).data("href")) }, forwardToUrl: function(e) { this.loadingSpinnerView.showSpinner(), window.location.href = e } }) }), define("QuoteDetailView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ loadingSpinnerView: a.getSharedInstance(), el: "#content", ui: { $dialogLinkButton: "#dialog-link", $inputcheckbox: ".inputCheckbox", $checkbox4: "#optionsCheckbox3", $consumerState: "#consumerState", $consumerCity: "#consumerCity", $emailTextContainer: "#emailTextContainer", $emailEditLogo: ".fa-edit", $readableEmailMessage: "#readableEmailMessage", $editEmailCancelLink: "#editEmailCancelLink", $saveQuoteEmailTextBtn: "#saveQuoteEmailTextBtn", $quoteId: "#quoteId", $emailText: "#emailText" }, events: { "click @ui.$dialogLinkButton": "dialogLink", "click @ui.$inputcheckbox": "inputcheckboxClick", "click @ui.$checkbox4": "checkbox4Click", "keypress @ui.$consumerState": "consumerState", "keypress @ui.$consumerCity": "consumerCity", "click @ui.$emailEditLogo": "showEditEmailTextBox", "click @ui.$editEmailCancelLink": "replaceEditModeWithReadOnlyMode", "click @ui.$saveQuoteEmailTextBtn": "saveQuoteEmailText" }, consumerState: function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                i = t.match(/^[a-zA-Z]+$/);
            8 != e.which && 0 != e.which && (i || e.preventDefault()) }, consumerCity: function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                i = t.match(/^[a-zA-Z\s]*$/);
            8 != e.which && 0 != e.which && (i || e.preventDefault()) }, onRender: function() { e("#add-quote-button").click(function() { e("#retail-quote-items-form").submit() }), e("#deleteErrorMsg").hide(); var t = e("#statusDrop option:selected").val(); "Converted" == t ? e(".deleteDiv").hide() : e(".deleteDiv").show(), detailTextArea(), e("#otherTextarea").keyup(function(t) { var i = e(this).val(),
                    a = i.length,
                    r = e(this).attr("maxlength"),
                    o = r - a;
                a > r ? (e(this).val(i.substr(0, r)), e("#deleteTextAreaCount").html("0 " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"]), t.preventDefault()) : e("#deleteTextAreaCount").html("" != i ? o + " " + saveQuoteErrorMessages["text.quote.detail.charactersLeft"] : "&nbsp;") }), detailCustomerFormInfo(), e("#js_confirmDeleteBtn").on("click", function() { e(".deleteQuoteForm").valid() }), e("#js_cancelBtn").on("click", function() { e("#dialog").dialog("close") }), e(".form-control").on("keypress", function(e) { 32 !== e.which || this.value.length || e.preventDefault() }), e("#optionsCheckbox4").click(function() { e("#dialog .hidden").slideToggle() }), e("#dialog").dialog({ autoOpen: !1, width: 600, modal: !0 }), e.validator.setDefaults({ onfocusout: !1 }) }, dialogLink: function() { e("#dialog").dialog("open"), e(".ui-dialog").addClass("js_ui-dialog-custom"), e(".ui-dialog-titlebar").addClass("ui-retail-quote-popup-header"), e("#dialog").on("dialogopen", function() { e("#deleteErrorMsg").hide() }), e('.quoteCheckbox [type="checkbox"][name="optionsCheckbox"]').on("change", function() { e("#deleteErrorMsg").hide() }) }, inputcheckboxClick: function() { e(".hidden").hide() }, checkbox4Click: function() { e(".hidden").show() }, showEditEmailTextBox: function() { this.ui.$readableEmailMessage.hide(), this.ui.$emailTextContainer.show() }, replaceEditModeWithReadOnlyMode: function() { this.ui.$emailTextContainer.hide(), this.ui.$readableEmailMessage.show() }, saveQuoteEmailText: function() { var t = this.ui.$quoteId.val(),
                i = this.ui.$emailText.val(),
                a = this;
            e.ajax({ type: "GET", cache: !1, url: "/retail-quote/saveQuoteEmailText?emailText=" + encodeURI(i) + "&quoteCode=" + t, beforeSend: function() { a.loadingSpinnerView.showSpinner() }, success: function() { a.ui.$emailText.val(i), a.replaceEditModeWithReadOnlyMode(), a.ui.$readableEmailMessage.text(i), e("#textareaCount").hide() }, complete: function() { a.loadingSpinnerView.hideSpinner() }, error: function() { console.log("Quote emailtext not updated successfully") } }) } }) }), define("QuoteSummaryView", ["jquery", "marionette", "underscore"], function(e, t) { return t.ItemView.extend({ el: "#content", ui: { headerMessageIndicatorLabel: ".header-message-indicator", $searchButton: "#searchBtn", $clearButton: ".clearBtn", $paginationLink: ".paginationLink", $exportLink: "#exportLink", $printLink: "#printLink" }, events: { "click @ui.$searchButton": "searchQuotes", "click @ui.$clearButton": "clearQuoteButton", "click @ui.$paginationLink": "paginationLinkClick", "click @ui.$exportLink": "exportLinkClick", "click @ui.$printLink": "printLinkClick" }, onRender: function() { 2 == performance.navigation.type && window.location.reload(), e(".success-band").delay(5e3).slideUp("slow"), e("#phoneCode").keyup(function() { this.value = this.value.match(/\d*/g).join("").replace(/-*$/g, ""), 3 == e(this).val().match(/\d*/g).join("").length && (e("#phoneNum").prop("required", !0), e("#phoneNum").valid()), 3 == e("#phoneCode").val().match(/\d*/g).join("").length ? (e("label[for='phoneNum']").remove(), e("label[for='phoneCode']").hide(), e("#phoneCode").closest(".input-group").siblings(".input-group").append("<label class='error' for='phoneNum'>" + saveQuoteErrorMessages["text.quote.summary.validation.phoneNumber"] + "</label>"), e("#phoneNum").val() && e("label[for='phoneNum']").hide()) : "" == e("#phoneCode").val() && (e("#phoneNum").attr("required", !1).removeClass("error"), e("#phoneCode").attr("required", !1).removeClass("error"), e("label[for='phoneNum']").remove(), e("label[for='phoneCode']").show()), e("#phoneCode").val().length < 3 && (e("#phoneNum").attr("required", !1).removeClass("error"), e("label[for='phoneNum']").remove()) }), e("#phoneNum").keyup(function() { this.value = this.value.match(/\w*/g).join("").match(/(\w{0,3})(\w{0,7})/).slice(1).join("-").replace(/-*$/g, ""), e("#phoneNum").val() ? (e("label[for='phoneCode']").remove(), e("label[for='phoneNum']").hide(), e("#phoneNum").closest(".input-group").siblings(".input-group").append("<label class='error' for='phoneCode'>" + saveQuoteErrorMessages["text.quote.summary.validation.phoneAreaCode"] + "</label>"), e("#phoneCode").val().length > 0 && e("#phoneCode").val().length < 3 ? (e("#phoneCode").attr("required", !0).addClass("error"), e("label[for='phoneCode']").show().text(saveQuoteErrorMessages["text.quote.summary.validation.minPhoneNum"])) : e("label[for='phoneCode']").show().text(saveQuoteErrorMessages["text.quote.summary.validation.phoneAreaCode"]), 3 == e("#phoneCode").val().length && (e("label[for='phoneCode']").hide(), e("#phoneCode").removeClass("error"))) : e("#phoneNum").val("") && e("label[for='phoneNum']").show(), "" == e("#phoneCode").val() && "" == e("#phoneNum").val() && e("label[for='phoneCode']").remove() }), e("#email").keyup(function() { "" == e(this).val() && (e(this).removeClass("error"), e("label[for='email']").hide()) }), quotesSearchResults(), e(".fa-calendar1").click(function() { e("#datepicker1").focus(), e("#ui-datepicker-div").addClass("quotesSummary-Datepicker") }), e(".fa-calendar2").click(function() { e("#datepicker2").focus(), e("#ui-datepicker-div").addClass("quotesSummary-Datepicker") }), e(".datepicker").click(function() { e("#ui-datepicker-div").addClass("quotesSummary-Datepicker") }), e(".datepicker").datepicker().attr("enable", "true"), initializeDatepicker(), e("#datepicker1").datepicker("option", "onSelect", function() { var t = e("#datepicker2"),
                    i = e(this).datepicker("getDate");
                t.datepicker("option", "maxDate", new Date), t.datepicker("option", "minDate", i) }), e("#datepicker2").datepicker("option", "onSelect", function() { var t = e("#datepicker1"),
                    i = t.attr("data-lastDate"),
                    a = 1; if (1 == i) { var r = new Date;
                    r.setDate(r.getDate() - 1), t.datepicker("option", "minDate", r) } else { var o = i - a,
                        r = new Date;
                    r.setDate(r.getDate() - o), t.datepicker("option", "minDate", r) } var n = e(this).datepicker("getDate");
                t.datepicker("option", "maxDate", n) }), e("#quote_search_form").validate({ rules: { email: { required: !1, customemail: !0 }, phoneNo1: { minlength: 3 } }, messages: { email: { customemail: saveQuoteErrorMessages["text.quote.summary.validation.email"] }, phoneNo2: saveQuoteErrorMessages["text.quote.summary.validation.phoneNumber"], phoneNo1: { required: saveQuoteErrorMessages["text.quote.summary.validation.phoneAreaCode"], minlength: saveQuoteErrorMessages["text.quote.summary.validation.minPhoneNum"] } } }), e.validator.addMethod("customemail", function(e) { return "" == e ? !0 : /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(e) }), e.validator.addMethod("customPhone", function(e) { return "" == e ? !0 : /\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})/.test(e) }), e.validator.addMethod("lettersonly", function(e, t) { return this.optional(t) || /^[a-z\s]+$/i.test(e) }), e(".form-control").on("keypress", function(e) { 32 !== e.which || this.value.length || e.preventDefault() }) }, searchQuotes: function() { var t = e("#quote_search_form").valid();
            t ? e.ajax({ type: "POST", url: "/retail-quote/quote-summary", accept: { javascript: "application/javascript" }, success: function(t) { e("#quoteSearchTable").html(t) }, complete: function() { quotesSearchResults() }, data: e("#quote_search_form").serialize(), beforeSend: function() { e("#searchBtn").prop("disabled", "disabled") } }).done(function() { e("#searchBtn").prop("disabled", !1) }) : e("input.error").closest(".form-group").css("margin-bottom", "15px") }, clearQuoteButton: function(t) { t.preventDefault(), e("#firstName, #lastName").val(""), e("#email, #phoneCode, #phoneNum, #productCode, #quoteId").val("").removeAttr("required"), e("#createByUser").prop("selectedIndex", 0), e("#quoteStatus").prop("selectedIndex", 0), e("input.error").removeClass("error"), e("label.error").hide(), initializeDatepicker() }, paginationLinkClick: function(t) { t.preventDefault(); var i = (e(t.currentTarget), e(t.currentTarget).attr("data-href"));
            e.ajax({ type: "POST", url: i, accept: { javascript: "application/javascript" }, success: function(t) { e("#quoteSearchTable").html(t) }, complete: function() { quotesSearchResults() }, error: function() { console.log("Quote search pagintion not working") }, data: e("#quote_search_form").serialize() }).done(function() {}) }, exportLinkClick: function(t) { t.preventDefault(), e("#quote_search_form").attr("action", "/retail-quote/export-quotes"), e("#quote_search_form").submit(), e("#quote_search_form").attr("action", "/retail-quote/quote-summary") }, printLinkClick: function(t) { t.preventDefault(); var i = e("#quote_search_form");
            e("#quote_search_form").attr("action", "/retail-quote/quote-summary/print"), e("#quote_search_form").attr("target", "_blank"), i.submit(), e("#quote_search_form").attr("action", "/retail-quote/quote-summary"), e("#quote_search_form").attr("target", "_self") } }) }), define("QuoteCreateView", ["jquery", "marionette", "underscore"], function(e, t) { return t.ItemView.extend({ el: "#content", ui: { $dialogLinkButton: "#dialog-link", $inputcheckbox: ".inputCheckbox", $checkbox4: "#optionsCheckbox3", $consumerState: "#consumerState", $consumerCity: "#consumerCity", $emailTextarea: ".emailTextarea", $emailText: "#emailText", $readOnlyEmailMessage: "#readOnlyEmailMessage", $editEmailCancelLink: "#editEmailCancelLink", $editEmailTextIcon: ".fa-edit" }, events: { "click @ui.$dialogLinkButton": "dialogLink", "click @ui.$inputcheckbox": "inputcheckboxClick", "click @ui.$checkbox4": "checkbox4Click", "click @ui.$editEmailTextIcon": "toggleEmailText", "click @ui.$editEmailCancelLink": "toggleEmailTextarea", "keypress @ui.$consumerState": "consumerState", "keypress @ui.$consumerCity": "consumerCity" }, consumerState: function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                i = t.match(/^[a-zA-Z]+$/);
            8 != e.which && 0 != e.which && (i || e.preventDefault()) }, toggleEmailText: function() { this.ui.$readOnlyEmailMessage.hide(), this.ui.$emailTextarea.show() }, toggleEmailTextarea: function() { this.ui.$readOnlyEmailMessage.show(), this.ui.$emailTextarea.hide(), this.ui.$emailText.val(this.ui.$readOnlyEmailMessage.text()) }, consumerCity: function(e) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                i = t.match(/^[a-zA-Z\s]*$/);
            8 != e.which && 0 != e.which && (i || e.preventDefault()) }, onRender: function() { customerFormInfo(), textArea(), this.ui.$emailTextarea.hide(), e(".form-control").on("keypress", function(e) { 32 !== e.which || this.value.length || e.preventDefault() }), e.validator.setDefaults({ onfocusout: !1 }) } }) }), define("MyQuotesLinkView", ["jquery", "marionette", "underscore"], function(e, t) { return t.ItemView.extend({ el: "#rightpanel-MyQuote", ui: {}, events: {}, onRender: function() { e("tr[data-href]").on("click", function() { document.location = e(this).data("href") }) } }) }), define("MyWarrantyController", ["jquery", "underscore", "marionette"], function(e, t, i) {
    return i.ItemView.extend({
        el: "#content",
        removalReasonCodesUrl: "/my-warranty/getRemovalReasons",
        mastRemovalReasonCodesUrl: "/my-warranty/getRemovalReasonsForMast",
        disabledCssClass: "disabled",
        mastFamilyBrands: ["Michelin", "Uniroyal", "BF Goodrich"],
        contiFamilyBrands: ["Continental", "General"],
        herculesFamilyBrands: ["Ironman", "Hercules"],
        claimType1And7: ["CT 1", "CT 7"],
        hideDotGroupCodes: ["35", "38", "40"],
        showSerialNumberGroupCodes: ["22", "35", "38", "40"],
        nittoFamilyBrands: ["Nitto"],
        authCodeReasons: ["Vendor Approved (Auth Code)"],
        ui: { claims: "#claims", searchButton: "#search-go-link", claimsRow: ".claimRow", createClaimTireBackLink: "#createClaimTireBackLink", warrantyClaimForm: "#warrantyClaimSearchData", warrantyClaimSearchButton: ".warrantyClaimSearchButton", submitTireInfoForm: "#submitTireInfoForm", brandDD: "select.brand", tireCount: "#tireCount", createClaimHeader: ".create-claim-header", tireMspn: "#tireMspn", tireStyle: "#tireStyle", tireSize: "#tireSize", tireOTD: "#tireOTD", tireItemDesc: "#tireItemDesc", vehicleOE: "#vehicleOE", replacementMSPN: "#replacementMSPN", replacementMSPNText: ".replacementMSPN", purchaseDate: ".purchaseDate", authCode: "#authCode", notes: "#notes", tireToggle: ".tireToggle", removalReason: "select.removalReason", tireMileageInstalled: ".tireMileageInstalled", tireMileageRemoved: ".tireMileageRemoved", tireMileageValue: ".tireMileageValue", tireMileage: ".tireMileage", wheelPosition: ".wheelPosition", wheelPositionValue: ".wheelPositionValue", dotValue: ".dotValue", remainingTireDepth1: ".remainingTireDepth1", remainingTireDepth2: ".remainingTireDepth2", remainingTireDepth3: ".remainingTireDepth3", claimType: ".claimType", removalReason: ".removalReason", claimTypeValue: ".claimTypeValue", tireAuthCode: ".tireAuthCode", tireAuthCodeValue: ".tireAuthCodeValue", projectedCredit: ".projectedCredit", tireLevelNotes: ".tireLevelNotes", tireNotesValue: ".tireNotesValue", tireLevel0: "#tire-details-div-0", addTireLink: ".addTireLink", tirelevel: ".tire-level", allTiresDiv: "#allTires", tireLevelNumber: "#tireLevelNumber", removeTireLink: ".removeTireLink", globalErrorMessage: "#globalErrorMessage", mspnError: "#mspnError", propDamageRadioButton: 'input[name="propDamageCheck"]', tireHeaderToggleDisplay: ".tire-Header", propertyDamage: ".propertyDamageDiv", contactNumber: "#contactNumber", phoneUrl: "#phoneUrl", copyTireLink: ".copyTireLink", maxTireLinesError: "#maxTireLinesError", serialNumber: ".serialNumber", serialNumberValue: ".serialNumberValue", creditInfoDiv: ".creditInfoDiv", moreInfo: ".moreInfo", moreForInfo: ".creditInfoDiv a", retailPrice: ".retailPrice", pctCharged: ".pctCharged", amtCharged: ".amtCharged", productGroupCode: "#productGroupCode", searchByClaim: ".searchByClaim", billToSiteUseId: "#billToSiteUseId", vendorNumber: "#vendorNumber", nationalAccountMessage: "#nationalAccountMessage", mastDotErrorMessage: "#mastDotErrorMessage", herculesDotErrorMessage: "#herculesDotErrorMessage", maxMASTBrandTireLinesError: "#maxMASTBrandTireLinesError", claimNumber: "#claimNumber", dotDiv: ".dotDiv", mileageWarranty: "#mileageWarranty", retailPriceDiv: ".retailPriceDiv", amountChargeDiv: ".amountChargeDiv", percentChargeDiv: ".percentChargeDiv", mastFamilyCredit: ".mastFamilyCredit", nonMastFamilyCredit: ".nonMastFamilyCredit", authCodeField: ".authCodeInHeader", propDamageDiv: ".propDamageDiv", createClaimFormDiv: "#tire-form-div", hercPctChargeErrorMessage: "#hercPctChargeErrorMessage", contiPctChargeErrorMessage: "#contiPctChargeErrorMessage", vendorClaimNumber: "#vendorClaimNumber" },
        events: { "click @ui.warrantyClaimSearchButton": "onMyWarrantySearchClick", "click @ui.claimsRow": "clickClaimsRow", "click @ui.searchButton": "searchClaim", "click @ui.tireToggle": "clickTireToggle", "click @ui.addTireLink": "clickAddTireLink", "change @ui.brandDD": "onBrandDropdownChange", "change @ui.tireMspn": "getMSPNMappings", "change @ui.tireMileageInstalled": "updateTireMileage", "change @ui.tireMileageRemoved": "updateTireMileage", "change @ui.projectedCredit": "onChangeProjectedCustomerCharge", "click @ui.submitTireInfoForm": "submitTireInfoForm", "click @ui.removeTireLink": "clickRemoveTireLink", "keypress @ui.tireMspn": "alphaNumKeypress", "keypress @ui.replacementMSPN": "alphaNumKeypress", "click @ui.propDamageRadioButton": "onClickPropDamageRadioButton", "click @ui.copyTireLink": "clickCopyTireLink", "click @ui.moreForInfo": "clickMoreForInfo", "keypress @ui.tireMileageInstalled": "numKeypress", "keypress @ui.tireMileageRemoved": "numKeypress", "keypress @ui.retailPrice": "numKeypress", "keypress @ui.pctCharged": "numKeypress", "keypress @ui.amtCharged": "numKeypress", "keypress @ui.remainingTireDepth1": "numWholeKeypress", "keypress @ui.remainingTireDepth2": "numWholeKeypress", "keypress @ui.remainingTireDepth3": "numWholeKeypress", "paste @ui.tireMileageInstalled": "onPaste", "paste @ui.tireMileageRemoved": "onPaste", "paste @ui.retailPrice": "onPaste", "paste @ui.pctCharged": "onPaste", "paste @ui.amtCharged": "onPaste", "paste @ui.remainingTireDepth1": "onPaste", "paste @ui.remainingTireDepth2": "onPaste", "paste @ui.remainingTireDepth3": "onPaste", "change @ui.remainingTireDepth1": "updateProjectedCreditValues", "change @ui.remainingTireDepth2": "updateProjectedCreditValues", "keypress @ui.authCodeField": "numMastKeypress", "change @ui.claimType": "checkClaimType", "change @ui.removalReason": "updateProjectedCreditValues", "change @ui.authCodeField": "clearProjectedCustomerCharge", "keypress @ui.searchByClaim": "alphaNumKeypress" },
        onRender: function() {
            if (this.ui.brandDD.val() && "Please Select" !== this.ui.brandDD.val() && this.ui.claimNumber.removeClass("hidden-important"), !e(".resultSet")[0]) {
                var i = e("#claims").DataTable({
                    initComplete: function() {
                        this.api().columns([2]).every(function() {
                            var t = this,
                                i = e('<select id="myWarrantyClaimStatus"><option value="">All</option></select>').appendTo(e(".claim-status").empty()).on("change", function() {
                                    var i = e.fn.dataTable.util.escapeRegex(e(this).val());
                                    t.search(i ? "^" + i + "$" : "", !0, !1).draw()
                                });
                            t.data().unique().sort().each(function(e) { i.append('<option value="' + e + '">' + e + "</option>") })
                        })
                    },
                    sDom: '<"claimsTableTop"l>rti<"claimsTableBottom"p><"clear">',
                    bSort: !0,
                    order: [],
                    bLengthChange: !0,
                    lengthMenu: [
                        [10, 25, 50, 100, -1],
                        [10, 25, 50, 100, "All"]
                    ],
                    iDisplayLength: 10,
                    scrollY: "none"
                });
                i.on("page.dt", function() { var e = i.page.info();
                    sessionStorage.setItem("myWarrantySelectedPage", e.page) });
                var a = sessionStorage.getItem("myWarrantyArray");
                if (null !== a) { a = JSON.parse(a), e("#claims_length select[name='claims_length']").children().eq(a[0]).prop("selected", !0), i.page.len(a[1]).draw(), e("#myWarrantyClaimStatus").children().eq(a[2]).prop("selected", !0), "All" == a[3] ? i.columns(2).search().draw() : i.columns(2).search(a[3]).draw(); var r = sessionStorage.getItem("myWarrantySelectedPage");
                    null === r && (r = "0"), i.page(parseInt(r)).draw(!1) }
            }
            var o = Boolean(document.documentMode);
            for (o && (e(".create-claim-header-blocks").css("display", "inline-table"), e(".relative-top38").css("top", "18px")), e(".datepicker").datepicker(), e("#minDatePicker").datepicker("option", "onSelect", function() { var t = e("#maxDatePicker"),
                        i = e(this).datepicker("getDate");
                    t.datepicker("option", "maxDate", new Date), t.datepicker("option", "minDate", i) }), initializeDatepicker(), e("#maxDatePicker").datepicker("option", "onSelect", function() { var t = e("#minDatePicker"),
                        i = t.attr("data-lastDate"),
                        a = 1; if (1 == i) { var r = new Date;
                        r.setDate(r.getDate() - 1), t.datepicker("option", "minDate", r) } else { var o = i - a,
                            r = new Date;
                        r.setDate(r.getDate() - o), t.datepicker("option", "minDate", r) } var n = e(this).datepicker("getDate");
                    t.datepicker("option", "maxDate", n) }), this.ui.tireCount.val(this.ui.tirelevel.length), this.ui.brandDD.val() && "Please Select" !== this.ui.brandDD.val() && this.showHideFields(), this.ui.tireLevel0.find(".removeTireLink").addClass("hidden"), index = 0; 9 > index; index++) t.contains(this.claimType1And7, e("#claimType-" + index).val()) ? e("#areaOfRemoval-" + index).removeClass("hidden-important") : e("#areaOfRemoval-" + index).addClass("hidden-important");
            var n = 9;
            if (t.contains(this.mastFamilyBrands, this.ui.brandDD.val()) || t.contains(this.nittoFamilyBrands, this.ui.brandDD.val())) { var n = 5;
                this.ui.vendorClaimNumber.removeClass("hidden-important") }
            if (e(".removeTireLink").length >= n && (this.ui.addTireLink.addClass("hidden-important"), e("#tire-details-div-" + n).find(".copyLink").addClass("hidden-important")), t.contains(this.mastFamilyBrands, this.ui.brandDD.val()))
                for (index = 0; index < e(".removeTireLink").length; index++) this.populateDropdown(this.mastRemovalReasonCodesUrl, e("#removalReasonValue-" + index), { claimtype: e("#claimType-" + index).val() }, e("#removalReasonVal-" + index).val()), "CT 2" === e("#claimType-" + index).val() && this.setReadOnlyProjectedCreditValues(index)
        },
        onClickPropDamageRadioButton: function() { this.ui.propDamageRadioButton.prop("checked") ? (this.ui.tireHeaderToggleDisplay.hide(), this.ui.submitTireInfoForm.hide(), this.ui.propertyDamage.removeClass("hidden-important")) : (this.ui.tireHeaderToggleDisplay.show(), this.ui.submitTireInfoForm.show(), this.ui.propertyDamage.addClass("hidden-important"), this.ui.createClaimFormDiv.removeClass("hidden-important"), t.contains(this.nittoFamilyBrands, this.ui.brandDD.val()) && this.ui.notes.hide()); var i = this.ui.contactNumber,
                a = this.ui.phoneUrl;
            e.ajax({ url: "/my-warranty/getBrandInformation", type: "get", data: { brand: this.ui.brandDD.val() }, success: function(t) { var r = e.parseJSON(t),
                        o = "tel:+" + r.brandContactNumber;
                    i.val(r.brandContactNumber), a.attr("href", o) } }) },
        onMyWarrantySearchClick: function() { sessionStorage.removeItem("myWarrantyArray"), sessionStorage.removeItem("myWarrantySelectedPage") },
        clickClaimsRow: function(t) { var i = [e("#claims_length select[name='claims_length'] option:selected").index(), e("#claims_length select[name='claims_length'] option:selected").val(), e("#myWarrantyClaimStatus option:selected").index(), e("#myWarrantyClaimStatus option:selected").text()];
            sessionStorage.setItem("myWarrantyArray", JSON.stringify(i)); var a = t.target.parentElement.id;
            window.location.href = "/my-warranty/claimDetail/" + a },
        searchClaim: function() {},
        checkClaimType: function(i) { var a = void 0 !== i.target.id ? i.target.id.split("-") : "",
                r = a[1] || "",
                o = e("#claimType-" + r).val();
            e("#projectedCredit-" + r).val(""), e("#projectedCreditPctCharge-" + r).val(""), e("#projectedCreditAmtCharged-" + r).val(""), this.populateDropdown(this.mastRemovalReasonCodesUrl, e("#removalReasonValue-" + r), { claimtype: o }), t.contains(this.claimType1And7, o) ? e("#areaOfRemoval-" + r).removeClass("hidden-important") : (e("#areaOfRemoval-" + r).addClass("hidden-important"), e("#areaOfTireCausingRemovalValue-" + r).val("")), this.updateProjectedCreditValues(i), t.contains(this.mastFamilyBrands, this.ui.brandDD.val()) && "CT 2" === o ? this.setReadOnlyProjectedCreditValues(r) : this.reSetReadOnlyProjectedCreditValues(r), t.contains(this.nittoFamilyBrands, this.ui.brandDD.val()) && "Mileage Policy" === e("#removalReasonValue-" + r) && this.ui.percentChargeDiv.addClass("hidden-important") },
        onBrandDropdownChange: function() { this.showHideFields(), this.ui.claimNumber.removeClass("hidden-important"), this.ui.createClaimFormDiv.addClass("hidden-important"), this.ui.propDamageRadioButton.prop("checked", !1), t.contains(this.mastFamilyBrands, this.ui.brandDD.val()) || this.populateDropdown(this.removalReasonCodesUrl, this.ui.removalReason, { brand: this.ui.brandDD.val() }), (t.contains(this.mastFamilyBrands, this.ui.brandDD.val()) || t.contains(this.nittoFamilyBrands, this.ui.brandDD.val())) && this.ui.vendorClaimNumber.removeClass("hidden-important") },
        setReadOnlyProjectedCreditValues: function(t) { e("#projectedCreditPctCharge-" + t).val("N/A"), e("#projectedCreditPctCharge-" + t).prop("readonly", !0), e("#projectedCreditAmtCharged-" + t).val("N/A"), e("#projectedCreditAmtCharged-" + t).prop("readonly", !0), e("#resetCreditValuesToZero-" + t).val(!0) },
        reSetReadOnlyProjectedCreditValues: function(t) { e("#projectedCreditPctCharge-" + t).prop("readonly", !1), e("#projectedCreditAmtCharged-" + t).prop("readonly", !1), e("#resetCreditValuesToZero-" + t).val(!1) },
        showHideFields: function() { var i = this.ui.brandDD.val();
            this.ui.createClaimHeader.show(), this.ui.vehicleOE.hide(), this.ui.replacementMSPN.hide(), this.ui.authCode.hide(), this.ui.notes.hide(), this.ui.wheelPosition.hide(), this.ui.remainingTireDepth2.hide(), this.ui.remainingTireDepth3.hide(), this.ui.claimType.hide(), this.ui.tireAuthCode.hide(), this.ui.tireLevelNotes.hide(), this.ui.creditInfoDiv.hide(), this.ui.retailPriceDiv.hide(), this.ui.amountChargeDiv.hide(), this.ui.brandDD.prop("disabled", "true"), this.ui.createClaimTireBackLink.attr("href", "/my-warranty/newClaim?newClaimRequest=Yes"), "Please Select" === this.ui.brandDD.val() ? (this.ui.createClaimHeader.hide(), this.ui.createClaimTireBackLink.attr("href", "/my-warranty"), this.ui.brandDD.prop("disabled", !1)) : t.contains(this.contiFamilyBrands, i) ? (this.ui.vehicleOE.show(), this.ui.authCode.show(), this.ui.notes.show(), this.ui.wheelPosition.show(), this.ui.remainingTireDepth2.show(), this.ui.remainingTireDepth3.show()) : t.contains(this.herculesFamilyBrands, i) ? (this.ui.notes.show(), this.ui.tireAuthCode.show()) : t.contains(this.nittoFamilyBrands, i) ? (this.ui.remainingTireDepth2.show(), this.ui.remainingTireDepth3.show(), this.ui.tireLevelNotes.show()) : t.contains(this.mastFamilyBrands, i) && (this.ui.vehicleOE.show(), this.ui.replacementMSPN.show(), this.ui.authCode.show(), this.ui.notes.show(), this.ui.wheelPosition.show(), this.ui.claimType.show(), this.ui.retailPriceDiv.show(), this.ui.amountChargeDiv.show(), this.ui.mastFamilyCredit.removeClass("hidden-important"), this.ui.percentChargeDiv.removeClass("hidden-important"), this.ui.nonMastFamilyCredit.hide(), this.ui.creditInfoDiv.show()), "Hercules" === i && "Mileage Policy" === e("#removalReasonValue-0").val() && e("#percentCharge-0").addClass("hidden-important"), t.contains(this.nittoFamilyBrands, i) && "Mileage Warranty" === e("#removalReasonValue-0").val() && e("#percentCharge-0").hide(), this.ui.wheelPosition.is(":visible") || "" == this.ui.wheelPosition.val, this.ui.claimType.is(":visible") || "" == this.ui.claimType.val, "" != this.ui.serialNumberValue.val() && this.ui.serialNumber.removeClass("hidden-important"), "" == this.ui.dotValue.val() && this.ui.dotDiv.addClass("hidden-important") },
        clickMoreForInfo: function(t) { e(".creditInfoDiv a").click(function() { e(".creditInfoDiv a").unbind("click"), t.preventDefault(); var i = e(this).parent().find("span");
                e(".creditInfoDiv span").not(i).hide(), i.toggle() }) },
        getMSPNMappings: function() { this.ui.globalErrorMessage.addClass("hidden-important"), this.ui.tireStyle.val(""), this.ui.tireSize.val(""), this.ui.tireOTD.val(""); var i = this;
            e.ajax({ url: "/my-warranty/getMSPNMappings", type: "get", data: { mspn: this.ui.tireMspn.val(), brand: this.ui.brandDD.val() }, success: function(a) { var r = e.parseJSON(a); "" == a || null == r ? i.ui.mspnError.removeClass("hidden-important") : (i.ui.mspnError.addClass("hidden-important"), i.ui.tireStyle.val(r.itemDesc), i.ui.tireSize.val(r.size), i.ui.tireOTD.val(r.otd), i.ui.tireItemDesc.val(r.itemDesc), i.ui.productGroupCode.val(r.groupCode), i.ui.billToSiteUseId.val(r.billToSiteUseId), i.ui.vendorNumber.val(r.vendorNumber), i.ui.mileageWarranty.val(r.mileageWarranty), r.isNationalAccount && (i.ui.tireHeaderToggleDisplay.addClass("hidden-important"), i.ui.submitTireInfoForm.addClass("hidden-important"), i.ui.nationalAccountMessage.removeClass("hidden-important")), t.contains(i.showSerialNumberGroupCodes, r.groupCode) ? i.ui.serialNumber.removeClass("hidden-important") : (i.ui.serialNumberValue.val(""), i.ui.serialNumber.addClass("hidden-important")), t.contains(i.hideDotGroupCodes, r.groupCode) ? i.ui.dotDiv.addClass("hidden-important") : (i.ui.dotDiv.val(""), i.ui.dotDiv.removeClass("hidden-important"))) } }) },
        populateDropdown: function(t, i, a, r) { var o = this;
            e.post(t, a, function(t) { o.resetDropdown(i); var a = e("<select />");
                e(t).each(function(t, i) { var r = "------" === i ? "" : i,
                        o = e("<option />", { val: r, text: i });
                    a.append(o) }), i.append(a.children()), null != r ? i.val(r) : i.prop("selectedIndex", 0) }) },
        resetDropdown: function(e) { e.children().slice(1).remove() },
        enableDropdown: function(e) { e.removeClass(this.disabledCssClass), e.removeAttr(this.disabledCssClass) },
        disableDropdowns: function(e) { t.each(e, function(e) { e.attr("disabled", this.disabledCssClass), this.resetDropdown(e) }, this) },
        updateTireMileage: function(t) { var i = void 0 !== t.target.id ? t.target.id.split("-") : "",
                a = i[1] || "",
                r = "" !== e("#tireMileageInstalled-" + a).val() ? e("#tireMileageInstalled-" + a).val() : 0,
                o = "" !== e("#tireMileageRemoved-" + a).val() ? e("#tireMileageRemoved-" + a).val() : 0;
            e("#tireMileage-" + a).val(o - r), this.updateProjectedCreditValues(t) },
        updateProjectedCreditValues: function(i) { var a = void 0 !== i.target.id ? i.target.id.split("-") : "",
                r = a[1] || "",
                o = Number("" !== e("#projectedCredit-" + r).val() ? e("#projectedCredit-" + r).val() : 0),
                n = Number(0),
                s = Math.floor(Number("" !== this.ui.tireOTD.val() ? this.ui.tireOTD.val() : 0)),
                l = (Number(0), Number(0)),
                d = e("#removalReasonValue-" + r).val(); if (t.contains(this.mastFamilyBrands, this.ui.brandDD.val()))
                if (n = Number("" !== e("#remainingTireDepth1-" + r).val() ? e("#remainingTireDepth1-" + r).val() : 0), "CT2" == e("#claimType-" + r).val().replace(/ +/g, "")) t.contains(this.showSerialNumberGroupCodes, this.ui.productGroupCode.val()) ? (e("#projectedCredit-" + r).val("NA"), e("#projectedCreditPctCharge-" + r).val("NA"), e("#projectedCreditAmtCharged-" + r).val("NA")) : this.projectedCustomerMathUsingMileage(i);
                else if ("CT6" == e("#claimType-" + r).val().replace(/ +/g, "")) e("#percentCharge-" + r).removeClass("hidden-important"), 2 >= s - n ? (e("#projectedCreditPctCharge-" + r).val(0), e("#projectedCreditAmtCharged-" + r).val(0)) : (e("#projectedCreditPctCharge-" + r).val("100"), e("#projectedCreditAmtCharged-" + r).val(o.toFixed(2)));
            else if ("CT7" == e("#claimType-" + r).val().replace(/ +/g, "") || "CT8" == e("#claimType-" + r).val().replace(/ +/g, "")) { var c = e("#projectedCreditPctCharge-" + r).val();
                l = o * c / 100, e("#projectedCreditAmtCharged-" + r).val(l.toFixed(2)) } else this.projectedCustomerChargeForMast(i);
            else if (t.contains(this.contiFamilyBrands, this.ui.brandDD.val()))
                if (this.ui.authCodeField.val().trim().length > 1) var c = e("#projectedCreditPctCharge-" + r).val();
                else e("#projectedCreditPctCharge-" + r).val(""), e("#rtdReasonCodeConti").val().indexOf(d) >= 1 ? this.projectedCustomerMathUsingRtd(i) : e("#mileageReasonCode").val().indexOf(d) >= 1 ? t.contains(this.showSerialNumberGroupCodes, this.ui.productGroupCode.val()) ? e("#projectedCreditPctCharge-" + r).val("NA") : this.projectedCustomerMathUsingMileage(i) : this.projectedCustomerChargeForNonMast(i);
            else if (t.contains(this.herculesFamilyBrands, this.ui.brandDD.val()))
                if (e("#projectedCreditPctCharge-" + r).val(""), t.contains(this.authCodeReasons, d)) var c = e("#projectedCreditPctCharge-" + r).val();
                else e("#rtdReasonCodeHerc").val().indexOf(d) >= 1 ? this.projectedCustomerMathUsingRtd(i) : e("#mileageReasonCode").val().indexOf(d) >= 1 ? t.contains(this.showSerialNumberGroupCodes, this.ui.productGroupCode.val()) ? e("#projectedCreditPctCharge-" + r).val("NA") : this.projectedCustomerMathUsingMileage(i) : this.projectedCustomerChargeForNonMast(i);
            else e("#projectedCreditPctCharge-" + r).val(""), e("#rtdReasonCodeNitto").val().indexOf(d) >= 1 ? this.projectedCustomerMathUsingRtd(i) : e("#mileageReasonCode").val().indexOf(d) >= 1 ? t.contains(this.showSerialNumberGroupCodes, this.ui.productGroupCode.val()) ? e("#projectedCreditPctCharge-" + r).val("NA") : this.projectedCustomerMathUsingMileage(i) : this.projectedCustomerChargeForNonMast(i);
            t.contains(this.nittoFamilyBrands, this.ui.brandDD.val()) && "Mileage Warranty" === d ? e("#percentCharge-" + r).addClass("hidden-important") : (e("#percentCharge-" + r).removeClass("hidden-important"), e("#percentCharge-" + r).show()), "Hercules" === this.ui.brandDD.val() && ("Mileage Policy" === d ? e("#percentCharge-" + r).addClass("hidden-important") : e("#percentCharge-" + r).removeClass("hidden-important")), t.contains(this.mastFamilyBrands, this.ui.brandDD.val()) && "CT 2" === e("#claimType-" + r).val() && this.setReadOnlyProjectedCreditValues(r) },
        projectedCustomerChargeForMast: function(t) { var i = void 0 !== t.target.id ? t.target.id.split("-") : "",
                a = i[1] || "",
                r = Number("" !== e("#projectedCredit-" + a).val() ? e("#projectedCredit-" + a).val() : 0),
                o = Number("" !== e("#remainingTireDepth1-" + a).val() ? e("#remainingTireDepth1-" + a).val() : 0),
                n = Math.floor(Number("" !== this.ui.tireOTD.val() ? this.ui.tireOTD.val() : 0)),
                s = Number(0),
                l = Number(0); if (o > 2 && n > 2) { var d = 100 * (1 - (o - 2) / (Math.floor(n) - 2));
                s = d % 5 >= 4.5 ? Math.round(d) : d - d % 5, s > 100 && (s = 100), e("#projectedCreditPctCharge-" + a).val(Math.round(s)), l = r * Math.round(s) / 100, e("#projectedCreditAmtCharged-" + a).val(l.toFixed(2)) } else e("#projectedCreditPctCharge-" + a).val(0), e("#projectedCreditAmtCharged-" + a).val(0) },
        projectedCustomerChargeForNonMast: function(i) { { var a = void 0 !== i.target.id ? i.target.id.split("-") : "",
                    r = a[1] || "";
                Number("" !== e("#projectedCredit-" + r).val() ? e("#projectedCredit-" + r).val() : 0) } if (t.contains(this.contiFamilyBrands, this.ui.brandDD.val()) || t.contains(this.nittoFamilyBrands, this.ui.brandDD.val())) var o = Number("" !== e("#remainingTireDepth2-" + r).val() ? e("#remainingTireDepth2-" + r).val() : 0);
            else var o = Number("" !== e("#remainingTireDepth1-" + r).val() ? e("#remainingTireDepth1-" + r).val() : 0); { var n = Math.floor(Number("" !== this.ui.tireOTD.val() ? this.ui.tireOTD.val() : 0)),
                    s = Number(0);
                Number(0) } o > 2 && n > 2 ? (s = 100 * (1 - (o - 2) / (Math.floor(n) - 2)), s > 100 && (s = 100), e("#projectedCreditPctCharge-" + r).val(Math.round(s))) : e("#projectedCreditPctCharge-" + r).val(0) },
        projectedCustomerMathUsingMileage: function(i) { var a = void 0 !== i.target.id ? i.target.id.split("-") : "",
                r = a[1] || "",
                o = Number("" !== e("#projectedCredit-" + r).val() ? e("#projectedCredit-" + r).val() : 0);
            e("#projectedCreditPctCharge-" + r).val(""), e("#projectedCreditAmtCharged-" + r).val(""); var n = 0;
            null != this.ui.mileageWarranty.val() && (n = this.ui.mileageWarranty.val()), n.indexOf("K") > -1 && (n = 1e3 * n.slice(0, n.indexOf(","))); var s = e("#tireMileage-" + r).val(); if (t.contains(this.mastFamilyBrands, this.ui.brandDD.val())) s -= s % 2e3;
            else { var l = s % 1e3;
                0 != l && (s = s - l + 1e3) } if ("" !== s)
                if (s > 0 && n > 0) { var d = s / n * 100;
                    d > 100 && (d = 100), e("#projectedCreditPctCharge-" + r).val(Math.round(d)), amtCharged = o * Math.round(d) / 100, e("#projectedCreditAmtCharged-" + r).val(amtCharged.toFixed(2)) } else e("#projectedCreditPctCharge-" + r).val(0), e("#projectedCreditAmtCharged-" + r).val(0) },
        projectedCustomerMathUsingRtd: function(i) { var a = void 0 !== i.target.id ? i.target.id.split("-") : "",
                r = a[1] || ""; if (t.contains(this.contiFamilyBrands, this.ui.brandDD.val()) || t.contains(this.nittoFamilyBrands, this.ui.brandDD.val())) var o = Number("" !== e("#remainingTireDepth2-" + r).val() ? e("#remainingTireDepth2-" + r).val() : 0);
            else var o = Number("" !== e("#remainingTireDepth1-" + r).val() ? e("#remainingTireDepth1-" + r).val() : 0); var n = Math.floor(Number("" !== this.ui.tireOTD.val() ? this.ui.tireOTD.val() : 0));
            t.contains(this.nittoFamilyBrands, this.ui.brandDD.val()) ? 1 >= n - o ? (e("#projectedCreditPctCharge-" + r).val(0), e("#projectedCreditAmtCharged-" + r).val(0)) : e("#projectedCreditPctCharge-" + r).val("100") : 2 >= n - o ? (e("#projectedCreditPctCharge-" + r).val(0), e("#projectedCreditAmtCharged-" + r).val(0)) : e("#projectedCreditPctCharge-" + r).val("100") },
        onChangeProjectedCustomerCharge: function(i) { var a = this.ui.brandDD.val(),
                r = void 0 !== i.target.id ? i.target.id.split("-") : "",
                o = r[1] || "",
                n = e("#removalReasonValue-" + o).val();
            t.contains(this.herculesFamilyBrands, a) ? t.contains(this.authCodeReasons, n) || this.updateProjectedCreditValues(i) : this.updateProjectedCreditValues(i) },
        clearProjectedCustomerCharge: function() { var i = this.ui.brandDD.val(); if (t.contains(this.contiFamilyBrands, i))
                if (this.ui.authCodeField.val().trim().length > 1) { var a = 0;
                    e(".pctCharged").each(function() { e("#projectedCreditPctCharge-" + a).val(""), a += 1 }) } else { var a = 0;
                    e(".pctCharged").each(function() { e("#remainingTireDepth1-" + a).trigger("change"), a += 1 }) } },
        clickTireToggle: function(t) { var i = e(t.target);
            e(t.target.id).toggle(function() { i.html("none" == e(this).css("display") ? "View +" : "View -") }) },
        clickAddTireLink: function(i) { var a = this.ui.brandDD.val(),
                r = 9; if (t.contains(this.mastFamilyBrands, a) || t.contains(this.nittoFamilyBrands, a)) var r = 5;
            e(".copyDiv").length >= r && this.ui.addTireLink.addClass("hidden-important"); var o = this.ui.tireCount.val(),
                n = this.ui.tireLevel0;
            i.target.id.length > 0 && (n = i.target); var s = n.clone();
            s.attr("id", "tire-details-div-" + o), s.find(".tireToggle").attr("id", "#tireEntry-" + o), s.find("#tireEntry-0").attr("id", "tireEntry-" + o), s.find(".removeTireLink").attr("data-id", "tire-details-div-" + o), s.find(".removeTireLink").removeClass("hidden"), s.find("#claimType-0").attr("id", "claimType-" + o), s.find("#percentCharge-0").attr("id", "percentCharge-" + o), s.find("#areaOfRemoval-0").attr("id", "areaOfRemoval-" + o), s.find(".areaOfTireCausingRemoval").addClass("hidden-important"), s.find("input").each(function() { this.name = this.name.replace("[0]", "[" + o + "]"), this.id = this.id.replace("[0]", "[" + o + "]"), this.id = this.id.replace("-0", "-" + o), e(this).removeClass("input-error") }), s.find("select").each(function() { this.name = this.name.replace("[0]", "[" + o + "]"), this.id = this.id.replace("[0]", "[" + o + "]"), this.id = this.id.replace("-0", "-" + o), e(this).removeClass("input-error") }); var l = Number(o) + 1;
            s.find("#tireLevelNumber").text("Tire " + l), this.ui.tireCount.val(l), i.target.id.length > 0 ? s.appendTo(this.ui.allTiresDiv) : s.appendTo(this.ui.allTiresDiv).find(":text").val(""), t.contains(this.mastFamilyBrands, a) || t.contains(this.nittoFamilyBrands, a) ? 5 == o && s.find(".copyLink").addClass("hidden-important") : 9 == o && s.find(".copyLink").addClass("hidden-important"), t.contains(this.mastFamilyBrands, a) && "CT 2" === s.find("#claimType-" + o).val() && this.setReadOnlyProjectedCreditValues(o), "Hercules" === a && "Mileage Policy" === e("#removalReasonValue-" + o).val() && s.find(".percentChargeDiv-" + o).addClass("hidden-important") },
        clickCopyTireLink: function(i) { var a = this.ui.brandDD.val(),
                r = 9; if (t.contains(this.mastFamilyBrands, a) || t.contains(this.nittoFamilyBrands, a)) var r = 5; var o = this.ui.tireCount.val(); if (e(".copyDiv").length == r && this.ui.addTireLink.addClass("hidden-important"), e(".copyDiv").length > r) 5 == r ? this.ui.maxMASTBrandTireLinesError.removeClass("hidden-important") : this.ui.maxTireLinesError.removeClass("hidden-important"), this.ui.addTireLink.addClass("hidden-important");
            else { var o = this.ui.tireCount.val(),
                    n = 0,
                    s = e(i.currentTarget).parent().closest(".copyDiv").attr("id");
                n = s.split("tire-details-div-"), elementToCopy = e("#" + e(i.currentTarget).parent().closest(".copyDiv").attr("id")); var l = elementToCopy.clone();
                l.attr("id", "tire-details-div-" + o), l.find(".tireToggle").attr("id", "#tireEntry-" + o), l.find("#tireEntry-" + n[1]).attr("id", "tireEntry-" + o), l.find(".removeTireLink").attr("data-id", "tire-details-div-" + o), l.find("#claimType-" + n[1]).attr("id", "claimType-" + o), l.find("#percentCharge-" + n[1]).attr("id", "percentCharge-" + o), l.find("#areaOfRemoval-" + n[1]).attr("id", "areaOfRemoval-" + o), l.find(".removeTireLink").removeClass("hidden"), l.find("input").each(function() { this.name = this.name.replace("[" + n[1] + "]", "[" + o + "]"), this.id = this.id.replace("[" + n[1] + "]", "[" + o + "]"), this.id = this.id.replace("-" + n[1], "-" + o), e(this).removeClass("input-error") }); var d = elementToCopy.find("select");
                l.find("select").each(function(t, i) { this.name = this.name.replace("[" + n[1] + "]", "[" + o + "]"), e(i).val(d.eq(t).val()), this.id = this.id.replace("[" + n[1] + "]", "[" + o + "]"), this.id = this.id.replace("-" + n[1], "-" + o), e(this).removeClass("input-error") }); var c = Number(o) + 1;
                l.find("#tireLevelNumber").text("Tire " + c), this.ui.tireCount.val(c), l.appendTo(this.ui.allTiresDiv), t.contains(this.mastFamilyBrands, a) || t.contains(this.nittoFamilyBrands, a) ? 5 == o && l.find(".copyLink").addClass("hidden-important") : 9 == o && l.find(".copyLink").addClass("hidden-important") } },
        initializeDatepicker: function() { var t = e("#minDatePicker"),
                i = e("#maxDatePicker"),
                a = t.attr("data-lastDate"),
                r = 1; if (1 == a) t.datepicker("setDate", -1), t.datepicker("option", "minDate", -1), i.datepicker("option", "minDate", -1);
            else { var o = a - r;
                t.datepicker("option", "minDate", -o), i.datepicker("option", "minDate", -o), t.datepicker("setDate", -o) } t.datepicker("option", "maxDate", 0), i.datepicker("option", "maxDate", 0), i.datepicker("setDate", new Date) },
        submitTireInfoForm: function() { return this.validateTireInfoForm() ? (this.ui.brandDD.removeAttr("disabled"), this.ui.globalErrorMessage.addClass("hidden-important"), e("#mspnError").is(":visible") ? !1 : void 0) : (this.ui.globalErrorMessage.removeClass("hidden-important"), !1) },
        clickRemoveTireLink: function(t) { this.ui.addTireLink.removeClass("hidden-important"), this.ui.maxTireLinesError.addClass("hidden-important"), this.ui.maxMASTBrandTireLinesError.addClass("hidden-important"), e("#" + t.target.dataset.id).remove(), this.ui.tireCount.val(this.ui.tireCount.val() - 1); for (var i = 1, a = 0; a < e(".copyDiv").length; a++) e(".copyLink").removeClass("hidden-important");
            e(".inline").each(function() { i > 1 && e(this).text("Tire " + i), i++ }) },
        validateTireInfoForm: function() { var e = !0,
                i = this.ui.brandDD.val(); return this.ui.tireMspn.val().trim().length < 1 ? (this.ui.tireMspn.addClass("input-error"), e = !1) : this.ui.tireMspn.removeClass("input-error"), this.ui.replacementMSPN.is(":visible") && this.ui.replacementMSPNText.val().trim().length < 1 ? (this.ui.replacementMSPNText.addClass("input-error"), e = !1) : this.ui.replacementMSPNText.removeClass("input-error"), this.ui.purchaseDate.val().trim().length < 1 ? (this.ui.purchaseDate.addClass("input-error"), e = !1) : (this.ui.purchaseDate.removeClass("input-error"), this.isDate(this.ui.purchaseDate.val()) || (this.ui.purchaseDate.addClass("input-error"), e = !1)), e = this.validateTextFields(".remainingTireDepth1") ? e : !1, e = this.validateDropDowns(".removalReason") ? e : !1, e = this.validateAreaOfTire() ? e : !1, e = this.validateTireMileage() ? e : !1, t.contains(this.contiFamilyBrands, i) ? (e = this.validateDropDowns(".wheelPositionValue") ? e : !1, e = this.validateTextFields(".remainingTireDepth2") ? e : !1, e = this.validateTextFields(".remainingTireDepth3") ? e : !1, e = this.validateNotesField(".removalReason") ? e : !1, e = this.validateContiPctChargeField(".authCodeInHeader") ? e : !1) : t.contains(this.nittoFamilyBrands, i) ? (e = this.validateTextFields(".remainingTireDepth2") ? e : !1, e = this.validateTextFields(".remainingTireDepth3") ? e : !1) : t.contains(this.mastFamilyBrands, i) ? (e = this.validateDropDowns(".wheelPositionValue") ? e : !1, e = this.validateDropDowns(".claimTypeValue") ? e : !1, e = this.validateAuthCodeField(".claimTypeValue") ? e : !1, e = this.validateTextFields(".retailPrice") ? e : !1, e = this.validateTextFields(".pctCharged") ? e : !1) : t.contains(this.herculesFamilyBrands, i) && (e = this.validateHercAuthCodeField(".removalReason") ? e : !1), t.contains(this.showSerialNumberGroupCodes, this.ui.productGroupCode.val()) && (e = this.validateTextFields(".serialNumberValue") ? e : !1), t.contains(this.hideDotGroupCodes, this.ui.productGroupCode.val()) || (e = this.validateDotField(".dotValue") ? e : !1), this.ui.propDamageRadioButton.is(":checked") ? this.ui.propDamageDiv.removeClass("routeError") : (this.ui.propDamageDiv.addClass("routeError"), this.ui.mastDotErrorMessage.addClass("hidden-important"), this.ui.herculesDotErrorMessage.addClass("hidden-important"), this.ui.contiPctChargeErrorMessage.addClass("hidden-important"), this.ui.hercPctChargeErrorMessage.addClass("hidden-important"), e = !1), e },
        validateDotField: function(i) { var a = this,
                r = a.ui.brandDD.val(),
                o = !0; return t.contains(this.mastFamilyBrands, r) ? (e(i).each(function() { e(this).val().trim().length < 12 ? (e(this).addClass("input-error"), a.ui.mastDotErrorMessage.removeClass("hidden-important"), o = !1) : (e(this).removeClass("input-error"), a.ui.mastDotErrorMessage.addClass("hidden-important")) }), o) : t.contains(this.herculesFamilyBrands, r) ? (e(i).each(function() { e(this).val().trim().length < 8 ? (e(this).addClass("input-error"), a.ui.herculesDotErrorMessage.removeClass("hidden-important"), o = !1) : (e(this).removeClass("input-error"), a.ui.herculesDotErrorMessage.addClass("hidden-important")) }), o) : (e(i).each(function() { e(this).val().trim().length < 10 ? (e(this).addClass("input-error"), o = !1) : e(this).removeClass("input-error") }), o) },
        validateNotesField: function(t) { var i = !0; return e(".notes").removeClass("input-error"), e("#notesErrorMessage").addClass("hidden-important"), e(t).each(function() { "Other - Free Text Box" == e(this).val() && e(".notes").val().trim().length < 1 && (e(".notes").addClass("input-error"), e("#notesErrorMessage").removeClass("hidden-important"), i = !1) }), i },
        validateAuthCodeField: function(t) { var i = this,
                a = !0; return i.ui.authCodeField.removeClass("input-error"), e("#authCodeErrorMessage").addClass("hidden-important"), e(t).each(function() { "CT7" == e(this).val().replace(/ +/g, "") && i.ui.authCodeField.val().trim().length < 1 && (i.ui.authCodeField.addClass("input-error"), e("#authCodeErrorMessage").removeClass("hidden-important"), a = !1) }), i.ui.authCodeField.val().trim().length > 1 && (4 == i.ui.authCodeField.val().trim().length ? i.ui.authCodeField.removeClass("input-error") : (i.ui.authCodeField.addClass("input-error"), a = !1)), a },
        validateTextFields: function(t) { var i = !0; return e(t).each(function() { e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), i = !1) : e(this).removeClass("input-error") }), i },
        validateDropDowns: function(t) { var i = !0; return e(t).each(function() { e(this).val().length < 1 ? (e(this).addClass("input-error"), i = !1) : e(this).removeClass("input-error") }), i },
        validateTireMileage: function() { var t = !0; return e(".tireMileageInstalled").each(function() { e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), t = !1) : e(this).removeClass("input-error") }), e(".tireMileageRemoved").each(function() { e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), t = !1) : e(this).removeClass("input-error") }), e(".tireMileageValue").each(function() { e(this).val().trim().length < 1 || e(this).val() < 0 ? (e(this).addClass("input-error"), t = !1) : e(this).removeClass("input-error") }), t },
        validateContiPctChargeField: function(t) { var i = this,
                a = !0; return e(t).val().length > 1 && e(".pctCharged").each(function() { e(this).is(":visible") && e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), i.ui.contiPctChargeErrorMessage.removeClass("hidden-important"), a = !1) : (e(this).removeClass("input-error"), i.ui.contiPctChargeErrorMessage.addClass("hidden-important")) }), a },
        validateHercAuthCodeField: function(i) { var a = !0,
                r = this,
                o = 0; return e(i).each(function() { var i = e("#removalReasonValue-" + o).val();
                t.contains(r.authCodeReasons, i) && (e("#projectedCreditPctCharge-" + o).val().length < 1 || e("#tireAuthCodeVal-" + o).val().length < 1 ? (e("#projectedCreditPctCharge-" + o).addClass("input-error"), e("#tireAuthCodeVal-" + o).addClass("input-error"), r.ui.hercPctChargeErrorMessage.removeClass("hidden-important"), a = !1) : (r.ui.hercPctChargeErrorMessage.addClass("hidden-important"), e("#projectedCreditPctCharge-" + o).removeClass("input-error"), e("#tireAuthCodeVal-" + o).removeClass("input-error"))), o++ }), a },
        validateAreaOfTire: function() { var t = !0; return e(".areaOfTireCausingRemovalValue").each(function() { e(this).is(":visible") && e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), t = !1) : e(this).removeClass("input-error") }), t },
        alphaNumKeypress: function(e) { var t = new RegExp("^[a-zA-Z0-9]+$"); if (8 != e.which && 0 != e.which) { var i = String.fromCharCode(e.charCode ? e.charCode : e.which); return t.test(i) ? !0 : (e.preventDefault(), !1) } },
        numKeypress: function(e) { var t = new RegExp("^[0-9.]+$"); if (8 != e.which && 0 != e.which) { var i = String.fromCharCode(e.charCode ? e.charCode : e.which); return t.test(i) ? !0 : (e.preventDefault(), !1) } },
        onPaste: function(t) { var i, a = e(t.target);
            window.clipboardData && window.clipboardData.getData ? i = window.clipboardData.getData("Text") : t.originalEvent.clipboardData && t.originalEvent.clipboardData.getData && (i = t.originalEvent.clipboardData.getData("text/plain")), a.val(i.replace(/\D+/g, "")), t.preventDefault(), a.change() },
        numWholeKeypress: function(e) { var t = new RegExp("^[0-9]+$"); if (8 != e.which && 0 != e.which) { var i = String.fromCharCode(e.charCode ? e.charCode : e.which); return t.test(i) ? !0 : (e.preventDefault(), !1) } },
        numMastKeypress: function(e) { if (t.contains(this.mastFamilyBrands, this.ui.brandDD.val())) { var i = new RegExp("^[0-9]+$"); if (8 == e.which || 0 == e.which) return; var a = String.fromCharCode(e.charCode ? e.charCode : e.which); return i.test(a) ? !0 : (e.preventDefault(), !1) } },
        isDate: function(e) { var t = e; if ("" == t) return !1; var i = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/,
                a = t.match(i); if (null == a) return !1; if (dtMonth = a[1], dtDay = a[3], dtYear = a[5], 1 > dtMonth || dtMonth > 12) return !1; if (1 > dtDay || dtDay > 31) return !1; if ((4 == dtMonth || 6 == dtMonth || 9 == dtMonth || 11 == dtMonth) && 31 == dtDay) return !1; if (2 == dtMonth) { var r = dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0); if (dtDay > 29 || 29 == dtDay && !r) return !1 } return !0 }
    })
}), define("MyWarrantyReviewPage", ["jquery", "underscore", "marionette"], function(e, t, i) {
    return i.ItemView.extend({
        el: "#my-warranty-container",
        mastFamilyBrands: ["Michelin", "Uniroyal", "BF Goodrich"],
        contiFamilyBrands: ["Continental", "General"],
        herculesFamilyBrands: ["Hercules"],
        ironmanFamilyBrands: ["Ironman"],
        nittoFamilyBrands: ["Nitto"],
        mileageReasonCodes: ["Mileage Policy", "Tread - Wear out Coverage", "Mileage Warranty"],
        showSerialNumberGroupCodes: ["22", "35", "38", "40"],
        ui: { submitClaim: "#submitClaim", submitReviewClaimForm: "#submitReviewClaimForm", updateClaim: "#updateClaim", updateClaimForm: "#updateClaimForm", termsBox: "#termsBox", claimDetailUpdateBox: "#claimDetailUpdateBox", consumerTerms: "#consumerTerms", dealerTerms: "#dealerTerms", consumerTermsCheck: "#consumerTermsCheck", dealerTermsCheck: "#dealerTermsCheck", brandName: "#brandName", editTireInfo: "#editTireInfo", editVehicleInfo: "#editVehicleInfo", editClaimInfo: "#editClaimInfo", reviewClaimBackLink: "#reviewClaimBackLink", submitReviewClaim: "#submitReviewClaim", termsError: "#termsError", otd: "#otd", vehicelOE: "#vehicelOE", authCode: "#authCode", purchaseDate: "#purchaseDate", notes: "#notes", wheelPosition: ".wheelPosition", dot: ".dot", rtd: ".rtd", claimType: ".claimType", removalReason: ".removalReason", tireMileage: ".tireMileage", notesInTires: ".notesInTires", replacementMSPN: "#replacementMSPN", authCodeIntires: ".authCodeIntires", michelinFamily: "#michelinFamily", generalFamily: "#generalFamily", herculesFamily: "#herculesFamily", ironmanFamily: "#ironmanFamily", nittoFamily: "#nittoFamily", isClaimDetailsPage: "#isClaimDetailsPage", tireInfoAuthCode: "#tireInfoAuthCode", tireEntryAuthCode: ".tireEntryAuthCode", claimProgressLink: ".claimProgressLink", detailedClaimProgress: "#detailedClaimProgress", claimUpdatedText: "#claimUpdated", claimDetailsBackLink: "#claimDetailsBackLink", closeMastHelp: "#closeMastHelp", mastToolTip: ".mastToolTip", printClaimLabels: "#printClaimLabels", printClaimDetails: "#printClaimDetails", claimStatus: "#claimStatus", printLabelButton: ".printLabelButton", mastFamilyCredit: ".mastFamilyCredit", nonMastFamilyCredit: ".nonMastFamilyCredit", productGroupCode: "#productGroupCode", vendorClaimNumber: "#vendorClaimNumber" },
        events: { "click @ui.submitClaim": "clickSubmitClaim", "click @ui.updateClaim": "clickUpdateClaim", "click @ui.editTireInfo": "clickEditTireInfo", "click @ui.editVehicleInfo": "clickEditVehicleInfo", "click @ui.editClaimInfo": "clickEditClaimInfo", "click @ui.reviewClaimBackLink": "clickReviewClaimBackLink", "click @ui.claimProgressLink": "clickClaimProgressLink", "click @ui.claimDetailsBackLink": "clickClaimDetailsBackLink", "click @ui.printLabelButton": "clickPrintClaimLabels", "click @ui.printClaimDetails": "clickPrintClaimDetails", "keypress @ui.tireInfoAuthCode": "numMastKeyPress" },
        onRender: function() {
            this.hideFieldsBasedOnBrand(), this.ui.isClaimDetailsPage.val() && this.renderClaimDetailsPage(), t.contains(this.mastFamilyBrands, this.ui.brandName.val()) ? this.ui.nonMastFamilyCredit.addClass("hidden-important") : this.ui.nonMastFamilyCredit.removeClass("hidden-important"), (t.contains(this.mastFamilyBrands, this.ui.brandName.val()) || t.contains(this.nittoFamilyBrands, this.ui.brand.val())) && this.ui.vendorClaimNumber.removeClass("hidden-important"), window.onafterprint = function() {
                e("#claimStatus").show(), e("#claimDetailsBackLink").show(), e("#claimDetailUpdateBox").show(), e("#printLabelButton").show(), e("#mastHelp").show(), e("#printClaimDetails").show()
            }
        },
        enableUpdateButton: function() { this.ui.updateClaim.removeClass("hidden-important") },
        hideFieldsBasedOnBrand: function() { var e = this.ui.brandName.val();
            t.contains(this.mastFamilyBrands, e) ? (this.ui.michelinFamily.removeClass("hidden-important"), this.ui.replacementMSPN.removeClass("hidden-important"), this.ui.claimType.removeClass("hidden-important"), this.ui.notesInTires.hide(), this.ui.mastFamilyCredit.removeClass("hidden-important"), this.ui.nonMastFamilyCredit.addClass("hidden-important")) : t.contains(this.contiFamilyBrands, e) ? (this.ui.generalFamily.removeClass("hidden-important"), this.ui.consumerTerms.hide(), this.ui.notesInTires.hide()) : t.contains(this.herculesFamilyBrands, e) ? (this.ui.herculesFamily.removeClass("hidden-important"), this.ui.authCode.hide(), this.ui.wheelPosition.hide(), this.ui.vehicelOE.hide(), this.ui.notesInTires.hide(), this.ui.authCodeIntires.removeClass("hidden-important")) : t.contains(this.ironmanFamilyBrands, e) ? (this.ui.ironmanFamily.removeClass("hidden-important"), this.ui.authCode.hide(), this.ui.wheelPosition.hide(), this.ui.vehicelOE.hide(), this.ui.notesInTires.hide(), this.ui.authCodeIntires.removeClass("hidden-important")) : t.contains(this.nittoFamilyBrands, e) && (this.ui.nittoFamily.removeClass("hidden-important"), this.ui.consumerTerms.hide(), this.ui.authCode.hide(), this.ui.wheelPosition.hide(), this.ui.vehicelOE.hide()) },
        clickPrintClaimDetails: function() { this.ui.claimStatus.hide(), this.ui.claimDetailsBackLink.hide(), this.ui.claimDetailUpdateBox.hide(), this.ui.printLabelButton.hide(), this.ui.mastHelp.hide(), this.ui.printClaimDetails.hide(), window.print() },
        clickPrintClaimLabels: function(e) { var t = e.target.parentElement.id;
            window.open("/my-warranty/printClaim/" + t) },
        clickClaimDetailsBackLink: function() { window.history.back() },
        clickSubmitClaim: function() { var e = this.ui.brandName.val(); if (t.contains(this.mastFamilyBrands, e) || t.contains(this.herculesFamilyBrands, e) || t.contains(this.ironmanFamilyBrands, e)) { if (1 != this.ui.consumerTermsCheck.prop("checked") || 1 != this.ui.dealerTermsCheck.prop("checked")) return this.ui.termsError.removeClass("hidden-important"), !1;
                this.ui.termsError.addClass("hidden-important"), this.ui.submitClaim.prop("disabled", !0), this.ui.submitReviewClaimForm.submit() } else if (t.contains(this.contiFamilyBrands, e) || t.contains(this.nittoFamilyBrands, e)) { if (1 != this.ui.dealerTermsCheck.prop("checked")) return this.ui.termsError.removeClass("hidden-important"), !1;
                this.ui.termsError.addClass("hidden-important"), this.ui.submitClaim.prop("disabled", !0), this.ui.submitReviewClaimForm.submit() } },
        clickEditTireInfo: function() { var e = "/my-warranty/newClaim";
            this.ui.editTireInfo.attr("href", e) },
        clickEditVehicleInfo: function() { var e = "/my-warranty/vehicleInfo";
            this.ui.editVehicleInfo.attr("href", e) },
        clickEditClaimInfo: function() { var e = "/my-warranty/claimInfo";
            this.ui.editClaimInfo.attr("href", e) },
        clickReviewClaimBackLink: function() { var e = "/my-warranty/claimInfo";
            this.ui.reviewClaimBackLink.attr("href", e) },
        renderClaimDetailsPage: function() { this.ui.editTireInfo.hide(), t.contains(this.nittoFamilyBrands, this.ui.brandName.val()) && (this.ui.authCodeIntires.removeClass("hidden-important"), (this.ui.tireInfoAuthCode.is(":visible") || this.ui.tireEntryAuthCode.is(":visible")) && this.ui.tireEntryAuthCode.addClass("hidden-important")), this.ui.editVehicleInfo.hide(), this.ui.editClaimInfo.hide(), this.ui.termsBox.hide(), this.ui.claimDetailUpdateBox.removeClass("hidden-important"), (this.ui.tireInfoAuthCode.is(":visible") || this.ui.tireEntryAuthCode.is(":visible")) && this.ui.updateClaim.removeClass("hidden-important") },
        clickUpdateClaim: function() { var t = this.validateAuthCodes(),
                i = this.ui.claimUpdatedText,
                a = this.ui.tireInfoAuthCode,
                r = this.ui.tireEntryAuthCode; if (!t) { var o = this.ui.tireEntryAuthCode.map(function() { return this.value }).get();
                e.ajax({ url: "/my-warranty/updateClaim", type: "get", data: { authCode: this.ui.tireInfoAuthCode.val().trim(), "tireAuthIds[]": o }, success: function() { i.removeClass("hidden-important"), a.prop("disabled", !0), r.prop("disabled", !0) } }) } },
        validateAuthCodes: function() { var e = this.ui.brandName.val(); if (t.contains(this.mastFamilyBrands, e)) { if (this.ui.tireInfoAuthCode.is(":visible") && 4 != this.ui.tireInfoAuthCode.val().trim().length) return this.ui.tireInfoAuthCode.addClass("input-error"), !0;
                this.ui.tireInfoAuthCode.removeClass("input-error") } else { if (this.ui.tireInfoAuthCode.is(":visible") && this.ui.tireInfoAuthCode.val().trim().length < 1) return this.ui.tireInfoAuthCode.addClass("input-error"), !0; if (this.ui.tireEntryAuthCode.is(":visible")) return this.validateTextFields(".tireEntryAuthCode") } return !1 },
        validateTextFields: function(t) { var i = !1; return e(t).each(function() { e(this).val().trim().length < 1 ? (e(this).addClass("input-error"), i = !0) : e(this).removeClass("input-error") }), i },
        numMastKeyPress: function(e) { if (t.contains(this.mastFamilyBrands, this.ui.brandName.val())) { var i = new RegExp("^[0-9]+$"); if (8 == e.which || 0 == e.which) return; var a = String.fromCharCode(e.charCode ? e.charCode : e.which); return i.test(a) ? !0 : (e.preventDefault(), !1) } },
        clickClaimProgressLink: function(t) { var i = e(t.target);
            e(t.target.id).toggle(function() { i.html("none" == e(this).css("display") ? "View detailed progress +" : "View detailed progress -") }) }
    })
}), define("PrintVCFPage", ["jquery", "marionette", "MyWarrantyReviewPage"], function(e, t, i) { return t.ItemView.extend({ el: "#my-warranty-container", ui: { vcfForm: "#vcfForm", printSelectedButton: ".printSelectedButton", submitClaim: "#submitClaim", tireRegistrationLink: "#tireRegistrationLink", reviewClaimBackLink: "#reviewClaimBackLink", editClaimInfo: "#editClaimInfo", editVehicleInfo: "#editVehicleInfo", editTireInfo: "#editTireInfo", consumerTermsCheck: "#consumerTermsCheck", dealerTermsCheck: "#dealerTermsCheck" }, onRender: function() { this.ui.submitClaim.addClass("hidden-important"), this.ui.tireRegistrationLink.addClass("hidden-important"), this.ui.reviewClaimBackLink.addClass("hidden-important"), this.ui.editClaimInfo.addClass("hidden-important"), this.ui.editVehicleInfo.addClass("hidden-important"), this.ui.editTireInfo.addClass("hidden-important"), this.ui.consumerTermsCheck.attr("checked", !0), this.ui.dealerTermsCheck.attr("checked", !0), this.MyWarrantyReviewPage = new i, this.MyWarrantyReviewPage.render(), window.print() } }) }), define("MyWarrantyPrintPage", ["jquery", "marionette"], function(e, t) { return t.ItemView.extend({ el: "#my-warranty-container", ui: { vcfForm: "#vcfForm", printSelectedButton: ".printSelectedButton", submitClaim: "#submitClaim", returnToWarrantySearch: "#returnToWarrantySearch" }, events: { "click @ui.printSelectedButton": "clickPrintSelectedButton", "click @ui.returnToWarrantySearch": "clickReturnToWarrantySearch" }, clickReturnToWarrantySearch: function() { var e = "/my-warranty";
            this.ui.returnToWarrantySearch.attr("href", e) }, clickPrintSelectedButton: function() { for (var t = e("#parentDiv .tireNumbers").map(function() { return e(this).attr("id") }).get(), i = e("#parentDiv .tireNumbers").map(function() { return e(this).attr("value") }).get(), a = 0; a < t.length; a++)
                if (e("#" + t[a]).prop("checked")) { var r = i[a];
                    window.open("/my-warranty/viewPDF/" + r) } if (1 == this.ui.vcfForm.prop("checked")) { this.ui.submitClaim.addClass("hidden-important"); var o = "/my-warranty/printVCFPage";
                window.open(o) } } }) }), define("MyWarrantyClaimInfoPage", ["jquery", "marionette"], function(e, t) { return t.ItemView.extend({ el: "#my-warranty-container", ui: { claimInfoForm: "#claimInfoForm", brandName: "#brandName", gotoreviewClaim: "#gotoreviewClaim", consumerState: "#consumerState", consumerFirstName: "#consumerFirstName", consumerLastName: "#consumerLastName", consumerPhoneAreaCode: "#phoneAreaCode", consumerPhoneNumber: "#phoneNumber", consumerCity: "#consumerCity", consumerZipcode: "#consumerZipcode", consumerEmailId: "#consumerEmailId", unhideOptional: "#unhideOptional", submitClaimInfo: "#submitClaimInfo", phoneAreaCode: "#phoneAreaCode", consumerZipcode: "#consumerZipcode", consumerAddress1: "#address1", uploadButton: "#uploadButton", vendorNumber: "#vendorNumber", fileUploader: "#fileUploader", deleteFile: ".deleteFile", pickUp: ".pickUp", atdRouteTruck: ".atdRouteTruck", routeSelection: ".routeSelection", globalErrorMessage: "#globalErrorMessage", uploadErrorMessage: "#uploadErrorMessage", uploadSizeErrorMessage: "#uploadSizeErrorMessage", claimInfoBackLink: "#claimInfoBackLink", vendorClaimNumber: "#vendorClaimNumber" }, events: { "keypress @ui.consumerState": "changeConsumerState", "keypress @ui.consumerFirstName": "changeConsumerName", "keypress @ui.consumerLastName": "changeConsumerName", "keypress @ui.consumerPhoneNumber": "changeConsumerPhoneNumber", "keypress @ui.consumerPhoneAreaCode": "changeConsumerPhoneAreaCode", "keypress @ui.consumerCity": "changeConsumerCity", "keypress @ui.consumerZipcode": "changeConsumerZipcode", "click @ui.submitClaimInfo": "clickSubmitClaimInfo", "click @ui.uploadButton": "clickUploadButton", "click @ui.deleteFile": "clickDeleteFile", "click @ui.claimInfoBackLink": "clickClaimInfoBackLink" }, onRender: function() { var e = this.ui.brandName.val();
            ("Ironman" == e || "Hercules" == e) && this.ui.unhideOptional.removeClass("hidden-important"), ("Michelin" == e || "Uniroyal" == e || "BFGoodrich" == e || "Nitto" == e) && this.ui.vendorClaimNumber.removeClass("hidden-important") }, clickUploadButton: function() { var t = this.ui.fileUploader.val().toLowerCase();
            isValidFormat = new RegExp("(.*?).(docx|doc|pdf|xls|xlsx|jpeg|jfif|jpg|png|gif|txt)$"), this.ui.uploadErrorMessage.addClass("hidden-important"), this.ui.uploadSizeErrorMessage.addClass("hidden-important"); var i = 0; if (this.ui.fileUploader[0].files.length > 0) { if (i = this.ui.fileUploader[0].files[0].size, isValidFormat.test(t))
                    if (i > 5e5) this.ui.fileUploader.val(""), this.ui.uploadSizeErrorMessage.removeClass("hidden-important");
                    else { var a = new FormData;
                        a.append("file", this.ui.fileUploader[0].files[0]), a.append("vendorNumber", this.ui.vendorNumber.val()); var r = "/my-warranty/uploadFile";
                        e.ajax({ url: r, type: "POST", data: a, cache: !1, processData: !1, contentType: !1, success: function(t, i) { console.log("Success: " + i + " data---" + t), e("#fileName").append("<div>" + t + "&nbsp; <a id='" + t + "'class='deleteFile'>delete</a></div>") }, error: function(e, t) { console.log("ERRORS: " + t) } }) } else this.ui.fileUploader.val(""), this.ui.uploadErrorMessage.removeClass("hidden-important");
                this.ui.fileUploader.val("") } }, clickDeleteFile: function(t) { var i = new FormData,
                a = t.target.id;
            i.append("fileName", a), i.append("vendorNumber", this.ui.vendorNumber.val()); var r = "/my-warranty/deleteFile";
            e.ajax({ url: r, type: "POST", data: i, cache: !1, processData: !1, contentType: !1, success: function(i, a) { console.log("Success: " + a + " data---" + i), e(t.target).closest("div").remove() }, error: function(e, t) { console.log("ERRORS: " + t) } }) }, clickClaimInfoBackLink: function() { var e = "/my-warranty/vehicleInfo";
            this.ui.claimInfoBackLink.attr("href", e) }, changeConsumerState: function(e) { if (8 != e.which && 0 != e.which) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                    i = t.match(/^[a-zA-Z]+$/);
                i || e.preventDefault() } }, changeConsumerName: function(e) { if (8 != e.which && 0 != e.which) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                    i = t.match(/^[a-zA-Z0-9\-'. ]+$/);
                i || e.preventDefault() } }, changeConsumerPhoneNumber: function(e) { if (8 != e.which && 0 != e.which) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                    i = t.match(/^[0-9-]+$/);
                i || e.preventDefault() } }, changeConsumerPhoneAreaCode: function(e) { if (8 != e.which && 0 != e.which) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                    i = t.match(/^[0-9-]+$/);
                i || e.preventDefault() } }, changeConsumerCity: function(e) { if (8 != e.which && 0 != e.which) { var t = String.fromCharCode(e.charCode ? e.charCode : e.which),
                    i = t.match(/[@]/);
                i && e.preventDefault() } }, removeErrorMessage: function() { this.ui.routeSelection.removeClass("routeError"), this.ui.consumerFirstName.removeClass("errorMessage"), this.ui.consumerLastName.removeClass("errorMessage"), this.ui.consumerAddress1.removeClass("errorMessage"), this.ui.consumerCity.removeClass("errorMessage"), this.ui.consumerState.removeClass("errorMessage"), this.ui.consumerZipcode.removeClass("errorMessage"), this.ui.consumerEmailId.removeClass("errorMessage"), this.ui.consumerPhoneAreaCode.removeClass("errorMessage"), this.ui.consumerPhoneNumber.removeClass("errorMessage") }, routeValidation: function(e) { return this.ui.pickUp.prop("checked") || this.ui.atdRouteTruck.prop("checked") || (e = !1, this.ui.routeSelection.addClass("routeError")), e }, consumerInfoValidation: function(e) {
            (!this.ui.consumerFirstName.val().match(/^[a-zA-Z0-9'-. ]*$/) || this.ui.consumerFirstName.val().trim().length < 1) && (e = !1, this.ui.consumerFirstName.addClass("errorMessage")), (!this.ui.consumerLastName.val().match(/^[a-zA-Z0-9'-. ]*$/) || this.ui.consumerLastName.val().trim().length < 1) && (e = !1, this.ui.consumerLastName.addClass("errorMessage")), (this.ui.consumerCity.val().match(/[@]/) || this.ui.consumerCity.val().trim().length < 1) && (e = !1, this.ui.consumerCity.addClass("errorMessage")), this.ui.consumerState.val().match(/^[a-zA-Z]+$/) || (e = !1, this.ui.consumerState.addClass("errorMessage")), this.ui.consumerZipcode.val().trim().length < 1 && (e = !1, this.ui.consumerZipcode.addClass("errorMessage")), this.ui.consumerAddress1.val().trim().length < 1 && (e = !1, this.ui.consumerAddress1.addClass("errorMessage")); var t = "\\b[A-Za-z0-9._%+'-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b";
            this.ui.consumerEmailId.val().trim().length > 1 && (this.ui.consumerEmailId.val().match(t) || (e = !1, this.ui.consumerEmailId.addClass("errorMessage"))), this.ui.consumerPhoneAreaCode.val().match(/^[1-9]{1}[0-9]+$/) || (e = !1, this.ui.phoneAreaCode.addClass("errorMessage")), this.ui.consumerPhoneNumber.val().match(/^[0-9]{3}?[-]?[0-9]{4}$/) || (e = !1, this.ui.consumerPhoneNumber.addClass("errorMessage")); var i = this.routeValidation(!0); return e && i }, clickSubmitClaimInfo: function() { this.removeErrorMessage(); var e = this.ui.brandName.val(),
                t = !0; if ("Ironman" == e || "Hercules" == e) { if (!this.routeValidation(t)) return this.ui.globalErrorMessage.removeClass("hidden-important"), !1;
                this.ui.globalErrorMessage.addClass("hidden-important") } else { if (!this.consumerInfoValidation(t)) return this.ui.globalErrorMessage.removeClass("hidden-important"), !1;
                this.ui.globalErrorMessage.addClass("hidden-important") } } }) }), define("WarrantyClaimVehicleInfoController", ["jquery", "marionette"], function(e, t) { return t.ItemView.extend({ el: "#content", fitmentMakesUrl: "/fitment/vehicle-makes", fitmentModelsUrl: "/fitment/vehicle-models", disabledCssClass: "disabled", herculesFamilyBrands: ["Ironman", "Hercules"], mastFamilyBrands: ["Michelin", "Uniroyal", "BF Goodrich"], nittoFamilyBrands: ["Nitto"], ui: { submitVehicleInfoForm: "#submitVehicleInfoForm", errorMessage: "#errorMessage", globalErrorMessage: "#globalErrorMessage", year: "select.vehicleYear", make: "select.vehicleMake", model: "select.vehicleModel", vehicleVin: "#vehicleVin", brand: "#brandName", vendorClaimNumber: "#vendorClaimNumber" }, events: { "click @ui.submitVehicleInfoForm": "submitVehicleInfoForm", "keypress @ui.vehicleVin": "alphaNumKeypress", "change @ui.year": "onYearDropdownChange", "change @ui.make": "onMakeDropdownChange", "change @ui.model": "onModelDropdownChange" }, onRender: function() { "Please Select" === this.ui.year.val() ? (this.disableDropdowns([this.ui.make, this.ui.model]), this.ui.year.prop("selectedIndex", 0), this.ui.make.prop("selectedIndex", 0), this.ui.model.prop("selectedIndex", 0)) : "Please Select" === !this.ui.make.val() && (this.disableDropdowns([this.ui.model]), this.ui.make.prop("selectedIndex", 0), this.ui.model.prop("selectedIndex", 0)), (_.contains(this.mastFamilyBrands, this.ui.brand.val()) || _.contains(this.nittoFamilyBrands, this.ui.brand.val())) && this.ui.vendorClaimNumber.removeClass("hidden-important") }, populateDropdown: function(t, i, a) { var r = this;
            e.post(t, a, function(t) { r.resetDropdown(i); var a = e("<select />");
                e(t).each(function(t, i) { var r = "------" === i ? "" : i,
                        o = e("<option />", { val: r, text: i });
                    a.append(o) }), i.append(a.children()), i.prop("selectedIndex", 0) }) }, resetDropdown: function(e) { e.children().slice(1).remove() }, enableDropdown: function(e) { e.removeClass(this.disabledCssClass), e.removeAttr(this.disabledCssClass) }, disableDropdowns: function(e) { _.each(e, function(e) { e.attr("disabled", this.disabledCssClass), this.resetDropdown(e) }, this) }, submitVehicleInfoForm: function() { if (!_.contains(this.herculesFamilyBrands, this.ui.brand.val())) { if (!this.validateDropDowns([this.ui.year, this.ui.make, this.ui.model])) return this.ui.errorMessage.removeClass("hidden-important"), !1;
                this.ui.globalErrorMessage.addClass("hidden-important"), this.ui.errorMessage.addClass("hidden-important") } }, validateDropDowns: function(e) { var t = !0; return _.each(e, function(e) { "Please Select" === e.val() ? (e.addClass("input-error"), t = !1) : e.removeClass("input-error") }, this), t }, alphaNumKeypress: function(e) { var t = new RegExp("^[a-zA-Z0-9]+$"),
                i = String.fromCharCode(e.charCode ? e.charCode : e.which); return t.test(i) ? !0 : (e.preventDefault(), !1) }, onYearDropdownChange: function() { this.isValidYear() ? (this.populateDropdown(this.fitmentMakesUrl, this.ui.make, { year: this.ui.year.val() }), this.enableDropdown(this.ui.make)) : this.disableDropdowns([this.ui.make]), this.disableDropdowns([this.ui.model]) }, onMakeDropdownChange: function() { this.isValidYear() && this.isValidMake() ? (this.populateDropdown(this.fitmentModelsUrl, this.ui.model, { year: this.ui.year.val(), make: this.ui.make.val() }), this.enableDropdown(this.ui.model)) : this.disableDropdowns([this.ui.model]) }, isValidYear: function() { return /^\d{4}$/.test(this.ui.year.val()) }, isValidMake: function() { return "" !== this.ui.make.val() }, isValidModel: function() { return "" !== this.ui.model.val() } }) }), define("VinSearchView", ["underscore", "jquery", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#leftpanel-VinSearch", loadingSpinnerView: a.getSharedInstance(), ui: { submitButton: "#vin-submit" }, events: { "submit form": "validateVINSubmission", "click @ui.submitButton": "submitFitmentsByVinForm", "mouseover @ui.submitButton": "showVinTooltip", "mouseout @ui.submitButton": "hideVinTooltip" }, validateVINSubmission: function() { var e = t('input[id="vin-text"]').val(); return this.isValidVin(e) ? !0 : (event.preventDefault(), t("#tooltip-div-vin").show().delay(2e3).fadeOut(), !1) }, submitFitmentsByVinForm: function() { var e = t('input[id="vin-text"]').val();
            this.isValidVin(e) && (this.loadingSpinnerView.showSpinner(), t("#fitmentsByVinForm").submit()) }, showVinTooltip: function() { var e = t('input[id="vin-text"]').val();
            0 == this.isValidVin(e) && (0 == t("#tooltip-div-vin").hasClass("hidden") && this.hideVinTooltip(), t("#tooltip-div-vin").show()) }, hideVinTooltip: function() { t("#tooltip-div-vin").hide() }, isValidVin: function(e) { var t = new RegExp("^[a-zA-Z0-9]{17}$"); return t.test(e) } }) }), define("LicensePlateSearchView", ["underscore", "jquery", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#leftpanel-LicensePlateSearch", loadingSpinnerView: a.getSharedInstance(), ui: { submitButton: "#lp-submit", licensePlateForm: "#fitmentsByLPForm" }, events: { "submit @ui.licensePlateForm": "validateLPSubmission", "click @ui.submitButton": "submitFitmentsByLPForm", "mouseover @ui.submitButton": "showLPTooltip", "mouseout @ui.submitButton": "hideLPTooltip" }, validateLPSubmission: function(e) { var i = t('input[id="lp-text"]').val(); return this.isValidLicensePlate(i) ? (e.preventDefault(), void this.submitFitmentsByLPForm()) : (e.preventDefault(), t("#tooltip-div-LP").show().delay(2e3).fadeOut(), !1) }, isValidLicensePlate: function(e) { var t = new RegExp("^.{1,8}$"); return t.test(e) }, showLPTooltip: function() { var e = t('input[id="lp-text"]').val();
            0 == this.isValidLicensePlate(e) && (0 == t("#tooltip-div-LP").hasClass("hidden") && this.hideLPTooltip(), this.applyCssForLPTooltip("visible"), t("#tooltip-div-LP").show()) }, hideLPTooltip: function() { this.applyCssForLPTooltip("hidden"), t("#tooltip-div-LP").hide() }, applyCssForLPTooltip: function(e) { t(".content-container").length && t(".content-container").css("overflow", e), t(".wrapper").length && t(".wrapper").css("overflow", e) }, submitFitmentsByLPForm: function() { var e = this,
                i = t('input[id="lp-text"]').val();
            this.isValidLicensePlate(i) ? (this.loadingSpinnerView.showSpinner(), t.ajax({ type: "POST", url: "/fitment/license-plate-fitments", datatype: "json", data: t("#fitmentsByLPForm").serialize(), success: function(i) { var a = t("#fitments-ByLp-HiddenForm"),
                        r = a.find("#hidden-year"),
                        o = a.find("#hidden-make"),
                        n = a.find("#hidden-model"),
                        s = a.find("#hidden-trim"); if (1 == i.length && t.each(i, function(e, t) { r.val(t.year), o.val(t.make), n.val(t.model), s.val(t.trim), a.submit() }), i.length >= 2) { var l = {},
                            d = 0; if (t.each(i, function(e, t) { var i = t.year + " " + t.make + " " + t.model;
                                l.hasOwnProperty(i) ? l[i].trim = l[i].trim + "~" + t.trim : (d++, l[i] = {}, l[i].year = t.year, l[i].make = t.make, l[i].model = t.model, l[i].trim = t.trim) }), 1 == d) t.each(l, function(e, t) { r.val(t.year), o.val(t.make), n.val(t.model), s.val(t.trim), a.submit() });
                        else { var c = t("#lpHiddenForm-Holder");
                            c.html(""), e.loadingSpinnerView.hideSpinner(), c.is(":hidden") && c.show(), t("#lp-submit").hide(), c.append("<hr>"), c.append("<label>Please Select Vehicle :</label>"), t.each(l, function(e, i) { var a = t('<input type="radio" id="rbtnLpVehicle" name="rbtnLpVehicle" data-year=' + i.year + " data-make=" + i.make + " data-model=" + i.model + " data-trim=" + i.trim + " value=" + i.year + i.make + i.model + "/>");
                                a.appendTo("#lpHiddenForm-Holder"), t("<span>" + e + "<span/>").appendTo("#lpHiddenForm-Holder"), t("<br/><br/>").appendTo("#lpHiddenForm-Holder") }), t('<table><tr><td><button id="vehicle-select-ok" class="button grey btn-ok"  name="vehicle-select-ok" type="button" >OK</button></td><td><button id="vehicle-select-cancel" class="button grey btn-cancel"  type="button">CANCEL</button></td></tr></table>').appendTo("#lpHiddenForm-Holder"), t("input[name=rbtnLpVehicle]").change(function(e) { var i = t(e.target).data("year") ? t(e.target).data("year") : "",
                                    a = t(e.target).data("make") ? t(e.target).data("make") : "",
                                    l = t(e.target).data("model") ? t(e.target).data("model") : "",
                                    d = t(e.target).data("trim") ? t(e.target).data("trim") : "";
                                r.val(i), o.val(a), n.val(l), s.val(d) }), t("#vehicle-select-ok").click(function() { a.submit() }), t("#vehicle-select-cancel").click(function() { t('input[id="lp-text"]').attr("value", ""), c.hide(), t("#lp-submit").show() }) } } 0 == i.length && (window.location.href = "/fitment/license-plate-noresults") }, error: function(e) { console.log("status:" + e.status), console.log("unable to retrieve fitments using entered license plate.") } })) : t("#tooltip-div-LP").show().delay(2e3).fadeOut() } }) }), define("MyAccountOrderHistoryOrderDetailsView", ["jquery", "underscore", "marionette", "LoadingSpinnerView"], function(e, t, i, a) { return i.ItemView.extend({ el: "#orderHistoryOrderDetailData", loadingSpinnerView: a.getSharedInstance(), ui: { dateRangeTo: ".myaccountoh-details-component-rangeTo", dateRangeFrom: ".myaccountoh-details-component-rangeFrom", searchByDateBtn: "#searchByDateBtn", searchByNumberBtn: "#searchByNumberBtn", ohOrderDetailDataform: "#orderHistoryOrderDetailData", ohOrderDetailsDateErr: "#ohOrderDetailsDateErr", ohOrderDetailsNumberErr: "#ohOrderDetailsNumberErr", searchNumber: "#searchNumber", noOrdersErr: "#noOrdersErr", resultsTable: ".tablesorter", componentRangeFrom: "#componentRangeFrom", componentRangeTo: "#componentRangeTo", pageLink: ".pageLink", requestedPage: "#requestedPage", date: "#date", responseDataContent: "#responseDataContent", header: "th.header", orderHistoryTabs: "#orderHistoryTabs" }, events: { "click @ui.searchByDateBtn": "validateSearchByDateBtn", "click @ui.searchByNumberBtn": "validateSearchByNumberBtn", "click @ui.pageLink": "onPageLinkClick", "click @ui.header": "onHeaderSortClick" }, onRender: function() { this.ui.dateRangeFrom.datepicker({ minDate: "-3M", maxDate: "today" }), this.ui.dateRangeTo.datepicker({ minDate: "-3M", maxDate: "today" }), this.styleHeaderToSortDescending(), this.headerSelectorMap = { date: "date", confirmationNumber: "confirmation", ponumber: "po" }, this.ui.orderHistoryTabs.find(e(".tab-1").addClass("ui-tabs-active")) }, validateSearchByDateBtn: function(e) { 0 === this.ui.componentRangeFrom.val().length || 0 === this.ui.componentRangeTo.val().length ? (e.preventDefault(), e.stopPropagation(), this.ui.resultsTable.hide(), this.ui.ohOrderDetailsDateErr.show(), this.ui.ohOrderDetailsNumberErr.hide(), this.ui.noOrdersErr.hide()) : (this.ui.searchNumber.val(""), this.ui.ohOrderDetailDataform.attr("action", "/my-account/order-history/details"), this.ui.ohOrderDetailDataform.submit()) }, validateSearchByNumberBtn: function(e) { 0 === this.ui.searchNumber.val().length ? (e.preventDefault(), e.stopPropagation(), this.ui.ohOrderDetailsDateErr.hide(), this.ui.noOrdersErr.hide(), this.ui.resultsTable.hide(), this.ui.ohOrderDetailsNumberErr.show()) : (this.ui.ohOrderDetailDataform.attr("action", "/my-account/order-history/details"), this.ui.ohOrderDetailDataform.submit()) }, onPageLinkClick: function(t) { var i = e(t.target),
                a = i.data("pagenumber");
            e("#requestedPage").val(a); var r = this;
            this.loadingSpinnerView.showSpinner(); { var o = e("#orderHistoryOrderDetailData").serialize();
                this.ui.resultsTable } e.ajax({ url: "/my-account/order-history/details/ajax", type: "post", data: o }).done(function(e) { r.refreshOrdersContentHtml(e), r.loadingSpinnerView.hideSpinner() }).fail(function(e) { alert(e.responseText), r.loadingSpinnerView.hideSpinner() }) }, styleHeaderToSortDescending: function() { this.ui.date.removeClass("header-sort-none"), this.ui.date.addClass("header-sort-down") }, onHeaderSortClick: function(t) { var i = e(t.currentTarget); if (this.isColumnSortable(i)) { var a = this.getKeyForValue(this.headerSelectorMap, i.attr("id")),
                    r = this.getSortDirection(i),
                    o = a + "_" + r;
                e("#sortBy").val(o), e("#sortOrder").val(o), e("#requestedPage").val(1); var n = this;
                this.loadingSpinnerView.showSpinner(); var s = e("#orderHistoryOrderDetailData").serialize();
                e.ajax({ url: "/my-account/order-history/details/ajax", type: "post", data: s }).done(function(e) { n.refreshOrdersContentHtml(e), n.loadingSpinnerView.hideSpinner() }).fail(function(e) { alert(e.responseText), n.loadingSpinnerView.hideSpinner() }) } }, isColumnSortable: function(e) { return e.hasClass("header-sort-none") || e.hasClass("header-sort-up") || e.hasClass("header-sort-down") }, getKeyForValue: function(t, i) { var a = null; return e.each(t, function(e, t) { return t === i && (a = e), !a }), a }, getSortDirection: function(e) { return e.hasClass("header-sort-none") || e.hasClass("header-sort-up") ? "desc" : e.hasClass("header-sort-down") ? "asc" : "none" }, refreshOrdersContentHtml: function(t) { t && (this.ui.responseDataContent.html(t), this.styleHeader(e("#sortOrder").val(), "")) }, styleHeader: function(t, i) { var a = this.extractSortDirection(t),
                r = "#" + this.headerSelectorMap[this.extractSortColumn(t)] + i,
                o = e(r); "asc" === a ? this.styleToSortAscending(o) : "desc" === a && this.styleToSortDescending(o) }, extractSortDirection: function(e) { return e.match(/asc$|desc$/, "")[0] }, extractSortColumn: function(e) { return e.match(/.+(?=_desc)|.+(?=_asc)/, "")[0] }, styleToSortAscending: function(e) { e.removeClass("header-sort-none"), e.addClass("header-sort-up") }, styleToSortDescending: function(e) { e.removeClass("header-sort-none"), e.addClass("header-sort-down") } }) }), define("CountdownTimerView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#countdown-widget", timer: null, countDownTimer: null, onRender: function() { this.updateWidgetCountDownTimer() }, updateWidgetCountDownTimer: countDownTimer = function() { var t, i, a, r;
            e.ajax({ url: "/ajax/get/fetchCountDownTimes", type: "get" }).done(function(o, n) {
                function s(t, i, a) { var r = this,
                        o = !0; return r.setDate = new Date(t), t && i && (timer = setInterval(function() { if (o) { if (r.nowDate = getCurrentDate(i), r.dateDiff = r.setDate - r.nowDate, r.hours = Math.floor(r.dateDiff / 36e5), r.minsDiff = Math.floor(r.dateDiff / 6e4), r.mins = r.minsDiff - 60 * r.hours, r.secondDiff = Math.floor(r.dateDiff / 1e3), r.seconds = r.secondDiff - 60 * r.minsDiff, r.hours <= 0 && r.minsDiff <= 0 && r.secondDiff <= 1) return e(a).html("00:00:00"), timer = clearInterval(timer), this.countDownTimer(), void(o = !1);
                            r.hours < 10 && (r.hours = "0" + r.hours), r.mins < 10 && (r.mins = "0" + r.mins), r.seconds < 10 && (r.seconds = "0" + r.seconds), e(a).html(r.hours + ":" + r.mins + ":" + r.seconds) } }, 1e3)), r } "success" === n && -1 === JSON.stringify(o).indexOf("html") ? (o[0] && (t = o[0].countdownTime, e("#countdown-time0").val(t), e("#cutoff-date0").html(o[0].cutoffDate), a = o[0].timeZoneOffset, new s(t, a, ".display0")), o[1] && (i = o[1].countdownTime, e("#countdown-time1").val(i), e("#cutoff-date1").html(o[1].cutoffDate), r = o[1].timeZoneOffset, new s(i, r, ".display1"))) : (window.location.href = "/login", location.reload()) }) } }) }), define("ManageCreditCardsView", ["jquery", "underscore", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#content", ui: { addCardForm: "#addCardForm", signature: "#signature", transactionUUID: "#transaction_uuid", signedDateTime: "#signed_date_time", merchant_defined_data1: "#merchant_defined_data1", override_custom_cancel_page: "#override_custom_cancel_page", override_custom_receipt_page: "#override_custom_receipt_page", deleteCard: ".deleteCard", deleteYes: ".deleteYes", deleteNo: ".deleteNo", addCardLink: "#addCardLink", signName: "#signName", ccTermsBlock: "#ccTermsBlock", cardTermsCheck: "#cardTermsCheck", termsError: "#termsError", signNameError: "#signNameError", signatureError: "#signatureError", tlsError: "#TLSVersionError", redirectMessage: "#redirectMessage", confirmAddButton: "#confirmAddCardButton", cancelAddButton: "#cancelAddCardButton", creditCardList: "#creditCardList", cardAddedPrompt: ".cc-add-prompt", browsersHelpBox: "#browsers-help" }, events: { "click @ui.deleteCard": "showDeleteOverlay", "click @ui.deleteYes": "clickDeleteYes", "click @ui.deleteNo": "clickDeleteNo", "click @ui.addCardLink": "clickAddCardToggle", "click @ui.confirmAddButton": "getSignatureAndPostForm", "click @ui.cancelAddButton": "clickAddCardToggle" }, onRender: function() {}, clickAddCardToggle: function() { "true" == this.ui.tlsError.val() ? e(this.ui.browsersHelpBox).toggle("fast") : (e(this.ui.ccTermsBlock).toggle("slow"), e(this.ui.creditCardList).toggle("slow")), this.ui.cardAddedPrompt.addClass("hidden-important") }, getSignatureAndPostForm: function() { if (this.ui.signatureError.addClass("hidden-important"), 1 != this.ui.cardTermsCheck.prop("checked")) return this.ui.termsError.removeClass("hidden-important"), !1; if (this.ui.termsError.addClass("hidden-important"), !(this.ui.signName.val().trim().length > 1)) return this.ui.signNameError.removeClass("hidden-important"), !1;
            this.ui.signNameError.addClass("hidden-important"), this.ui.confirmAddButton.addClass("disabled"), this.ui.cancelAddButton.addClass("disabled"), this.ui.merchant_defined_data1.val(this.ui.signName.val()), this.ui.override_custom_cancel_page.val(window.location.href), this.ui.override_custom_receipt_page.val(window.location.href + "/response"); var t = this.ui.addCardForm.serialize(),
                i = this.ui.signature,
                a = this.ui.transactionUUID,
                r = this.ui.signedDateTime,
                o = this.ui.signatureError,
                n = this.ui.redirectMessage,
                s = this.ui.confirmAddButton,
                l = this.ui.cancelAddButton;
            e.ajax({ url: "/manage-cc-ajax/getSignature", type: "get", data: t, success: function(t) { var d = e.parseJSON(t);
                    null != d.signature ? (i.val(d.signature), a.val(d.transactionUUID), r.val(d.transactionDateString), n.removeClass("hidden-important"), setTimeout(function() { e("#addCardForm").submit() }, 3e3)) : (o.removeClass("hidden-important"), s.removeClass("disabled"), l.removeClass("disabled"), console.log("error getting signature")) }, error: function() { o.removeClass("hidden-important"), s.removeClass("disabled"), l.removeClass("disabled"), console.log("error getting signature") } }) }, showDeleteOverlay: function(t) { var i = "#delete-card-overlay-" + t.target.id;
            e(i).removeClass("hidden") }, clickDeleteYes: function(t) { var i = t.target.id.split("-")[1];
            e.ajax({ url: "/manage-cc-ajax/deleteCard", type: "get", data: { token: i }, success: function(t) { var a = e.parseJSON(t);
                    e("#delete-card-overlay-" + i).addClass("hidden"), 1 == a.isDeleted ? e("#cardDiv-" + i).fadeOut("slow", function() { e("#cardDiv-" + i).remove() }) : (e("#delete-card-error-overlay-" + i).show(), e("#delete-card-error-overlay-" + i).fadeOut(3e3)) }, error: function() { console.log("error getting signature") } }) }, clickDeleteNo: function(t) { var i = "#delete-card-overlay-" + t.target.id.split("-")[1];
            e(i).addClass("hidden") } }) }), define("HomePageMyListView", ["underscore", "jquery", "marionette"], function(e, t, i) {
    return i.ItemView.extend({
        el: "#rightpanel-MyList",
        ui: { innerDownArrow: ".image-icon-down-arrow-inner-list" },
        events: { "click @ui.innerDownArrow": "clickInnerDownArrow" },
        clickInnerDownArrow: function(e) { var i = t(e.currentTarget).attr("id");
            t(e.currentTarget).hasClass("image-icon-down-arrow") && this.getListOfProducts(i) },
        getListOfProducts: function(e) {
            t.ajax({ url: "/lists/getProductList", type: "get", data: { listCode: e }, listId: e }).done(function(e) {
                t("#inner-productList-" + this.listId).html(e)
            })
        }
    })
}), define("MiniCartView", ["underscore", "jquery", "marionette"], function(t, i, a) { return a.ItemView.extend({ el: "#cart-link-header", ui: { miniCartLink: ".js-mini-cart-link", miniCartClose: ".js-mini-cart-close-button" }, events: { "click @ui.miniCartLink": "showMiniCart", "click @ui.miniCartClose": "closeMiniCart" }, showMiniCart: function(e) { e.preventDefault(); var t = this.ui.miniCartLink.data("miniCartUrl"),
                a = this.ui.miniCartLink.data("cartEntryCount");
            0 == a ? window.location.href = "/cart" : i.colorbox({ href: t, initialWidth: "325px", width: "325px", maxWidth: "325px", initialHeight: "125px", maxHeight: "250px", transition: "fade", top: 65, left: "35%", scrolling: !1 }) }, closeMiniCart: function() { e.preventDefault(), this.$el.colorbox.close() } }) }), define("LiteOrderHistoryView", ["underscore", "jquery", "marionette"], function(e, t, i) { return i.ItemView.extend({ el: "#orderHisContainer", ui: { dateRangeMax: "#dateRangeMax", rangeTo: "#rangeTo", rangeFrom: "#rangeFrom" }, events: {}, onRender: function() { this.initLiteOrderHistorySearchForm() }, initLiteOrderHistorySearchForm: function() { this.ui.rangeFrom.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: this.ui.dateRangeMax.val() }), this.ui.rangeTo.datepicker({ showOtherMonths: !0, selectOtherMonths: !0, maxDate: this.ui.dateRangeMax.val() }) } }) }), define("GlobalStorefrontModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { languageIsoCode: "en", numLocationsForAutoCompleteWebsiteConfig: "10" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("VehicleGuideModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { productNumbers: [], toggleFrontDropdownErrorMessage: "You must have front or rear selected.", pageName: "", fitmentSearchString: "", uniqueBrands: "", selectedYear: "", selectedMake: "", selectedModel: "", selectedTrim: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("CartModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { totalBackordered: 0, totalFreightCost: 0, deleteOrderUrl: "", submitOrderForApprovalUrl: "", approveOrderUrl: "", rejectOrderUrl: "", isStaticCart: !1, isValidApprovalCart: !1, primaryKey: "", isCartUpdated: "", approvalsListUrl: "", errorAddingToCartMessage: "Error adding to cart.", quantityRequiredMessage: "Quantity is required.", emailSentMessage: "Email Sent", emailInvalidMessage: "Please enter a valid e-mail", compareProductsMessage: "You can only select a maximum of 3 products before comparing.", minimumProductMessage: "You must select more than 1 product before comparing." } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("LoginViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { shouldShowStoreSelectModal: "false", invalidUserIdMessage: "Please enter User ID", invalidPasswordMessage: "Please enter Password" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("ListViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { invalidSupplierNumberText: "", invalidSupplierNumberCharactersCountText: "", invalidQtyText: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("GlobalSearchViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { searchText: "", hasSearchResults: "false", isValueBuys: "false", uniqueBrands: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("CategoryViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { searchText: "", hasSearchResults: "false", isValueBuys: "false", categoryTitle: "", uniqueBrands: "", selectedFrontWidth: "", selectedRearWidth: "", selectedFrontAspectRatio: "", selectedRearAspectRatio: "", selectedFrontDiameter: "", selectedRearDiameter: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("DashboardViewModel", ["jquery", "backbone"], function(e, t) { return t.Model.extend({ defaults: { landedViaLogin: "false", userId: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("GlobalContentMessagesModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { listAddedMessage: "Added to List", listInvalidStartDateMessage: "Start Date can not be less than Today", startDateEmptyMessage: "Please select start date", listInvalidListNameMessage: "Enter a valid List Name", availableMessage: "Available", unavailableMessage: "Unavailable", textareaCharactersRemainingMessage: "characters remaining", textareaNoCharactersRemainingMessage: "0 characters remaining", selectLocationInvalidMessage: "Please enter a valid location before continuing", passwordValidMessage: "Valid", passwordInvalidLengthMessage: "(password should be at least 6 characters)", passwordMatchMessage: "Match", passwordEmptyMessage: "Please enter password", productActionCreatePackage: "Create Package", productActionAddToPackage: "Add to Package", closeButtonLabel: "Close" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("OrderHistoryModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { searchFromDateMax: null, searchToDateMax: null } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("SelectLocationInputViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { storeLocations: [], maxStoreLocationsForDropdown: 10 } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("LocationDisplaySelectionViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { invalidLocationMessage: "", currentStore: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("QuoteSetupProductProfilesViewModel", ["jquery", "underscore", "backboneAll", "epoxy"], function(e, t, i, a) { var r = i.Model.extend({ baseMarkupPreviewPrice: 100, defaults: { language: "", profileType: "", profileName: "", applyToTypeChoice: "", applyToGroupList: [], applyToGroupSelection: "", applyToBrandList: [], applyToBrandSelection: "", applyToStylesList: [], applyToStyleSelection: "", productsDataList: [], applyToSingleItemItemNumber: "", costRangeChoice: "", costRangeMinCost: null, costRangeMaxCost: null, markupChoice: "", markupGrossProfitPercent: "", markupGrossProfitMinimum: "", markupGrossProfitBaseList: [], markupGrossProfitBaseSelection: "", markupMarkupByProfitPercent: "", markupMarkupByMinimum: "", markupMarkupByBaseList: [], markupMarkupByBaseSelection: "", markupFlatPrice: "", roundingChoice: "", roundingFixedCents: "", taxesList: [], taxesSelected: [], feesList: [], feesSelected: [], servicesList: [], servicesSelected: [], locationNumber: "", isProfileValid: !0, shouldReloadPage: !1 }, initialize: function() { this.initComputeds() }, fetchProductBrandsJson: function() { this.set("applyToBrandList", []), this.set("applyToBrandSelection", "ALL"), this.set("applyToStylesList", []), this.set("applyToStyleSelection", "ALL"); var t; "WHEELS" === this.get("profileType") ? t = "/quote-setup/product-profiles/get-wheel-brands-json/" + this.get("applyToGroupSelection") : "TIRES" === this.get("profileType") && (t = "/quote-setup/product-profiles/get-tire-brands-json/" + this.get("applyToGroupSelection")), e.getJSON(t).done(_.bind(function(e) { this.set("applyToBrandList", e) }, this)).fail(_.bind(this.failFetchBecauseOfSecurityTimeout, this)) }, fetchProductStylesJson: function() { this.set("applyToStylesList", []), this.set("applyToStyleSelection", "ALL"); var t; "WHEELS" === this.get("profileType") ? t = "/quote-setup/product-profiles/get-wheel-styles-json/" + this.get("applyToGroupSelection") + "/" + this.get("applyToBrandSelection") : "TIRES" === this.get("profileType") && (t = "/quote-setup/product-profiles/get-tire-styles-json/" + this.get("applyToGroupSelection") + "/" + this.get("applyToBrandSelection")), e.getJSON(t).done(_.bind(function(e) { this.set("applyToStylesList", e) }, this)).fail(_.bind(this.failFetchBecauseOfSecurityTimeout, this)) }, failFetchBecauseOfSecurityTimeout: function(e, t) { "parsererror" === t && this.set("shouldReloadPage", !0) }, fetchTaxesList: function(t) { t = t || new Function, e.getJSON("/quote-setup/product-profiles/get-taxes-json/" + this.get("locationNumber")).done(_.bind(function(e) { this.set("taxesList", e), t() }, this)) }, fetchFeesList: function(t) { t = t || new Function, e.getJSON("/quote-setup/product-profiles/get-fees-json/" + this.get("locationNumber")).done(_.bind(function(e) { this.set("feesList", e), t() }, this)) }, fetchServicesList: function(t) { t = t || new Function, e.getJSON("/quote-setup/product-profiles/get-services-json/" + this.get("locationNumber")).done(_.bind(function(e) { this.set("servicesList", e), t() }, this)) }, addItemToSelectedAddons: function(e, t) { var i = _.without(this.get(e), t);
            i.push(t), this.set(e, i) }, removeItemFromSelectedAddons: function(e, t) { var i = _.without(this.get(e), t);
            this.set(e, i) }, fetchProductsDataList: function() { var t = this.get("applyToSingleItemItemNumber"),
                i = e.param({ productNumber: t });
            e.getJSON("/quote-setup/product-profiles/get-product-data-json/" + this.get("locationNumber") + "?" + i).done(_.bind(function(e) { this.set("productsDataList", e) }, this)) }, postSave: function() { var t = _.bind(function(e) { var t = e.isProfileValid;
                    this.set("isProfileValid", t), t && this.trigger("post:save:success") }, this),
                i = this.get("isProfileNameValid") && this.get("isApplyToGroupValid") && this.get("isCostRangesValid") && this.get("isSingleItemItemNumberValid") && this.get("isMarkupGrossProfitPercentValid") && this.get("isMarkupMarkupByProfitPercent");
            i && e.ajax({ type: "POST", url: "/quote-setup/product-profiles/save", contentType: "application/json", data: JSON.stringify(this.toJSON()) }).done(t) }, computeds: { isApplyToTypeChoiceAll: { deps: ["applyToTypeChoice"], get: function(e) { return "ALL" === e } }, isApplyToTypeChoiceGroup: { deps: ["applyToTypeChoice"], get: function(e) { return "GROUP" === e } }, isApplyToGroupBrandEnabled: { deps: ["isApplyToTypeChoiceGroup", "applyToGroupSelection", "applyToBrandList"], get: function(e, t, i) { return e && t && i.length > 0 } }, isApplyToGroupStyleEnabled: { deps: ["isApplyToGroupBrandEnabled", "applyToBrandSelection", "applyToStylesList"], get: function(e, t, i) { return e && t && i.length > 0 } }, isApplyToTypeChoiceSingle: { deps: ["applyToTypeChoice"], get: function(e) { return "SINGLE" === e } }, isCostRangeChoiceRange: { deps: ["costRangeChoice"], get: function(e) { return "RANGE" === e } }, isMarkupChoiceGross: { deps: ["markupChoice"], get: function(e) { return "PROFIT" === e } }, isMarkupChoiceMarkup: { deps: ["markupChoice"], get: function(e) { return "MARKUP" === e } }, isMarkupChoiceFlat: { deps: ["markupChoice"], get: function(e) { return "FLAT" === e } }, isRoundingChoiceFixed: { deps: ["roundingChoice"], get: function(e) { return "REPLACE_CENTS" === e } }, markupPreviewPrice: { deps: ["markupChoice", "markupGrossProfitPercent", "markupGrossProfitMinimum", "markupMarkupByProfitPercent", "markupMarkupByMinimum", "markupFlatPrice", "roundingChoice", "roundingFixedCents"], get: function(e, t, i, a, r, o, n, s) { var l = 0; return "PROFIT" === e ? l = this.calcMarkupGrossProfitPrice(t, i) : "MARKUP" === e ? l = this.calcMarkupMarkupPrice(a, r) : "FLAT" === e && (l = o), "fixed" === n ? l = l - l % 1 + s : "ROUND_NEAREST" === n && (l = Math.round(l)), l } }, isProfileNameValid: { deps: ["profileName"], get: function(e) { return e.length > 1 } }, isApplyToGroupValid: { deps: ["isApplyToTypeChoiceGroup", "applyToGroupSelection", "applyToBrandSelection"], get: function(e, t, i) { return !e || e && ("ALL" !== t || "ALL" !== i) } }, isSingleItemItemNumberValid: { deps: ["isApplyToTypeChoiceSingle", "applyToSingleItemItemNumber"], get: function(e, t) { return !e || e && !this._.isNull(t) && t.length > 0 } }, isCostRangesValid: { deps: ["costRangeChoice", "costRangeMinCost", "costRangeMaxCost"], get: function(e, t, i) { return "NONE" == e || null != t && null != i && i > t } }, isMarkupGrossProfitPercentValid: { deps: ["isMarkupChoiceGross", "markupGrossProfitPercent"], get: function(e, t) { return !e || e && t > 0 && 100 > t } }, isMarkupMarkupByProfitPercent: { deps: ["isMarkupChoiceMarkup", "markupMarkupByProfitPercent"], get: function(e, t) { return !e || e && t > 0 } }, cancelUrl: { deps: ["locationNumber", "profileType"], get: function(e, t) { return "/quote-setup/product-profiles/list/" + e + "/" + t.toLowerCase() } }, computedMarkupGrossProfitPercent: { deps: ["markupGrossProfitPercent"], get: function() { return this.get("markupGrossProfitPercent") }, set: function(e) { return e >= 100 && (e = 99.99), 0 >= e && (e = .01), this.set({ markupGrossProfitPercent: null }), { markupGrossProfitPercent: e } } }, computedMarkupMarkupByProfitPercent: { deps: ["markupMarkupByProfitPercent"], get: function() { return this.get("markupMarkupByProfitPercent") }, set: function(e) { return 0 >= e && (e = .01), this.set({ markupMarkupByProfitPercent: null }), { markupMarkupByProfitPercent: e } } } }, calcMarkupGrossProfitPrice: function(e, t) { var i = e / 100,
                a = t,
                r = this.baseMarkupPreviewPrice / (1 - i) - this.baseMarkupPreviewPrice; return r = a > r ? a : r, this.baseMarkupPreviewPrice + r }, calcMarkupMarkupPrice: function(e, t) { var i = e,
                a = t,
                r = this.baseMarkupPreviewPrice * i / 100; return r = a > r ? a : r, this.baseMarkupPreviewPrice + r } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }); return a.Model.mixin(r.prototype), r }), define("ProgramStatusComponentViewModel", ["backbone", "epoxy"], function(e, t) { var i = e.Model.extend({ idAttribute: "_id", urlRoot: "/marketing-program/program-status/", defaults: { currentTier: "", numberOfTiers: "", payoutPeriod: "", leftToBuy: "", daysRemaining: "", mainPurchases: "", mainPurchasePercent: "", flagPurchases: "", flagPurchasePercent: "", startGraph: "", goalFlag: "", endGraph: "", dataType: "", isGoalType: !0, progStatusRewardPara: "" }, initialize: function() {} }); return t.Model.mixin(i.prototype), i }), define("PromotionalLandingPageViewModel", ["backbone"], function(e) { return e.Model.extend({ defaults: {} }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("QuotePreferencesViewModel", ["backboneAll", "epoxy"], function(e, t) { var i = e.Model.extend({ defaults: { locationNumber: "", defaultTireWheelQty: 0, isImageValid: !0, logoImageUrl: "", maxImageWidth: 0, maxImageHeight: 0, invalidImageText: "", invalidImageFileText: "", invalidImageSizeText: "" }, initialize: function() { this.initComputeds() }, computeds: { isDefaultTireWheelQtyValid: { deps: ["defaultTireWheelQty"], get: function(e) { return !(e.length <= 0 || parseFloat(e) <= 0) } }, isLocationNumberAll: { deps: ["locationNumber"], get: function(e) { return "ALL" === e } } }, loadLogoImage: function(e) { var t = new FileReader;
            t.onload = _.bind(function() { this.validateImageLogo(t.result).done(_.bind(function() { this.set("logoImageUrl", t.result) }, this)) }, this), t.onerror = _.bind(function() { this.set("invalidImageText", this.get("invalidImageFileText")), this.set("isImageValid", !1) }, this), t.readAsDataURL(e) }, validateImageLogo: function(e) { var t = new $.Deferred,
                i = new Image; return i.onerror = _.bind(function() { this.set("invalidImageText", this.get("invalidImageFileText")), this.set("isImageValid", !1), t.reject() }, this), i.onload = _.bind(function() { i.height > this.get("maxImageHeight") || i.width > this.get("maxImageWidth") ? (this.set("invalidImageText", this.get("invalidImageSizeText")), this.set("isImageValid", !1), t.reject()) : (this.set("isImageValid", !0), t.resolve()) }, this), i.src = e, t.promise() } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }); return t.Model.mixin(i.prototype), i }), define("BetaOptOutInterstitialComponentViewModel", ["jquery", "underscore", "backboneAll", "epoxy"], function(e, t, i, a) { var r = i.Model.extend({ defaults: { optOutLinkUrl: "", optOutRedirectMethod: "" }, initialize: function() { this.initComputeds() } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }); return a.Model.mixin(r.prototype), r }), define("ProductTypeGuideModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { productNumbers: [], toggleFrontDropdownErrorMessage: "You must have front or rear selected.", pageName: "", fitmentSearchString: "", uniqueBrands: "", selectedProductCategory: "", selectedType: "", selectedFrontDiameter: "", selectedModel: "", selectedTrim: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("RangedFilterMileageCAModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { minPossibleValueMileageCA: "", maxPossibleValueMileageCA: "", selectedLowBoundMileageCA: "", selectedHighBoundMileageCA: "", stepSizeMileageCA: "", lblMileage: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("RangedFilterMileageUSModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { minPossibleValueMileageUS: "", maxPossibleValueMileageUS: "", selectedLowBoundMileageUS: "", selectedHighBoundMileageUS: "", stepSizeMileageUS: "", lblMileage: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("RangedFilterRetailModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { rangeLowerBoundRetail: "", rangeUpperBoundRetail: "", minRetailPrice: "", maxRetailPrice: "", stepSizeRetail: "", lblPrice: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("WheelSizeSearchModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { toggleDropdownErrorMessage: "", pageName: "", SearchString: "", selectedType: "", selectedDiameter: "", selectedWheelType: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("TireSizeSearchModel", ["backbone"], function(e) { return e.Model.extend({ defaults: { toggleDropdownErrorMessage: "", pageName: "", SearchString: "", selectedType: "", selectedTireType: "", selectedFrontWidth: "" } }, { _sharedInstance: null, getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }) }), define("CatalystLoggerController", ["underscore", "marionette"], function(e, t) { return t.Controller.extend({ loggingEnabled: null, textFiltersCollection: null, initialize: function(e) { this.loggingEnabled = e.loggingEnabled || !1, this.textFiltersCollection = e.textFiltersCollection || [] }, log: function(e) { this.loggingEnabled && (this.textFiltersCollection.length > 0 ? this._doesContainFilterPattern(e) && this.forceLog(e) : this.forceLog(e)) }, _doesContainFilterPattern: function(t) { var i = e.find(this.textFiltersCollection, function(e) { var i = new RegExp(e); return i.test(t) }); return !e.isUndefined(i) }, forceLog: function(e) { this.loggingEnabled && console.debug(e) } }) }), define("EventAggregatorController", ["underscore", "backbone.wreqr"], function(e, t) { var i = t.EventAggregator.extend({}); return e.extend(i, { _sharedInstance: null, Event_ItemWasAddedToCartSuccessfully: "itemWasAddedToCartSuccessfully", getSharedInstance: function() { return this._sharedInstance || (this._sharedInstance = new this), this._sharedInstance } }), i }), define("ListModalMediator", ["underscore", "jquery", "marionette", "AddToListModalView", "CreateNewListModalView", "GlobalContentMessagesModel"], function(e, t, i, a, r, o) { return i.Controller.extend({ $eventDelegate: null, $addToListModal: null, $createNewListModal: null, addToListModalView: null, createNewListModalView: null, getProductsAndQtyFunction: null, $lastSelectedAddToListLink: null, globalContentMessagesModel: null, initialize: function(i) { e.extend(this, i), this.initAddToListModalView(), this.initCreateNewListModalView(), this.$eventDelegate.click(e.bind(this.onAddToListLinkClick, this)), this.globalContentMessagesModel = o.getSharedInstance(), -1 !== window.location.pathname.indexOf("addToList") && t("#print-icon-div").hide() }, initAddToListModalView: function() { this.addToListModalView = new a({ el: this.$addToListModal }), this.listenTo(this.addToListModalView, a.Event_addToListConfirmLinkClick, this.onAddToListConfirmLinkClick), this.listenTo(this.addToListModalView, a.Event_createNewListLinkClick, this.onCreateNewListLinkClick), this.addToListModalView.render() }, initCreateNewListModalView: function() { this.createNewListModalView || (this.createNewListModalView = new r({ el: this.$createNewListModal }), this.listenTo(this.createNewListModalView, r.Event_newListSuccessfullyCreated, this.onNewListSuccessfullyCreated), this.createNewListModalView.render()) }, onAddToListLinkClick: function() { t("#orderAddToListForm").submit() }, showListModal: function() { t.get("/lists/getProductLists", e.bind(function(e) { var t = Boolean(Object.keys(e).length > 0);
                t ? this.openAddToListModal(e) : this.openCreateListModal() }, this)) }, openAddToListModal: function(e) { this.addToListModalView.listsData = e, this.addToListModalView.openModal() }, openCreateListModal: function() { this.createNewListModalView.openModal() }, onAddToListConfirmLinkClick: function(e) { var t = !1;
            this.addProductsToList(e.listCode, t) }, getProductsAndQuantity: function() { var e = { product: [], quantity: [] }; return t(".order-data-product-number").each(function() { e.product.push(t(this).val()) }), t(".order-data-quantity").each(function() { e.quantity.push(t(this).val()) }), e }, addProductsToList: function(i, a) { var r = this.getProductsAndQuantity();
            r.listCode = i, t("#add-to-list-error").addClass("hidden"), "" != r.product ? t.ajax({ url: "/lists/addProduct", type: "post", data: t.param(r, !0), async: !1, success: e.bind(function(i) { var o = t.parseJSON(i);
                    0 == o.code ? (this.markProductAsAddedToCart(a), this.refreshListCount(), this.$eventDelegate.trigger(this.constructor.Event_ProductsWereSuccessfullyAddedToList, r)) : 1 === o.code ? console.log(o.errorMessage) : 4 === o.code && (this.showModalErrorMessage(o.message), setTimeout(e.bind(function() { this.resetModalContent(), this.addToListModalView.closeModal() }, this), 2500)) }, this) }) : t("#add-to-list-error").removeClass("hidden") }, markProductAsAddedToCart: function(e) { 0 == e ? (t(".add-to-list-success").show(), t(".add-to-list-success").html(""), t(".add-to-list-success").append('<span class="added-check update" style="display: inline;">' + this.globalContentMessagesModel.get("listAddedMessage") + "</span>")) : (t(".add-to-list-success-create").show(), t(".add-to-list-success-create").html(""), t(".add-to-list-success-create").append('<span class="added-check update" style="display: inline;">' + this.globalContentMessagesModel.get("listAddedMessage") + "</span>")) }, refreshListCount: function() { t.get("/lists/refreshCount", function(e) { t("#lists-menu-item-link-id").replaceWith(e); var i = t("#lists-menu-item-link-id").data("list-count");
                1 == i && 0 == t("#lists-nav-link").length && t("#utility-nav").append('<li class="top-level "><a id="lists-nav-link" class="" onclick="" href="/lists"> Lists</a></li>') }) }, showModalErrorMessage: function(e) { t("#add-to-list-error").prop("textContent", e), modalButtonText = t("#addToListConfirm").prop("textContent"), t("#addToListConfirm").prop("textContent", "CLOSE"), this.$addToListModal.bind("dialogclose", this.onCloseButtonClick), t("#addToListConfirm").on("click", this.onCloseButtonClick), t(".add-to-list-error").show() }, onCloseButtonClick: function() { this.resetModalContent(), this.addToListModalView.closeModal() }, resetModalContent: function() { t("#addToListConfirm").prop("textContent", modalButtonText), t(".add-to-list-error").hide(), t("#addToListConfirm").off("click", this.onCloseButtonClick), this.$addToListModal.unbind("dialogclose", this.onCloseButtonClick) }, onCreateNewListLinkClick: function() { this.openCreateListModal() }, onNewListSuccessfullyCreated: function(e) { var t = !0;
            this.addProductsToList(e.listCode, t) } }, { Event_ProductsWereSuccessfullyAddedToList: "ListModalMediator:ProductsWereSuccessfullyAddedToList" }) });